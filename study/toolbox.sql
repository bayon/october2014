-- phpMyAdmin SQL Dump
-- version 2.11.9.6
-- http://www.phpmyadmin.net
--
-- Host: mysql
-- Generation Time: Jul 20, 2014 at 04:40 AM
-- Server version: 4.1.14
-- PHP Version: 5.2.12

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- Database: `training`
--

-- --------------------------------------------------------

--
-- Table structure for table `Task`
--

CREATE TABLE IF NOT EXISTS `Task` (
  `id` bigint(20) NOT NULL auto_increment,
  `os` varchar(10) NOT NULL default '',
  `title` varchar(30) NOT NULL default '',
  `description` longtext NOT NULL,
  `date` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=124 ;

--
-- Dumping data for table `Task`
--

INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(25, 'iOS', 'AnimationDynamicX', ' \r\n#import "FBFViewController.h"\r\n\r\n//THANKS TO: http://www.raywenderlich.com/50197/uikit-dynamics-tutorial\r\n\r\n// should redo this tutorial at a few different stages...\r\n\r\n\r\n/*\r\n @protocol UIDynamicItem <NSObject>\r\n \r\n @property (nonatomic, readwrite) CGPoint center;\r\n @property (nonatomic, readonly) CGRect bounds;\r\n @property (nonatomic, readwrite) CGAffineTransform transform;\r\n \r\n @end\r\n */\r\n@interface FBFViewController () <UICollisionBehaviorDelegate>\r\n{\r\n	UIDynamicAnimator *_animator;\r\n	UIGravityBehavior *_gravity;\r\n	UICollisionBehavior *_collision;\r\n    \r\n    BOOL _firstContact;\r\n}\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n    \r\n    _collision.collisionDelegate = self;\r\n    \r\n    \r\n    //square\r\n	UIView *square = [[UIView alloc] initWithFrame:\r\n	                  CGRectMake(100, 100, 100, 100)];\r\n	square.backgroundColor = [UIColor grayColor];\r\n	[self.view addSubview:square];\r\n    \r\n    //barrier\r\n    UIView* barrier = [[UIView alloc] initWithFrame:CGRectMake(0, 300, 130, 20)];\r\n    barrier.backgroundColor = [UIColor redColor];\r\n    [self.view addSubview:barrier];\r\n    \r\n    \r\n    \r\n    \r\n    //gravity\r\n	_animator = [[UIDynamicAnimator alloc] initWithReferenceView:self.view];\r\n	_gravity = [[UIGravityBehavior alloc] initWithItems:@[square]];\r\n	[_animator addBehavior:_gravity];\r\n    \r\n	//collision\r\n	//_collision = [[UICollisionBehavior alloc] initWithItems:@[square]];\r\n    //_collision = [[UICollisionBehavior alloc] initWithItems:@[square, barrier]]; //interesting collision\r\n    _collision = [[UICollisionBehavior alloc] initWithItems:@[square]];\r\n	_collision.translatesReferenceBoundsIntoBoundary = YES;\r\n	[_animator addBehavior:_collision];\r\n    \r\n    // add a boundary that coincides with the top edge\r\n    CGPoint rightEdge = CGPointMake(barrier.frame.origin.x +\r\n                                    barrier.frame.size.width, barrier.frame.origin.y);\r\n    [_collision addBoundaryWithIdentifier:@"barrier"\r\n                                fromPoint:barrier.frame.origin\r\n                                  toPoint:rightEdge];\r\n    \r\n    _collision.action =  ^{\r\n        NSLog(@"%@, %@",\r\n              NSStringFromCGAffineTransform(square.transform),\r\n              NSStringFromCGPoint(square.center));\r\n        \r\n    };\r\n    \r\n    //dynamic behavior\r\n    UIDynamicItemBehavior* itemBehaviour = [[UIDynamicItemBehavior alloc] initWithItems:@[square]];\r\n    itemBehaviour.elasticity = 0.6;\r\n    [_animator addBehavior:itemBehaviour];\r\n    \r\n    /*\r\n     \r\n     elasticity – determines how ‘elastic’ collisions will be, i.e. how bouncy or ‘rubbery’ the item behaves in collisions.\r\n     friction – determines the amount of resistance to movement when sliding along a surface.\r\n     density – when combined with size, this will give the overall mass of an item. The greater the mass, the harder it is to accelerate or decelerate an object.\r\n     resistance – determines the amount of resistance to any linear movement. This is in contrast to friction, which only applies to sliding movements.\r\n     angularResistance – determines the amount of resistance to any rotational movement.\r\n     allowsRotation – this is an interesting one that doesn’t model any real-world physics property. With this property set to NO the object will not rotate at all, regardless of any rotational forces that occur.\r\n     */\r\n    \r\n}\r\n\r\n- (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id<UIDynamicItem>)item\r\n   withBoundaryIdentifier:(id<NSCopying>)identifier atPoint:(CGPoint)p {\r\n    NSLog(@"Boundary contact occurred - %@", identifier);\r\n    UIView* view = (UIView*)item;\r\n    view.backgroundColor = [UIColor yellowColor];\r\n    [UIView animateWithDuration:0.3 animations:^{\r\n        view.backgroundColor = [UIColor grayColor];\r\n    }];\r\n    \r\n    if (!_firstContact)\r\n    {\r\n        _firstContact = YES;\r\n        \r\n        UIView* square = [[UIView alloc] initWithFrame:CGRectMake(30, 0, 100, 100)];\r\n        square.backgroundColor = [UIColor grayColor];\r\n        [self.view addSubview:square];\r\n        \r\n        [_collision addItem:square];\r\n        [_gravity addItem:square];\r\n        \r\n        UIAttachmentBehavior* attach = [[UIAttachmentBehavior alloc] initWithItem:view\r\n                                                                   attachedToItem:square];\r\n        [_animator addBehavior:attach];\r\n    }\r\n    \r\n    \r\n    \r\n}\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n	// Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end', '2014-03-01 20:24:54'),
(26, ' iOS', ' CalendarEventX', ' \r\n\r\n//FRAMEWORKS\r\nEventKit\r\nEventKitUI\r\n\r\n// .h\r\n#import <UIKit/UIKit.h>\r\n#import <EventKit/EventKit.h>\r\n#import <EventKitUI/EventKitUI.h>\r\n \r\n\r\n@interface FBFViewController : UIViewController <EKEventEditViewDelegate>\r\n\r\n@property (nonatomic, strong) EKEventStore *ekEventStore;\r\n@property (nonatomic, strong) EKCalendar *ekCalendar;\r\n@property (nonatomic, strong) NSMutableArray *eventsArray;\r\n@property (weak, nonatomic) IBOutlet UIBarButtonItem *addButton;\r\n\r\n- (IBAction)addEvent:(id)sender ;\r\n@end\r\n\r\n\r\n// .m\r\n\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n	/*   FRAMEWORKS: EventKit and EventKitUI  */\r\n	self.ekEventStore = [[EKEventStore alloc] init];\r\n	self.eventsArray = [[NSMutableArray alloc] initWithCapacity:0];\r\n	self.addButton.enabled = NO;\r\n}\r\n\r\n- (void)viewDidAppear:(BOOL)animated {\r\n	[super viewDidAppear:animated];\r\n	[self checkEventStoreAccessForCalendar];\r\n}\r\n\r\n- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {\r\n	if ([[segue identifier] isEqualToString:@"showEventViewController"]) {\r\n		EKEventViewController *eventViewController = (EKEventViewController *)[segue destinationViewController];\r\n		eventViewController.allowsEditing = YES;\r\n	}\r\n}\r\n\r\n#pragma mark -\r\n#pragma mark Calendar Permission\r\n\r\n- (void)checkEventStoreAccessForCalendar {\r\n	EKAuthorizationStatus status = [EKEventStore authorizationStatusForEntityType:EKEntityTypeEvent];\r\n\r\n	switch (status) {\r\n		case EKAuthorizationStatusAuthorized:[self accessGrantedForCalendar];\r\n			break;\r\n\r\n		case EKAuthorizationStatusNotDetermined:[self requestCalendarAccess];\r\n			break;\r\n\r\n		case EKAuthorizationStatusDenied:\r\n		case EKAuthorizationStatusRestricted:\r\n		{\r\n			UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Privacy Warning" message:@"Permission was not granted for Calendar"\r\n			                                               delegate:nil\r\n			                                      cancelButtonTitle:@"OK"\r\n			                                      otherButtonTitles:nil];\r\n			[alert show];\r\n		}\r\n		break;\r\n\r\n		default:\r\n			break;\r\n	}\r\n}\r\n\r\n- (void)requestCalendarAccess {\r\n	[self.ekEventStore requestAccessToEntityType:EKEntityTypeEvent completion: ^(BOOL granted, NSError *error)\r\n	{\r\n	    if (granted) {\r\n	        FBFViewController *__weak weakSelf = self;\r\n	        dispatch_async(dispatch_get_main_queue(), ^{\r\n	            [weakSelf accessGrantedForCalendar];\r\n			});\r\n		}\r\n	}];\r\n}\r\n\r\n- (void)accessGrantedForCalendar {\r\n	self.ekCalendar = self.ekEventStore.defaultCalendarForNewEvents;\r\n	self.addButton.enabled = YES;\r\n	self.eventsArray = [self getCalendarEventsForLast24Hours];\r\n	//[self.tableView reloadData];\r\n}\r\n\r\n#pragma mark -\r\n#pragma mark Get Calendar Events\r\n- (NSMutableArray *)getCalendarEventsForLast24Hours {\r\n	NSDate *startDate = [NSDate date];\r\n	NSDateComponents *tomorrowDateComponents = [[NSDateComponents alloc] init];\r\n	tomorrowDateComponents.day = 1;\r\n	NSDate *endDate = [[NSCalendar currentCalendar] dateByAddingComponents:tomorrowDateComponents\r\n	                                                                toDate:startDate\r\n	                                                               options:0];\r\n	NSArray *calendarArray = [NSArray arrayWithObject:self.ekCalendar];\r\n	NSPredicate *predicate = [self.ekEventStore predicateForEventsWithStartDate:startDate\r\n	                                                                    endDate:endDate\r\n	                                                                  calendars:calendarArray];\r\n	NSMutableArray *events = [NSMutableArray arrayWithArray:[self.ekEventStore eventsMatchingPredicate:predicate]];\r\n\r\n	return events;\r\n}\r\n\r\n#pragma mark -\r\n#pragma mark Add an event\r\n\r\n- (IBAction)addEvent:(id)sender {\r\n	EKEventEditViewController *ekEventEditViewController = [[EKEventEditViewController alloc] init];\r\n	ekEventEditViewController.eventStore = self.ekEventStore;\r\n	ekEventEditViewController.editViewDelegate = self;\r\n	[self presentViewController:ekEventEditViewController animated:YES completion:nil];\r\n}\r\n\r\n#pragma mark -\r\n#pragma mark EKEventEditViewDelegate\r\n\r\n- (void)eventEditViewController:(EKEventEditViewController *)controller\r\n          didCompleteWithAction:(EKEventEditViewAction)action {\r\n	FBFViewController *__weak weakSelf = self;\r\n	[self dismissViewControllerAnimated:YES completion: ^\r\n	{\r\n	    if (action != EKEventEditViewActionCanceled) {\r\n	        dispatch_async(dispatch_get_main_queue(), ^{\r\n	            weakSelf.eventsArray = [self getCalendarEventsForLast24Hours];\r\n			});\r\n		}\r\n	}];\r\n}\r\n\r\n- (EKCalendar *)eventEditViewControllerDefaultCalendarForNewEvents:(EKEventEditViewController *)controller {\r\n	return self.ekCalendar;\r\n}\r\n\r\n@end\r\n', '2014-03-01 20:31:00'),
(27, ' iOS', 'CameraX', ' // .h\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController <UIImagePickerControllerDelegate, UINavigationControllerDelegate>\r\n@property (strong, nonatomic) IBOutlet UIImageView *imageView;\r\n\r\n- (IBAction)takePhoto:  (UIButton *)sender;\r\n- (IBAction)selectPhoto:(UIButton *)sender;\r\n@end\r\n\r\n\r\n// .m\r\n\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n    \r\n	if (![UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {\r\n		UIAlertView *myAlertView = [[UIAlertView alloc] initWithTitle:@"Error"\r\n		                                                      message:@"Device has no camera"\r\n		                                                     delegate:nil\r\n		                                            cancelButtonTitle:@"OK"\r\n		                                            otherButtonTitles:nil];\r\n        \r\n		[myAlertView show];\r\n	}\r\n}\r\n\r\n- (void)viewDidAppear:(BOOL)animated {\r\n	[super viewDidAppear:animated];\r\n}\r\n\r\n- (IBAction)takePhoto:(UIButton *)sender {\r\n	UIImagePickerController *picker = [[UIImagePickerController alloc] init];\r\n	picker.delegate = self;\r\n	picker.allowsEditing = YES;\r\n	picker.sourceType = UIImagePickerControllerSourceTypeCamera;\r\n    \r\n	[self presentViewController:picker animated:YES completion:NULL];\r\n}\r\n\r\n- (IBAction)selectPhoto:(UIButton *)sender {\r\n	UIImagePickerController *picker = [[UIImagePickerController alloc] init];\r\n	picker.delegate = self;\r\n	picker.allowsEditing = YES;\r\n	picker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;\r\n    \r\n	[self presentViewController:picker animated:YES completion:NULL];\r\n}\r\n\r\n#pragma mark - Image Picker Controller delegate methods\r\n\r\n- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {\r\n	UIImage *chosenImage = info[UIImagePickerControllerEditedImage];\r\n	self.imageView.image = chosenImage;\r\n    \r\n	[picker dismissViewControllerAnimated:YES completion:NULL];\r\n}\r\n\r\n- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {\r\n	[picker dismissViewControllerAnimated:YES completion:NULL];\r\n}\r\n\r\n\r\n@end', '2014-03-01 20:32:52'),
(28, ' iOS', ' ContactsX', ' \r\n\r\n//FRAMEWORKS\r\nAddressBook\r\nAddressBookUI\r\n\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import <AddressBook/AddressBook.h>\r\n#import <AddressBookUI/AddressBookUI.h>\r\n\r\n@interface FBFViewController : UIViewController <ABPeoplePickerNavigationControllerDelegate,ABPersonViewControllerDelegate,\r\nABNewPersonViewControllerDelegate, ABUnknownPersonViewControllerDelegate>\r\n{\r\n    \r\n}\r\n\r\n-(IBAction)createPerson:(id)sender;\r\n-(IBAction)readContacts:(id)sender;\r\n-(NSArray *)getAllContacts;\r\n@end\r\n\r\n\r\n// VC.m\r\n#import "Person.h"\r\n\r\n\r\n@interface FBFViewController (){\r\n    //read all objects\r\n    NSMutableArray *_peopleObjects;\r\n    ABAddressBookRef _addressBook;\r\n}\r\n\r\n\r\n@property (nonatomic, retain) IBOutlet UIButton *createContactButton;\r\n@property (nonatomic, retain) IBOutlet UIButton *readContactsButton;\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n@synthesize   createContactButton;\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n	 \r\n}\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n	// Dispose of any resources that can be recreated.\r\n}\r\n\r\n- (IBAction)readContacts:(id)sender {\r\n    [self readAllContacts];\r\n    \r\n    // VIEW ALL CONTACTS IN THE LOG.\r\n    \r\n    for(id object in _peopleObjects){\r\n        ABRecordRef ref =  (__bridge ABRecordRef)(object);\r\n        NSString *compositeName  =(__bridge  NSString*) ABRecordCopyCompositeName(ref);\r\n        NSLog(@"compositeName: %@", compositeName);\r\n        \r\n        NSString *phoneNumber = @"";\r\n        ABMultiValueRef phoneNumbers = ABRecordCopyValue(ref, kABPersonPhoneProperty);\r\n        if(ABMultiValueGetCount(phoneNumbers)>0){\r\n            phoneNumber = (__bridge NSString *) ABMultiValueCopyValueAtIndex(phoneNumbers, 0);\r\n        }\r\n        NSLog(@"phoneNumber: %@", phoneNumber);\r\n        \r\n        NSString *email= @"";\r\n        ABMultiValueRef emails = ABRecordCopyValue(ref, kABPersonEmailProperty);\r\n        if(ABMultiValueGetCount(emails)>0){\r\n            email= (__bridge NSString *) ABMultiValueCopyValueAtIndex(emails, 0);\r\n        }\r\n        NSLog(@"email: %@", email);\r\n    }\r\n    \r\n    \r\n    \r\n}\r\n\r\n-(void)readAllContacts{\r\n    CFErrorRef error;\r\n    _addressBook = ABAddressBookCreateWithOptions(NULL, &error);\r\n    [self checkAddressBookAccess];\r\n    \r\n    _peopleObjects = (__bridge NSMutableArray *)ABAddressBookCopyArrayOfAllPeople(_addressBook);\r\n    \r\n    \r\n}\r\n#pragma mark -\r\n#pragma mark Address Book Access\r\n// Check the authorization status of our application for Address Book\r\n-(void)checkAddressBookAccess\r\n{\r\n    switch (ABAddressBookGetAuthorizationStatus())\r\n    {\r\n            // Update our UI if the user has granted access to their Contacts\r\n        case  kABAuthorizationStatusAuthorized:\r\n            _peopleObjects = (__bridge NSMutableArray *)ABAddressBookCopyArrayOfAllPeople(_addressBook);\r\n           // [self.tableView reloadData];\r\n            break;\r\n            // Prompt the user for access to Contacts if there is no definitive answer\r\n        case  kABAuthorizationStatusNotDetermined :\r\n            [self requestAddressBookAccess];\r\n            break;\r\n            // Display a message if the user has denied or restricted access to Contacts\r\n        case  kABAuthorizationStatusDenied:{\r\n            \r\n            \r\n            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Privacy Warning"\r\n                                                            message:@"Permission was not granted for Contacts. Please grant permission by going to \\nSettings->Privacy->Contacts and enabling Whozoo to access your contacts."\r\n                                                           delegate:nil\r\n                                                  cancelButtonTitle:@"Cancel"\r\n                                                  otherButtonTitles:@"OK", nil];\r\n            [alert show];\r\n        }\r\n            break;\r\n        case  kABAuthorizationStatusRestricted:\r\n        {\r\n            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Privacy Warning"\r\n                                                            message:@"Permission was not granted for Contacts."\r\n                                                           delegate:nil\r\n                                                  cancelButtonTitle:@"OK"\r\n                                                  otherButtonTitles:nil];\r\n            [alert show];\r\n        }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n// Prompt the user for access to their Address Book data\r\n-(void)requestAddressBookAccess\r\n{\r\n    ABAddressBookRequestAccessWithCompletion(_addressBook, ^(bool granted, CFErrorRef error)\r\n                                             {\r\n                                                 if (granted)\r\n                                                 {\r\n                                                     dispatch_async(dispatch_get_main_queue(), ^{\r\n                                                         \r\n                                                     });\r\n                                                 }\r\n                                             });\r\n}\r\n\r\n\r\n- (IBAction)createPerson:(id)sender {\r\n	// THIS IS THE APPLE CONTACTS APP WAY.\r\n	// [self showNewPersonViewController];\r\n	[self addContactProgramatically];\r\n}\r\n\r\n- (void)addContactProgramatically {\r\n	Person *person = [[Person alloc]init];\r\n	person.phone = @"555-550 3645";\r\n	person.firstName = @"JOE";\r\n\r\n	CFErrorRef error = NULL;\r\n	NSLog(@"%@", [self description]);\r\n	ABAddressBookRef iPhoneAddressBook = ABAddressBookCreate();\r\n	ABRecordRef newPerson = ABPersonCreate();\r\n	ABRecordSetValue(newPerson, kABPersonFirstNameProperty, (__bridge CFTypeRef)(person.firstName), &error);\r\n	//ABRecordSetValue(newPerson, kABPersonLastNameProperty, people.lastname, &error);\r\n	ABMutableMultiValueRef multiPhone =     ABMultiValueCreateMutable(kABMultiStringPropertyType);\r\n	ABMultiValueAddValueAndLabel(multiPhone, (__bridge CFTypeRef)(person.phone), kABPersonPhoneMainLabel, NULL);\r\n	//ABMultiValueAddValueAndLabel(multiPhone, people.other, kABOtherLabel, NULL);\r\n	ABRecordSetValue(newPerson, kABPersonPhoneProperty, multiPhone, nil);\r\n	CFRelease(multiPhone);\r\n	// ...\r\n	// Set other properties\r\n	// ...\r\n	ABAddressBookAddRecord(iPhoneAddressBook, newPerson, &error);\r\n\r\n	ABAddressBookSave(iPhoneAddressBook, &error);\r\n	CFRelease(newPerson);\r\n	CFRelease(iPhoneAddressBook);\r\n	if (error != NULL) {\r\n		CFStringRef errorDesc = CFErrorCopyDescription(error);\r\n		NSLog(@"Contact not saved: %@", errorDesc);\r\n		CFRelease(errorDesc);\r\n	}\r\n}\r\n\r\n// THIS IS THE APPLE CONTACTS APP WAY.\r\n- (void)showNewPersonViewController {\r\n	ABNewPersonViewController *picker = [[ABNewPersonViewController alloc] init];\r\n	picker.newPersonViewDelegate = self;\r\n\r\n	UINavigationController *navigation = [[UINavigationController alloc] initWithRootViewController:picker];\r\n	[self presentViewController:navigation animated:YES completion:nil];\r\n}\r\n\r\n\r\n@end\r\n\r\n\r\n// Person.h\r\n\r\n@interface Person : NSObject\r\n{\r\n	\r\n    NSString *firstName;\r\n    NSString * phone;\r\n    NSString *zip;\r\n	NSString *state;\r\n	NSString *address2;\r\n	NSString *address1;\r\n	NSString *country;\r\n	NSString *city;\r\n}\r\n@property (nonatomic, retain) NSString *zip;\r\n@property (nonatomic, retain) NSString *state;\r\n@property (nonatomic, retain) NSString *address2;\r\n@property (nonatomic, retain) NSString *address1;\r\n@property (nonatomic, retain) NSString *country;\r\n@property (nonatomic, retain) NSString *city;\r\n@property (nonatomic, retain) NSString *firstName;\r\n@property (nonatomic, retain) NSString *phone;\r\n\r\n \r\n\r\n@end\r\n\r\n\r\n// Person.m\r\n\r\n#import "Person.h"\r\n\r\n@implementation Person\r\n@synthesize city, address2, state, zip, country, address1, firstName, phone ;\r\n \r\n\r\n@end\r\n', '2014-03-01 20:39:45'),
(29, ' iOS', ' DatePickerX', ' \r\n\r\n// VC.m\r\n\r\n\r\n@implementation FBFViewController\r\n\r\n/*! Primary view has been loaded for this view controller\r\n */\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n\r\n    CGRect pickerFrame = CGRectMake(0,250,0,0);\r\n    UIDatePicker *myPicker = [[UIDatePicker alloc] initWithFrame:pickerFrame];\r\n    [myPicker addTarget:self action:@selector(pickerChanged:) forControlEvents:UIControlEventValueChanged];\r\n    [self.view addSubview:myPicker];\r\n    \r\n}\r\n\r\n- (void)pickerChanged:(id)sender\r\n{\r\n    NSLog(@"value: %@",[sender date]);\r\n}\r\n\r\n@end\r\n', '2014-03-03 13:34:41'),
(30, ' iOS', ' DragAndDropX', ' \r\n// VC.h\r\n\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController\r\n{\r\n    \r\n}\r\n- (IBAction) imageMoved:(id) sender withEvent:(UIEvent *) event;\r\n\r\n@end\r\n\r\n\r\n// VC.m\r\n\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n    NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n",__FUNCTION__);\r\n    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];\r\n     button.frame = CGRectMake(30.0f,50.0f,50.0f,50.0f);\r\n    [button addTarget:self action:@selector(imageTouch:withEvent:) forControlEvents:UIControlEventTouchDown];\r\n    [button addTarget:self action:@selector(imageMoved:withEvent:) forControlEvents:UIControlEventTouchDragInside];\r\n    [button setImage:[UIImage imageNamed:@"drawing.png"] forState:UIControlStateNormal];\r\n    [self.view addSubview:button];\r\n    \r\n    \r\n}\r\n- (IBAction) imageMoved:(id) sender withEvent:(UIEvent *) event\r\n{\r\n    NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n",__FUNCTION__);\r\n    CGPoint point = [[[event allTouches] anyObject] locationInView:self.view];\r\n    UIControl *control = sender;\r\n    control.center = point;\r\n}\r\n- (IBAction) imageTouch:(id) sender withEvent:(UIEvent *) event{\r\n     NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n",__FUNCTION__);\r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end', '2014-03-01 20:43:39'),
(31, ' iOS', ' EmailX', ' // FRAMEWORKS\r\nMessageUI\r\n\r\n// VC.h\r\n#import <UIKit/UIKit.h>\r\n#import <MessageUI/MFMailComposeViewController.h>\r\n\r\n@interface FBFViewController : UIViewController  \r\n@end\r\n\r\n\r\n// VC.m\r\n#import "FBFViewController.h"\r\n#import <MessageUI/MessageUI.h>\r\n\r\n@interface FBFViewController ()\r\n{\r\n    UILabel *label_1 ;\r\n}\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n    \r\n    \r\n    label_1 = [[UILabel alloc] initWithFrame:CGRectMake(200, 150, 300, 50)];\r\n    label_1.backgroundColor = [UIColor clearColor];\r\n    [label_1 setText:@"...email? ..."];\r\n    [self.view addSubview:label_1];\r\n\r\n    //send a message\r\n    if ([MFMailComposeViewController canSendMail]) {\r\n        // Show the composer\r\n        MFMailComposeViewController* controller = [[MFMailComposeViewController alloc] init];\r\n        controller.mailComposeDelegate = self;\r\n        [controller setSubject:@"My Subject"];\r\n        [controller setMessageBody:@"Hello there." isHTML:NO];\r\n        if (controller) [self presentModalViewController:controller animated:YES];\r\n    } else {\r\n        // Handle the error\r\n    }\r\n   \r\n}\r\n\r\n\r\n- (void)mailComposeController:(MFMailComposeViewController*)controller\r\n          didFinishWithResult:(MFMailComposeResult)result\r\n                        error:(NSError*)error;\r\n{\r\n    if (result == MFMailComposeResultSent) {\r\n        NSLog(@"It''s away!");\r\n        [label_1 setText:@"It''s away!"];\r\n    }\r\n    [self dismissModalViewControllerAnimated:YES];\r\n}\r\n\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end\r\n', '2014-03-01 20:46:37'),
(32, ' iOS', ' FileX', ' // VC.m\r\n\r\n#import "FBFAppDelegate.h"\r\n@interface FBFViewController ()\r\n{\r\n	NSData *data;\r\n}\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n\r\n	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,\r\n	                                                     NSUserDomainMask, YES);\r\n	NSString *documentsDirectory = [paths objectAtIndex:0];\r\n	NSString *fileName = @"mySavedText.txt";\r\n	NSString *path = [documentsDirectory stringByAppendingPathComponent:fileName];\r\n	//NSString to NSData\r\n	NSString *str = @"Hi, I need to save some data to a file.";\r\n	data = [str dataUsingEncoding:NSUTF8StringEncoding];\r\n	[data writeToFile:path atomically:YES];\r\n	[self loadFile:fileName];\r\n}\r\n\r\n- (void)loadFile:(NSString *)filename {\r\n	NSString *fullFilePath = [self getFullFilePath:filename];\r\n\r\n	if ([[NSFileManager defaultManager] fileExistsAtPath:fullFilePath]) {\r\n		NSLog(@"File found");\r\n		NSLog(@"Data:%@", [[NSString alloc] initWithData:[NSData dataWithContentsOfFile:fullFilePath] encoding:NSASCIIStringEncoding]);\r\n	}\r\n	else {\r\n		UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"File error!" message:@"An error occured when trying to load the selected file." delegate:self cancelButtonTitle:@"OK!" otherButtonTitles:nil, nil];\r\n		[alert show];\r\n	}\r\n}\r\n\r\n- (NSString *)getFullFilePath:(NSString *)filename {\r\n	NSArray *paths = NSSearchPathForDirectoriesInDomains\r\n	        (NSDocumentDirectory, NSUserDomainMask, YES);\r\n	NSString *documentsDirectory = [paths objectAtIndex:0];\r\n	NSString *fullFilePath = [documentsDirectory stringByAppendingPathComponent:filename];\r\n\r\n	return fullFilePath;\r\n}\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n}\r\n\r\n@end', '2014-03-01 20:48:06'),
(33, 'iOS', ' FormX', ' // VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController <UITextFieldDelegate,UIGestureRecognizerDelegate>\r\n{\r\n    UITapGestureRecognizer *tap;\r\n}\r\n @property  (nonatomic,retain) UITapGestureRecognizer *tap;\r\n-(IBAction)submit:(id)sender;\r\n\r\n@end\r\n \r\n \r\n // VC.m\r\n \r\n@interface FBFViewController ()\r\n@property (nonatomic, retain) IBOutlet UIButton *submitButton;\r\n@property (nonatomic, retain) IBOutlet UITextField *textField1;\r\n@property (nonatomic, retain) IBOutlet UITextField *textField2;\r\n@end\r\n\r\n@implementation FBFViewController\r\n@synthesize submitButton, textField1, textField2, tap;\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n    textField1.delegate = self;\r\n    [textField1 setPlaceholder:@"AlphaNumeric"];\r\n    [textField1 setKeyboardType:UIKeyboardTypeDefault];\r\n    \r\n    textField2.delegate = self;\r\n    [textField2 setPlaceholder:@"Numeric"];\r\n    [textField2 setKeyboardType:UIKeyboardTypeNumberPad];\r\n    //many UIKeyboardTypes: decimal, email, websearch, etc...\r\n    \r\n    tap = [[UITapGestureRecognizer alloc]\r\n           initWithTarget:self\r\n           action:@selector(dismissKeyboard)];\r\n    [self.view addGestureRecognizer:tap];\r\n}\r\n-(IBAction)submit:(id)sender{\r\n    [self getFormSubmission];\r\n}\r\n-(void)getFormSubmission{\r\n    NSLog(@"%@",textField1.text);\r\n    NSLog(@"%@",textField2.text);\r\n    \r\n}\r\n// "Return Key" dismiss keyboard\r\n- (BOOL)textFieldShouldReturn:(UITextField *)textField {\r\n    [textField1 resignFirstResponder];\r\n    [textField2 resignFirstResponder];\r\n    \r\n    return YES;\r\n}\r\n// "Tap" dismiss keyboard\r\n-(void)dismissKeyboard {\r\n    [textField1 resignFirstResponder];\r\n    [textField2 resignFirstResponder];\r\n    \r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n}\r\n\r\n@end\r\n', '2014-03-01 20:49:51'),
(34, ' iOS', ' GoogleAnalyticsXios', ' Google Analytics\r\n\r\n// FRAMEWORKS\r\nSystemConfig\r\nlibz.dylib ????\r\nlibGoogleAnalyticsServices\r\n\r\n\r\n// LIBRARY HEADERS: bring over all the header files in the google ANalytics library from the ios SDK download.\r\n\r\n\r\n// APPDELEGATE:\r\n\r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\r\n{\r\n    // Override point for customization after application launch.\r\n    [GAI sharedInstance].trackUncaughtExceptions = YES;\r\n    [[GAI sharedInstance].logger setLogLevel:kGAILogLevelVerbose];\r\n    [GAI sharedInstance].dispatchInterval = 20;\r\n    id<GAITracker> tracker = [[GAI sharedInstance] trackerWithTrackingId:@"UA-48531016-1"];\r\n    return YES;\r\n}\r\n\r\n\r\n// VIEWCONTROLLER.h\r\n#import "GAIDictionaryBuilder.h"\r\n\r\n\r\n-(IBAction)logButtonPress:(UIButton *)button;\r\n\r\n\r\n// VIEWCONTROLLER..m\r\n\r\n\r\n- (void)viewDidAppear:(BOOL)animated {\r\n    [super viewDidAppear:animated];\r\n    \r\n    id<GAITracker> tracker = [[GAI sharedInstance] defaultTracker];\r\n    [tracker set:kGAIScreenName value:@"Stopwatch"];\r\n    [tracker send:[[GAIDictionaryBuilder createAppView] build]];\r\n}\r\n-(IBAction)logButtonPress:(UIButton *)button{\r\n    \r\n    id<GAITracker> tracker = [[GAI sharedInstance] defaultTracker];\r\n    \r\n    [tracker set:kGAIScreenName value:@"Stopwatch"];\r\n    [tracker send:[[GAIDictionaryBuilder createEventWithCategory:@"UX"\r\n                                                          action:@"touch"\r\n                                                           label:[button.titleLabel text]\r\n                                                           value:nil] build]];\r\n    [tracker set:kGAIScreenName value:nil];\r\n}', '2014-03-01 20:51:22'),
(35, ' iOS', ' GraphX', ' -see the real thing, complicated.', '2014-03-01 20:53:33'),
(36, ' iOS', ' LocationX', ' // FRAMEWORKS\r\nCoreLocation\r\n\r\n// MainVC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import "XLocationController.h"\r\n\r\n@interface MainViewController : UIViewController <XLocationControllerDelegate, UITextViewDelegate > {\r\n    IBOutlet UITextView *textView;\r\n	XLocationController *locationController;\r\n}\r\n-(IBAction)getLocation:(id)sender;\r\n\r\n- (void)locationUpdate:(CLLocation *)location;\r\n- (void)locationError:(NSError *)error;\r\n\r\n@end\r\n\r\n// MainVC.m\r\n\r\n\r\n#import "MainViewController.h"\r\n\r\n\r\n@implementation MainViewController\r\n\r\n- (void)viewDidLoad {\r\n	locationController = [[XLocationController alloc] init];\r\n	locationController.delegate = self;\r\n}\r\n\r\n-(IBAction)getLocation:(id)sender;\r\n{\r\n    [locationController.locationManager startUpdatingLocation];\r\n}\r\n \r\n- (void)locationUpdate:(CLLocation *)location {\r\n    [textView setText:[location description]];\r\n}\r\n\r\n- (void)locationError:(NSError *)error {\r\n     [textView setText:[error description]];\r\n}\r\n\r\n\r\n\r\n- (void)didReceiveMemoryWarning {\r\n    [super didReceiveMemoryWarning];\r\n}\r\n@end\r\n\r\n\r\n// LocationController.h\r\n#import <CoreLocation/CoreLocation.h>\r\n\r\n@protocol XLocationControllerDelegate <NSObject>\r\n@required\r\n- (void)locationUpdate:(CLLocation *)location; \r\n- (void)locationError:(NSError *)error;\r\n@end\r\n\r\n@interface XLocationController : NSObject <CLLocationManagerDelegate> {\r\n	CLLocationManager *locationManager;\r\n}\r\n\r\n@property (nonatomic, retain) CLLocationManager *locationManager;\r\n@property (nonatomic, assign) id <XLocationControllerDelegate> delegate;\r\n\r\n- (void)locationManager:(CLLocationManager *)manager\r\n	didUpdateToLocation:(CLLocation *)newLocation\r\n		   fromLocation:(CLLocation *)oldLocation;\r\n\r\n- (void)locationManager:(CLLocationManager *)manager\r\n	   didFailWithError:(NSError *)error;\r\n\r\n@end\r\n\r\n\r\n// LocationController.m\r\n#import "XLocationController.h"\r\n\r\n@implementation XLocationController\r\n\r\n@synthesize locationManager;\r\n@synthesize delegate;\r\n\r\n- (id) init {\r\n	self = [super init];\r\n	if (self != nil) {\r\n		self.locationManager = [[CLLocationManager alloc] init] ;\r\n		self.locationManager.delegate = self; // send loc updates to myself\r\n	}\r\n	return self;\r\n}\r\n\r\n- (void)locationManager:(CLLocationManager *)manager\r\n	didUpdateToLocation:(CLLocation *)newLocation\r\n		   fromLocation:(CLLocation *)oldLocation\r\n{\r\n	[self.delegate locationUpdate:newLocation];\r\n}\r\n\r\n\r\n- (void)locationManager:(CLLocationManager *)manager\r\n	   didFailWithError:(NSError *)error\r\n{\r\n	[self.delegate locationError:error];\r\n}\r\n\r\n\r\n@end\r\n\r\n\r\n\r\n', '2014-03-01 20:56:13'),
(37, ' iOS', ' MapLongLatX', ' // frameworks\r\nMapKit\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import <MapKit/MapKit.h>\r\n@interface FBFViewController : UIViewController\r\n{\r\n    MKMapView *mapView;\r\n}\r\n\r\n@end\r\n\r\n// VC.m\r\n\r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	\r\n    \r\n    mapView = [[MKMapView alloc] initWithFrame:self.view.bounds];\r\n    mapView.mapType = MKMapTypeHybrid;\r\n    \r\n    CLLocationCoordinate2D coord = {.latitude =  61.2180556, .longitude =  -149.9002778};\r\n    MKCoordinateSpan span = {.latitudeDelta =  0.2, .longitudeDelta =  0.2};\r\n    MKCoordinateRegion region = {coord, span};\r\n    \r\n    [mapView setRegion:region];\r\n    [self.view addSubview:mapView];\r\n    \r\n    \r\n    \r\n    \r\n    \r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end\r\n\r\n\r\n\r\n\r\n\r\n', '2014-03-01 20:58:47'),
(38, ' iOS', ' MapX', ' \r\n\r\n//Frameworks\r\n\r\nMapKit\r\nCoreLocation\r\n\r\n.h ----------------------\r\n#import <UIKit/UIKit.h>\r\n#import <MapKit/MapKit.h>\r\n#import <CoreLocation/CoreLocation.h>\r\n\r\n@interface FBFViewController : UIViewController <MKMapViewDelegate, CLLocationManagerDelegate>\r\n\r\n@property (nonatomic, retain)   IBOutlet MKMapView *mapView;\r\n@property (nonatomic, retain)   CLLocationManager *locationManager;\r\n@property (nonatomic, weak)     IBOutlet UIBarButtonItem *getAddressButton;\r\n@property (nonatomic, weak)     IBOutlet UIButton *weblink;\r\n@property (nonatomic, strong)   CLGeocoder *geocoder;\r\n@property (nonatomic, strong)   MKPlacemark *placemark;\r\n@property (nonatomic, strong)   IBOutlet UIImageView *tassleGraphic;\r\n\r\n@end\r\n\r\n\r\n\r\n.m --------------------------------\r\n\r\n\r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n\r\n@synthesize mapView,locationManager,geocoder,getAddressButton,placemark = _placemark,weblink, tassleGraphic;\r\n\r\n\r\n\r\n- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil\r\n{\r\n    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];\r\n    if (self) {\r\n        // Custom initialization\r\n        \r\n        [self resetOrientation];\r\n        \r\n        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(detectOrientation2) name:@"UIDeviceOrientationDidChangeNotification2" object:nil];\r\n        \r\n    }\r\n    return self;\r\n}\r\n-(UIStatusBarStyle)preferredStatusBarStyle{\r\n    return UIStatusBarStyleLightContent;\r\n}\r\n\r\n\r\n- (IBAction)openMocuraDotCom:(id)sender\r\n{\r\n    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:@"http://www.mocura.com"]];\r\n}\r\n-(void)resetOrientation{\r\n    \r\n    //tassleGraphic = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"logo.png"]];\r\n    //[self.view addSubview:tassleGraphic];\r\n    //[self.view bringSubviewToFront: tassleGraphic];\r\n    \r\n    \r\n}\r\n// orientation: detect change in layout, portrait, landscape...\r\n-(void) detectOrientation2\r\n{\r\n    if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationLandscapeLeft)\r\n    {\r\n        //Set up left\r\n        [self resetOrientation];\r\n    } else if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationLandscapeRight)\r\n    {\r\n        //Set up Right\r\n        [self resetOrientation];\r\n    } else if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationPortrait || [[UIDevice currentDevice] orientation] == UIDeviceOrientationPortraitUpsideDown)\r\n    {\r\n        //It''s portrait time!\r\n        [self resetOrientation];\r\n    }\r\n}\r\n- (void)viewWillAppear:(BOOL)animated {\r\n    [super viewWillAppear:animated];\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	// Create a geocoder and save it for later.\r\n    self.geocoder = [[CLGeocoder alloc] init];\r\n    \r\n    self.mapView.delegate = self;\r\n    locationManager = [[CLLocationManager alloc] init];\r\n    [locationManager setDelegate:self];\r\n    [locationManager setDistanceFilter:kCLDistanceFilterNone];\r\n    [locationManager setDesiredAccuracy:kCLLocationAccuracyBest];\r\n    [self.mapView setShowsUserLocation:YES];\r\n    \r\n    [self getLocationByWrittenAddress];\r\n    \r\n    \r\n}\r\n\r\n-(void)getLocationByWrittenAddress{\r\n    NSString *location = @" 118 E. Main St., Louisville, KY 40202";\r\n    //CLGeocoder *geocoder = [[CLGeocoder alloc] init];\r\n    geocoder = [[CLGeocoder alloc] init];\r\n    [geocoder geocodeAddressString:location\r\n                 completionHandler:^(NSArray* placemarks, NSError* error){\r\n                     if (placemarks && placemarks.count > 0) {\r\n                         CLPlacemark *topResult = [placemarks objectAtIndex:0];\r\n                         MKPlacemark *placemark = [[MKPlacemark alloc] initWithPlacemark:topResult];\r\n                         \r\n                         MKCoordinateRegion region = self.mapView.region;\r\n                         //region.center = placemark.region.center;\r\n                         region.span.longitudeDelta /= 8.0;\r\n                         region.span.latitudeDelta /= 8.0;\r\n                         \r\n                         [self.mapView setRegion:region animated:YES];\r\n                         [self.mapView addAnnotation:placemark];\r\n                     }\r\n                 }\r\n     ];\r\n}\r\n\r\n\r\n//zoom into location\r\n- (void)mapView:(MKMapView *)mv didAddAnnotationViews:(NSArray *)views\r\n{\r\n    MKAnnotationView *annotationView = [views objectAtIndex:0];\r\n    id<MKAnnotation> mp = [annotationView annotation];\r\n    MKCoordinateRegion region = MKCoordinateRegionMakeWithDistance([mp coordinate] ,250,250);\r\n    \r\n    [mv setRegion:region animated:YES];\r\n}\r\n\r\n\r\n- (void)mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation\r\n{\r\n	// Center the map the first time we get a real location change.\r\n	static dispatch_once_t centerMapFirstTime;\r\n    \r\n	if ((userLocation.coordinate.latitude != 0.0) && (userLocation.coordinate.longitude != 0.0)) {\r\n		dispatch_once(&centerMapFirstTime, ^{\r\n			[self.mapView setCenterCoordinate:userLocation.coordinate animated:YES];\r\n		});\r\n	}\r\n	\r\n	// Lookup the information for the current location of the user.\r\n    [self.geocoder reverseGeocodeLocation:self.mapView.userLocation.location completionHandler:^(NSArray *placemarks, NSError *error) {\r\n		if ((placemarks != nil) && (placemarks.count > 0)) {\r\n			// If the placemark is not nil then we have at least one placemark. Typically there will only be one.\r\n			_placemark = [placemarks objectAtIndex:0];\r\n			\r\n			// we have received our current location, so enable the "Get Current Address" button\r\n			[self.getAddressButton setEnabled:YES];\r\n		}\r\n		else {\r\n			// Handle the nil case if necessary.\r\n		}\r\n    }];\r\n}\r\n\r\n@end\r\n\r\n.xib -------------------------------\r\nMKMapView \r\nbind as delegate\r\nand bind to sibling in the code.\r\n', '2014-03-01 20:59:58'),
(39, ' iOS', 'MotionX', '// FRAMEWORKS\r\nQuartzCore\r\nCoreMotion\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import <CoreMotion/CoreMotion.h>\r\n#import <QuartzCore/CAAnimation.h>\r\n\r\n#define kUpdateInterval (1.0f / 60.0f)\r\n\r\n@interface FBFViewController : UIViewController\r\n\r\n@property (strong, nonatomic) IBOutlet UIImageView *pacman;\r\n\r\n@property (strong, nonatomic) IBOutlet UIImageView *exit;\r\n\r\n@property (strong, nonatomic) IBOutletCollection(UIImageView) NSArray *wall;\r\n\r\n@property (assign, nonatomic) CGPoint currentPoint;\r\n@property (assign, nonatomic) CGPoint previousPoint;\r\n@property (assign, nonatomic) CGFloat pacmanXVelocity;\r\n@property (assign, nonatomic) CGFloat pacmanYVelocity;\r\n@property (assign, nonatomic) CGFloat angle;\r\n@property (assign, nonatomic) CMAcceleration acceleration;\r\n@property (strong, nonatomic) CMMotionManager  *motionManager;\r\n@property (strong, nonatomic) NSOperationQueue *queue;\r\n@property (strong, nonatomic) NSDate *lastUpdateTime;\r\n\r\n\r\n@end\r\n\r\n\r\n// VC.m\r\n\r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n    // Movement of pacman\r\n    \r\n	self.lastUpdateTime = [[NSDate alloc] init];\r\n	self.currentPoint  = CGPointMake(0, 144);\r\n	self.motionManager = [[CMMotionManager alloc]  init];\r\n	self.queue         = [[NSOperationQueue alloc] init];\r\n	self.motionManager.accelerometerUpdateInterval = kUpdateInterval;\r\n	[self.motionManager startAccelerometerUpdatesToQueue:self.queue withHandler:\r\n	 ^(CMAccelerometerData *accelerometerData, NSError *error) {\r\n         [(id)self setAcceleration : accelerometerData.acceleration];\r\n         [self performSelectorOnMainThread:@selector(update) withObject:nil waitUntilDone:NO];\r\n     }];\r\n\r\n}\r\n\r\n- (void)movePacman {\r\n    \r\n    //check collisions\r\n    [self collisionWithExit];\r\n	[self collisionWithBoundaries];\r\n    [self collsionWithWalls];\r\n    \r\n    \r\n    \r\n	self.previousPoint = self.currentPoint;\r\n    \r\n	// Move pacman to its new position\r\n    \r\n	CGRect frame = self.pacman.frame;\r\n	frame.origin.x = self.currentPoint.x;\r\n	frame.origin.y = self.currentPoint.y;\r\n    \r\n	self.pacman.frame = frame;\r\n    \r\n	// Rotate the sprite\r\n    \r\n	CGFloat newAngle = (self.pacmanXVelocity + self.pacmanYVelocity) * M_PI * 4;\r\n	self.angle += newAngle * kUpdateInterval;\r\n    \r\n	CABasicAnimation *rotate;\r\n	rotate                     = [CABasicAnimation animationWithKeyPath:@"transform.rotation"];\r\n	rotate.fromValue           = [NSNumber numberWithFloat:0];\r\n	rotate.toValue             = [NSNumber numberWithFloat:self.angle];\r\n	rotate.duration            = kUpdateInterval;\r\n	rotate.repeatCount         = 1;\r\n	rotate.removedOnCompletion = NO;\r\n	rotate.fillMode            = kCAFillModeForwards;\r\n	[self.pacman.layer addAnimation:rotate forKey:@"10"];\r\n}\r\n\r\n- (void)update {\r\n	NSTimeInterval secondsSinceLastDraw = -([self.lastUpdateTime timeIntervalSinceNow]);\r\n    \r\n	self.pacmanYVelocity = self.pacmanYVelocity - (self.acceleration.x * secondsSinceLastDraw);\r\n	self.pacmanXVelocity = self.pacmanXVelocity - (self.acceleration.y * secondsSinceLastDraw);\r\n    \r\n	CGFloat xDelta = secondsSinceLastDraw * self.pacmanXVelocity * 500;\r\n	CGFloat yDelta = secondsSinceLastDraw * self.pacmanYVelocity * 500;\r\n    \r\n	self.currentPoint = CGPointMake(self.currentPoint.x + xDelta,\r\n	                                self.currentPoint.y + yDelta);\r\n    \r\n	[self movePacman];\r\n    \r\n	self.lastUpdateTime = [NSDate date];\r\n}\r\n\r\n- (void)collisionWithBoundaries {\r\n	if (self.currentPoint.x < 0) {\r\n		_currentPoint.x = 0;\r\n		self.pacmanXVelocity = -(self.pacmanXVelocity / 2.0);\r\n	}\r\n    \r\n	if (self.currentPoint.y < 0) {\r\n		_currentPoint.y = 0;\r\n		self.pacmanYVelocity = -(self.pacmanYVelocity / 2.0);\r\n	}\r\n    \r\n	if (self.currentPoint.x > self.view.bounds.size.width - self.pacman.image.size.width) {\r\n		_currentPoint.x = self.view.bounds.size.width - self.pacman.image.size.width;\r\n		self.pacmanXVelocity = -(self.pacmanXVelocity / 2.0);\r\n	}\r\n    \r\n	if (self.currentPoint.y > self.view.bounds.size.height - self.pacman.image.size.height) {\r\n		_currentPoint.y = self.view.bounds.size.height - self.pacman.image.size.height;\r\n		self.pacmanYVelocity = -(self.pacmanYVelocity / 2.0);\r\n	}\r\n}\r\n\r\n- (void)collisionWithExit {\r\n	if (CGRectIntersectsRect(self.pacman.frame, self.exit.frame)) {\r\n		[self.motionManager stopAccelerometerUpdates];\r\n        \r\n		UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Congratulations"\r\n		                                                message:@"You have won the game!"\r\n		                                               delegate:self\r\n		                                      cancelButtonTitle:@"OK"\r\n		                                      otherButtonTitles:nil];\r\n		[alert show];\r\n	}\r\n}\r\n- (void)collsionWithWalls {\r\n    \r\n    CGRect frame = self.pacman.frame;\r\n    frame.origin.x = self.currentPoint.x;\r\n    frame.origin.y = self.currentPoint.y;\r\n    \r\n    for (UIImageView *image in self.wall) {\r\n        \r\n        if (CGRectIntersectsRect(frame, image.frame)) {\r\n            \r\n            // Compute collision angle\r\n            CGPoint pacmanCenter = CGPointMake(frame.origin.x + (frame.size.width / 2),\r\n                                               frame.origin.y + (frame.size.height / 2));\r\n            CGPoint imageCenter  = CGPointMake(image.frame.origin.x + (image.frame.size.width / 2),\r\n                                               image.frame.origin.y + (image.frame.size.height / 2));\r\n            CGFloat angleX = pacmanCenter.x - imageCenter.x;\r\n            CGFloat angleY = pacmanCenter.y - imageCenter.y;\r\n            \r\n            if (abs(angleX) > abs(angleY)) {\r\n                _currentPoint.x = self.previousPoint.x;\r\n                self.pacmanXVelocity = -(self.pacmanXVelocity / 2.0);\r\n            } else {\r\n                _currentPoint.y = self.previousPoint.y;\r\n                self.pacmanYVelocity = -(self.pacmanYVelocity / 2.0);\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end\r\n\r\n ', '2014-03-05 21:46:53'),
(40, ' iOS', ' PhoneX', ' \r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController () {\r\n}\r\n@property (nonatomic, retain) IBOutlet UITextField *mymobileNo;\r\n@property (nonatomic, retain) IBOutlet UIButton *button;\r\n@end\r\n\r\n@implementation FBFViewController\r\n@synthesize mymobileNo = _mymobileNo;\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n \r\n}\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n}\r\n\r\n- (IBAction)makePhoneCall {\r\n	NSLog(@"FILE->FUNCTION: %s", __FUNCTION__);\r\n	NSString *phoneNumber = [@"tel://" stringByAppendingString : _mymobileNo.text];\r\n	[[UIApplication sharedApplication] openURL:[NSURL URLWithString:phoneNumber]];\r\n}\r\n\r\n@end\r\n', '2014-03-03 14:26:30');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(41, ' iOS', ' SMSX', ' // FRAMEWORKS\r\nMessageUI\r\n\r\n\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import <MessageUI/MessageUI.h>\r\n\r\n@interface FBFViewController : UIViewController <MFMessageComposeViewControllerDelegate>\r\n{\r\n    \r\n}\r\n- (IBAction)showSMS:(NSString*)messageString;\r\n@end\r\n\r\n\r\n// VC.m\r\n\r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n    \r\n     \r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n-(IBAction)sendText:(id)sender{\r\n    [self showSMS:@"important information programatic SMS text..."];\r\n}\r\n- (IBAction)showSMS:(NSString*)messageString {\r\n    \r\n    if(![MFMessageComposeViewController canSendText]) {\r\n        UIAlertView *warningAlert = [[UIAlertView alloc] initWithTitle:@"Error" message:@"Your device doesnot support SMS!" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];\r\n        [warningAlert show];\r\n        return;\r\n    }\r\n    \r\n    NSArray *recipents = @[@"5023773546"];\r\n    NSString *message = [NSString stringWithFormat:@"%@", messageString];\r\n    \r\n    MFMessageComposeViewController *messageController = [[MFMessageComposeViewController alloc] init];\r\n    messageController.messageComposeDelegate = self;\r\n    [messageController setRecipients:recipents];\r\n    [messageController setBody:message];\r\n    \r\n    // Present message view controller on screen\r\n    [self presentViewController:messageController animated:YES completion:nil];\r\n}\r\n\r\n- (void)messageComposeViewController:(MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult) result\r\n{\r\n    switch (result) {\r\n        case MessageComposeResultCancelled:\r\n            break;\r\n            \r\n        case MessageComposeResultFailed:\r\n        {\r\n            UIAlertView *warningAlert = [[UIAlertView alloc] initWithTitle:@"Error" message:@"Failed to send SMS!" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];\r\n            [warningAlert show];\r\n            break;\r\n        }\r\n            \r\n        case MessageComposeResultSent:\r\n            break;\r\n            \r\n        default:\r\n            break;\r\n    }\r\n    \r\n    [self dismissViewControllerAnimated:YES completion:nil];\r\n}\r\n\r\n\r\n@end\r\n', '2014-03-03 14:30:31'),
(42, ' iOS', ' ThreadX', ' // VC.h\r\n\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController\r\n{\r\n    dispatch_queue_t mConcurrentQueue;\r\n}\r\n\r\n-(IBAction)buttonPressed:(id)sender;\r\n\r\n@end\r\n\r\n\r\n// VC.m\r\n\r\n\r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController (){\r\n    \r\n    IBOutlet UILabel *lblOne;\r\n    IBOutlet UILabel *lblTwo;\r\n    NSString *strOne;\r\n    NSString *strTwo;\r\n}\r\n@end\r\n//below imports above implementation\r\nvoid (^tFunct1)(UILabel *,NSString *) = ^(UILabel *lbl, NSString *src)\r\n{\r\n    //background thread work\r\n    NSLog(@"Going to sleep");\r\n    sleep(4);\r\n    NSLog(@"Waking Up");\r\n    \r\n    // CAN ONLY INTERACT WITH UI ON MAIN THREAD\r\n    dispatch_async(dispatch_get_main_queue(),^(void)\r\n                   {\r\n                       [lbl setText:src];\r\n                       NSLog(@"Label Done!");\r\n                   }\r\n                   );\r\n};\r\n\r\n@implementation FBFViewController\r\n\r\n-(IBAction)buttonPressed:(id)sender\r\n{\r\n    mConcurrentQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT,0);\r\n    \r\n    dispatch_async( mConcurrentQueue, ^{ tFunct1  (self->lblOne,@"1 Go!" );  }  );\r\n    sleep(1);\r\n    dispatch_async( mConcurrentQueue, ^{ tFunct1  (self->lblTwo,@"2 Go!" );  }  );\r\n    \r\n}\r\n\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end\r\n\r\n\r\n', '2014-03-03 14:32:10'),
(43, ' iOS', ' VideoX', ' //VideoX\r\n\r\n\r\n//Frameworks\r\nMediaPlayer\r\nMobileCoreServices\r\n\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import <MediaPlayer/MediaPlayer.h>\r\n#import <MobileCoreServices/MobileCoreServices.h>\r\n\r\n@interface FBFViewController : UIViewController <UIImagePickerControllerDelegate, UINavigationControllerDelegate>\r\n\r\n@property (copy,   nonatomic) NSURL *movieURL;\r\n@property (strong, nonatomic) MPMoviePlayerController *movieController;\r\n\r\n- (IBAction)takeVideo:(UIButton *)sender;\r\n\r\n@end\r\n\r\n\r\n// VC.m\r\n\r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController ()\r\n{\r\n	IBOutlet UIView *videoView;\r\n}\r\n@property (nonatomic, retain) IBOutlet UIView *videoView;\r\n@end\r\n\r\n@implementation FBFViewController\r\n@synthesize videoView;\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n}\r\n\r\n- (void)viewDidAppear:(BOOL)animated {\r\n	self.movieController = [[MPMoviePlayerController alloc] init];\r\n	[self.movieController setContentURL:self.movieURL];\r\n	[self.movieController.view setFrame:[self centerWithWidthDeluxe:250 Height:200 Y:30]];\r\n\r\n	[self.view addSubview:self.movieController.view];\r\n\r\n	[[NSNotificationCenter defaultCenter] addObserver:self\r\n	                                         selector:@selector(moviePlayBackDidFinish:)\r\n	                                             name:MPMoviePlayerPlaybackDidFinishNotification\r\n	                                           object:self.movieController];\r\n\r\n	[self.movieController play];\r\n}\r\n\r\n- (IBAction)takeVideo:(UIButton *)sender {\r\n	UIImagePickerController *picker = [[UIImagePickerController alloc] init];\r\n	picker.delegate = self;\r\n	picker.allowsEditing = YES;\r\n	picker.sourceType = UIImagePickerControllerSourceTypeCamera;\r\n	picker.mediaTypes = [[NSArray alloc] initWithObjects:(NSString *)kUTTypeMovie, nil];\r\n	[self presentViewController:picker animated:YES completion:NULL];\r\n}\r\n\r\n- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {\r\n	self.movieURL = info[UIImagePickerControllerMediaURL];\r\n	[picker dismissViewControllerAnimated:YES completion:NULL];\r\n}\r\n\r\n- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {\r\n	[picker dismissViewControllerAnimated:YES completion:NULL];\r\n}\r\n\r\n- (void)moviePlayBackDidFinish:(NSNotification *)notification {\r\n	[[NSNotificationCenter defaultCenter]removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:nil];\r\n	[self.movieController stop];\r\n	[self.movieController.view removeFromSuperview];\r\n	self.movieController = nil;\r\n}\r\n\r\n- (CGRect)centerWithWidthDeluxe:(int)width Height:(int)height Y:(int)y {\r\n	CGFloat windowWidth;\r\n	windowWidth = [UIScreen mainScreen].bounds.size.width;\r\n	int absoluteCenter = windowWidth / 2;\r\n	int sideMargin = (width / 2);\r\n	int centeredX = absoluteCenter - sideMargin;\r\n	CGRect centeredRect = CGRectMake(centeredX, y, width, height);\r\n	return centeredRect;\r\n}\r\n\r\n@end\r\n\r\n\r\n', '2014-03-03 14:33:54'),
(44, ' iOS', ' UI CollectionViewX', ' \r\n\r\n// MainstoryBoard is crucial , refer to the original.\r\n\r\n// VC.m\r\n\r\n#import "FBFViewController.h"\r\n#import "DetailViewController.h"\r\n#import "Cell.h"\r\n\r\nNSString *kDetailedViewControllerID = @"DetailView";    // view controller storyboard id\r\nNSString *kCellID = @"cellID";\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n\r\n- (NSInteger)collectionView:(UICollectionView *)view numberOfItemsInSection:(NSInteger)section;\r\n{\r\n    return 32;\r\n}\r\n\r\n- (UICollectionViewCell *)collectionView:(UICollectionView *)cv cellForItemAtIndexPath:(NSIndexPath *)indexPath;\r\n{\r\n    \r\n    Cell *cell = [cv dequeueReusableCellWithReuseIdentifier:kCellID forIndexPath:indexPath];\r\n    // make the cells title the actual NSIndexPath value\r\n    cell.label.text = [NSString stringWithFormat:@"{%ld,%ld}", (long)indexPath.row, (long)indexPath.section];\r\n    NSString *imageToLoad = [NSString stringWithFormat:@"%d.JPG", indexPath.row];\r\n    cell.image.image = [UIImage imageNamed:imageToLoad];\r\n    \r\n    return cell;\r\n}\r\n\r\n// the user tapped a collection item, load and set the image on the detail view controller\r\n- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender\r\n{\r\n    if ([[segue identifier] isEqualToString:@"showDetail"])\r\n    {\r\n        NSIndexPath *selectedIndexPath = [[self.collectionView indexPathsForSelectedItems] objectAtIndex:0];\r\n        // load the image, to prevent it from being cached we use -initWithContentsOfFile-\r\n        NSString *imageNameToLoad = [NSString stringWithFormat:@"%d_full", selectedIndexPath.row];\r\n        NSString *pathToImage = [[NSBundle mainBundle] pathForResource:imageNameToLoad ofType:@"JPG"];\r\n        UIImage *image = [[UIImage alloc] initWithContentsOfFile:pathToImage];\r\n        \r\n        DetailViewController *detailViewController = [segue destinationViewController];\r\n        detailViewController.image = image;\r\n    }\r\n}\r\n\r\n@end\r\n\r\n \r\n // DetailVC.h\r\n \r\n \r\n#import <UIKit/UIKit.h>\r\n\r\n@interface DetailViewController : UIViewController\r\n@property (nonatomic, strong) UIImage *image;\r\n@end\r\n\r\n\r\n// DetailVC.m\r\n\r\n\r\n#import "DetailViewController.h"\r\n\r\n@interface DetailViewController ()\r\n@property (nonatomic, weak) IBOutlet UIImageView *imageView;@end\r\n\r\n@implementation DetailViewController\r\n\r\n- (void)viewWillAppear:(BOOL)animated\r\n{\r\n    [super viewWillAppear:animated];\r\n    self.imageView.image = self.image;\r\n}\r\n\r\n\r\n@end\r\n\r\n\r\n// Cell.h\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface Cell : UICollectionViewCell\r\n\r\n@property (strong, nonatomic) IBOutlet UIImageView *image;\r\n@property (strong, nonatomic) IBOutlet UILabel *label;\r\n\r\n@end\r\n\r\n\r\n// Cell.m\r\n\r\n\r\n#import "Cell.h"\r\n\r\n@implementation Cell\r\n\r\n- (id)initWithCoder:(NSCoder *)aDecoder\r\n{\r\n    self = [super initWithCoder:aDecoder];\r\n    if (self)\r\n    {\r\n        // CustomCellBackground *backgroundView = [[CustomCellBackground alloc] initWithFrame:CGRectZero];\r\n        //self.selectedBackgroundView = backgroundView;\r\n        //see this for details\r\n        //https://developer.apple.com/library/ios/samplecode/CollectionView-Simple/Introduction/Intro.html\r\n    }\r\n    return self;\r\n}\r\n@end\r\n\r\n\r\n\r\n', '2014-03-03 14:39:44'),
(45, ' iOS', ' UI SlideInMenuX', ' // complicated refer to original\r\n\r\n// yep... see the original code , too many details for copy and paste\r\n\r\n', '2014-03-03 14:44:03'),
(46, ' iOS', ' UI TabNavX', ' // appdelegate.h\r\n\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFAppDelegate : UIResponder <UIApplicationDelegate, UITabBarControllerDelegate>\r\n\r\n@property (strong, nonatomic) UIWindow *window;\r\n@property (strong, nonatomic) UITabBarController *tabBarController;\r\n\r\n@end\r\n\r\n \r\n \r\n // appdelegate.m\r\n \r\n \r\n#import "FBFAppDelegate.h"\r\n\r\n\r\n#import "VC1.h"\r\n#import "VC2.h"\r\n#import "VC3.h"\r\n\r\n\r\n@implementation FBFAppDelegate\r\n@synthesize window, tabBarController;\r\n\r\n\r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\r\n	self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\r\n	self.tabBarController = [[UITabBarController alloc] init];\r\n\r\n\r\n	VC1 *viewController1 = [[VC1 alloc] initWithNibName:@"VC1" bundle:nil];\r\n	UINavigationController *navController = [[UINavigationController alloc]\r\n	                                         initWithRootViewController:viewController1];\r\n	VC2 *viewController2 = [[VC2 alloc] initWithNibName:@"VC2" bundle:nil];\r\n	VC3 *viewController3 = [[VC3 alloc] initWithNibName:@"VC3" bundle:nil];\r\n	self.tabBarController.viewControllers = [NSArray arrayWithObjects:navController, viewController2, viewController3, nil];\r\n	//set the WINDOWS rootview controller to the tab bar controller\r\n	self.window.rootViewController = self.tabBarController;\r\n\r\n	[self.tabBarController setSelectedIndex:0];\r\n	[self.window makeKeyAndVisible];\r\n    \r\n	[[UITabBar appearance] setBarTintColor:[UIColor whiteColor]];\r\n	[self tabBarCustomizations];\r\n	//STATUS BAR\r\n	[self setStatusBarBackground];\r\n	//detect device orientation change\r\n	[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(detectOrientation) name:@"UIDeviceOrientationDidChangeNotification" object:nil];\r\n\r\n	return YES;\r\n}\r\n\r\n- (void)tabBarCustomizations {\r\n	tabBarController = (UITabBarController *)self.window.rootViewController;\r\n	UITabBar *tabBar = tabBarController.tabBar;\r\n\r\n	UITabBarItem *tabBarItem1 = [tabBar.items objectAtIndex:0];\r\n	UITabBarItem *tabBarItem2 = [tabBar.items objectAtIndex:1];\r\n	UITabBarItem *tabBarItem3 = [tabBar.items objectAtIndex:2];\r\n\r\n	UIImage *imageTB1 = [[UIImage imageNamed:@"tb1_sel.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\r\n	UIImage *imageTB1Uns = [[UIImage imageNamed:@"tb1_uns.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\r\n	tabBarItem1.image = imageTB1Uns;\r\n	tabBarItem1.selectedImage = imageTB1;\r\n\r\n	UIImage *imageTB2 = [[UIImage imageNamed:@"tb2_sel.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\r\n	UIImage *imageTB2Uns = [[UIImage imageNamed:@"tb2_uns.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\r\n	tabBarItem2.image = imageTB2Uns;\r\n	tabBarItem2.selectedImage = imageTB2;\r\n\r\n	UIImage *imageTB3 = [[UIImage imageNamed:@"tb3_sel.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\r\n	UIImage *imageTB3Uns = [[UIImage imageNamed:@"tb3_uns.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\r\n	tabBarItem3.image = imageTB3Uns;\r\n	tabBarItem3.selectedImage = imageTB3;\r\n\r\n	tabBar.frame = CGRectMake(0, self.window.rootViewController.view.bounds.size.height - 43, self.window.rootViewController.view.bounds.size.width, 57);\r\n}\r\n\r\n- (void)setStatusBarBackground {\r\n	UIImageView *statusBarBackgroundColorImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@""]];\r\n	statusBarBackgroundColorImage.backgroundColor = [UIColor redColor];\r\n	[self.window.rootViewController.view addSubview:statusBarBackgroundColorImage];\r\n	statusBarBackgroundColorImage.frame = CGRectMake(0, 0, self.window.rootViewController.view.bounds.size.width, 20);\r\n	[self.window.rootViewController.view bringSubviewToFront:statusBarBackgroundColorImage];\r\n}\r\n\r\n- (UIStatusBarStyle)preferredStatusBarStyle {\r\n	return UIStatusBarStyleLightContent;\r\n}\r\n\r\n- (void)detectOrientation {\r\n	if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationLandscapeLeft) {\r\n		//Set up left\r\n		[self setStatusBarBackground];\r\n		[self tabBarCustomizations];\r\n	}\r\n	else if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationLandscapeRight) {\r\n		//Set up Right\r\n		[self setStatusBarBackground];\r\n		[self tabBarCustomizations];\r\n	}\r\n	else if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationPortrait || [[UIDevice currentDevice] orientation] == UIDeviceOrientationPortraitUpsideDown) {\r\n		//It-s portrait time!\r\n		[self setStatusBarBackground];\r\n		[self tabBarCustomizations];\r\n	}\r\n}\r\n\r\n- (void)applicationWillResignActive:(UIApplication *)application {\r\n	// Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.\r\n	// Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.\r\n}\r\n\r\n- (void)applicationDidEnterBackground:(UIApplication *)application {\r\n	// Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.\r\n	// If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.\r\n}\r\n\r\n- (void)applicationWillEnterForeground:(UIApplication *)application {\r\n	// Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.\r\n}\r\n\r\n- (void)applicationDidBecomeActive:(UIApplication *)application {\r\n	// Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.\r\n}\r\n\r\n- (void)applicationWillTerminate:(UIApplication *)application {\r\n	// Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.\r\n}\r\n\r\n@end\r\n ', '2014-03-03 14:46:36'),
(47, ' android', ' AccelerometerX', ' // Manifest\r\n  <uses-feature android:name="android.hardware.sensors" />\r\n\r\n // JAVA mainActivity\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n    private static SensorManager sensorService;\r\n    private MyCompassView compassView;\r\n    private Sensor sensor;\r\n\r\n// L E A V E   O F F   H E R E  -- look at\r\n    //http://blog.infrared5.com/2011/09/android-graphics-and-animation-part-iii-handling-the-accelerometer/\r\n    /** Called when the activity is first created. */\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        compassView = new MyCompassView(this);\r\n        setContentView(compassView);\r\n\r\n        sensorService = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\r\n        sensor = sensorService.getDefaultSensor(Sensor.TYPE_ORIENTATION);\r\n        if (sensor != null) {\r\n            sensorService.registerListener(mySensorEventListener, sensor,\r\n                    SensorManager.SENSOR_DELAY_NORMAL);\r\n            Log.i("Compass MainActivity", "Registerered for ORIENTATION Sensor");\r\n\r\n        } else {\r\n            Log.e("Compass MainActivity", "Registerered for ORIENTATION Sensor");\r\n            Toast.makeText(this, "ORIENTATION Sensor not found",\r\n                    Toast.LENGTH_LONG).show();\r\n            finish();\r\n        }\r\n    }\r\n\r\n    private SensorEventListener mySensorEventListener = new SensorEventListener() {\r\n\r\n        @Override\r\n        public void onAccuracyChanged(Sensor sensor, int accuracy) {\r\n        }\r\n\r\n        @Override\r\n        public void onSensorChanged(SensorEvent event) {\r\n            // angle between the magnetic north directio\r\n            // 0=North, 90=East, 180=South, 270=West\r\n            float azimuth = event.values[0];\r\n            compassView.updateData(azimuth);\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if (sensor != null) {\r\n            sensorService.unregisterListener(mySensorEventListener);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n// JAVA MyCompassView\r\n\r\n\r\npublic class MyCompassView extends View {\r\n\r\n    private Paint paint;\r\n    private float position = 0;\r\n\r\n    public MyCompassView(Context context) {\r\n        super(context);\r\n        init();\r\n    }\r\n\r\n    private void init() {\r\n        paint = new Paint();\r\n        paint.setAntiAlias(true);\r\n        paint.setStrokeWidth(2);\r\n        paint.setTextSize(25);\r\n        paint.setStyle(Paint.Style.STROKE);\r\n        paint.setColor(Color.BLACK);\r\n    }\r\n\r\n    @Override\r\n    protected void onDraw(Canvas canvas) {\r\n        int xPoint = getMeasuredWidth() / 2;\r\n        int yPoint = getMeasuredHeight() / 2;\r\n\r\n        float radius = (float) (Math.max(xPoint, yPoint) * 0.6);\r\n        canvas.drawCircle(xPoint, yPoint, radius, paint);\r\n        canvas.drawRect(0, 0, getMeasuredWidth(), getMeasuredHeight(), paint);\r\n\r\n        // 3.143 is a good approximation for the circle\r\n        canvas.drawLine(xPoint,\r\n                yPoint,\r\n                (float) (xPoint + radius\r\n                        * Math.sin((double) (-position) / 180 * 3.143)),\r\n                (float) (yPoint - radius\r\n                        * Math.cos((double) (-position) / 180 * 3.143)), paint);\r\n\r\n        canvas.drawText(String.valueOf(position), xPoint, yPoint, paint);\r\n    }\r\n\r\n    public void updateData(float position) {\r\n        this.position = position;\r\n        invalidate();\r\n    }\r\n\r\n}', '2014-03-03 14:55:17'),
(48, ' android', 'AnimationX', ' // manifest\r\n android:screenOrientation="portrait"\r\n\r\n // XML activity main\r\n <?xml version="1.0" encoding="utf-8"?>\r\n\r\n <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n     android:id="@+id/layout"\r\n     android:layout_width="match_parent"\r\n     android:layout_height="match_parent"\r\n     android:orientation="vertical" >\r\n\r\n\r\n\r\n     <LinearLayout\r\n         android:id="@+id/test"\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content" >\r\n\r\n         <Button\r\n             android:id="@+id/Button01"\r\n             android:layout_width="wrap_content"\r\n             android:layout_height="wrap_content"\r\n             android:onClick="startAnimation"\r\n             android:text="Rotate" />\r\n\r\n         <Button\r\n             android:id="@+id/Button04"\r\n             android:layout_width="wrap_content"\r\n             android:layout_height="wrap_content"\r\n             android:onClick="startAnimation"\r\n             android:text="Group" >\r\n         </Button>\r\n\r\n         <Button\r\n             android:id="@+id/Button03"\r\n             android:layout_width="wrap_content"\r\n             android:layout_height="wrap_content"\r\n             android:onClick="startAnimation"\r\n             android:text="Fade" />\r\n\r\n         <Button\r\n             android:id="@+id/Button02"\r\n             android:layout_width="wrap_content"\r\n             android:layout_height="wrap_content"\r\n             android:onClick="startAnimation"\r\n             android:text="Animate" />\r\n\r\n     </LinearLayout>\r\n\r\n     <ImageView\r\n         android:id="@+id/imageView1"\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:layout_centerHorizontal="true"\r\n         android:layout_centerVertical="true"\r\n         android:src="@drawable/ic_launcher" />\r\n\r\n     <TextView\r\n         android:id="@+id/textView1"\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:layout_above="@+id/imageView1"\r\n         android:layout_alignRight="@+id/imageView1"\r\n         android:layout_marginBottom="30dp"\r\n         android:text="Large Text"\r\n         android:textAppearance="?android:attr/textAppearanceLarge" />\r\n\r\n </RelativeLayout>\r\n\r\n // XML target\r\n <?xml version="1.0" encoding="utf-8"?>\r\n\r\n <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n     android:orientation="vertical" android:layout_width="match_parent"\r\n     android:layout_height="match_parent">\r\n\r\n\r\n\r\n     <Button\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:text="Hit"\r\n         android:id="@+id/button1" />\r\n\r\n     <TextView\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:text="New Text"\r\n         android:inputType= "number"\r\n         android:id="@+id/score" />\r\n\r\n </LinearLayout>\r\n\r\n // XML main menu\r\n <?xml version="1.0" encoding="utf-8"?>\r\n <menu xmlns:android="http://schemas.android.com/apk/res/android" >\r\n\r\n     <item\r\n         android:id="@+id/item1"\r\n         android:showAsAction="ifRoom"\r\n         android:title="Game">\r\n     </item>\r\n\r\n </menu>\r\n\r\n\r\n // JAVA main activity\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n    /**\r\n     * http://www.vogella.com/tutorials/AndroidAnimation/article.html\r\n     * 4. Animations for Fragment transition\r\n     During a fragment transaction you can define animations which should be used based on the Property Animation API via the setCustomAnimations() method.\r\n     You can also use several standard animations provided by Android via the setTransition() method call.\r\n     These are defined via the constants starting with FragmentTransaction.TRANSIT_FRAGMENT_*.\r\n     Both methods allow you to define an entry animation and an existing animation.\r\n     */\r\n\r\n\r\n\r\n    /** Called when the activity is first created. */\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public void startAnimation(View view) {\r\n        float dest = 0;\r\n        ImageView animatedImageView = (ImageView) findViewById(R.id.imageView1);\r\n        switch (view.getId()) {\r\n\r\n            case R.id.Button01:\r\n                dest = 360;\r\n                if (animatedImageView.getRotation() == 360) {\r\n                    System.out.println(animatedImageView.getAlpha());\r\n                    dest = 0;\r\n                }\r\n                ObjectAnimator animation1 = ObjectAnimator.ofFloat(animatedImageView,\r\n                        "rotation", dest);\r\n                animation1.setDuration(2000);\r\n                animation1.start();\r\n                // Show how to load an animation from XML\r\n                // Animation animation1 = AnimationUtils.loadAnimation(this,\r\n                // R.anim.myanimation);\r\n                // animation1.setAnimationListener(this);\r\n                // animatedView1.startAnimation(animation1);\r\n                break;\r\n\r\n            case R.id.Button02:\r\n                // shows how to define a animation via code\r\n                // also use an Interpolator (BounceInterpolator)\r\n                Paint paint = new Paint();\r\n                TextView animatedTextView = (TextView) findViewById(R.id.textView1);\r\n                float measureTextCenter = paint.measureText(animatedTextView.getText()\r\n                        .toString());\r\n                dest = 0 - measureTextCenter;\r\n                if (animatedTextView.getX() < 0) {\r\n                    dest = 0;\r\n                }\r\n                ObjectAnimator animation2 = ObjectAnimator.ofFloat(animatedTextView,\r\n                        "x", dest);\r\n                animation2.setDuration(2000);\r\n                animation2.start();\r\n                break;\r\n\r\n            case R.id.Button03:\r\n                // demonstrate fading and adding an AnimationListener\r\n\r\n                dest = 1;\r\n                if (animatedImageView.getAlpha() > 0) {\r\n                    dest = 0;\r\n                }\r\n                ObjectAnimator animation3 = ObjectAnimator.ofFloat(animatedImageView,\r\n                        "alpha", dest);\r\n                animation3.setDuration(2000);\r\n                animation3.start();\r\n                break;\r\n\r\n            case R.id.Button04:\r\n\r\n                ObjectAnimator fadeOut = ObjectAnimator.ofFloat(animatedImageView, "alpha",\r\n                        0f);\r\n                fadeOut.setDuration(2000);\r\n                ObjectAnimator mover = ObjectAnimator.ofFloat(animatedImageView,\r\n                        "translationX", -500f, 0f);\r\n                mover.setDuration(2000);\r\n                ObjectAnimator fadeIn = ObjectAnimator.ofFloat(animatedImageView, "alpha",\r\n                        0f, 1f);\r\n                fadeIn.setDuration(2000);\r\n                AnimatorSet animatorSet = new AnimatorSet();\r\n\r\n                animatorSet.play(mover).with(fadeIn).after(fadeOut);\r\n                animatorSet.start();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.main, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        Intent intent = new Intent(this, HitActivity.class);\r\n        startActivity(intent);\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n\r\n// JAVA hit activity\r\n\r\npublic class HitActivity extends Activity implements View.OnClickListener{\r\n\r\n    private ObjectAnimator animationXAxis;\r\n    private ObjectAnimator animationYAxis;\r\n    private Button button;\r\n    private Random random;\r\n    private int widthWindow;\r\n    private int heightWindow;\r\n    private AnimatorSet set;\r\n\r\n    private TextView mScore;\r\n    int mPoints = 0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.target);\r\n        widthWindow = getWindowManager().getDefaultDisplay().getWidth();\r\n        heightWindow = getWindowManager().getDefaultDisplay().getHeight();\r\n        random = new Random();\r\n\r\n        mScore = (TextView) findViewById(R.id.score);\r\n        mScore.setText(String.valueOf(mPoints));\r\n\r\n        set = createAnimation();\r\n        set.start();\r\n        set.addListener(new AnimatorListenerAdapter() {\r\n\r\n            @Override\r\n            public void onAnimationEnd(Animator animation) {\r\n                int nextX = random.nextInt(widthWindow);\r\n                int nextY = random.nextInt(heightWindow);\r\n                animationXAxis = ObjectAnimator.ofFloat(button, "x", button.getX(),\r\n                        nextX);\r\n                animationXAxis.setDuration(1400);\r\n                animationYAxis = ObjectAnimator.ofFloat(button, "y", button.getY(),\r\n                        nextY);\r\n                animationYAxis.setDuration(1400);\r\n                set.playTogether(animationXAxis, animationYAxis);\r\n                set.start();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void onClick(View view) {\r\n\r\n        mPoints = mPoints +1;\r\n        mScore.setText(String.valueOf(mPoints));\r\n\r\n    }\r\n\r\n    private AnimatorSet createAnimation() {\r\n        int nextX = random.nextInt(widthWindow);\r\n        int nextY = random.nextInt(heightWindow);\r\n        button = (Button) findViewById(R.id.button1);\r\n        button.setOnClickListener(this);\r\n        animationXAxis = ObjectAnimator.ofFloat(button, "x", nextX);\r\n        animationXAxis.setDuration(1400);\r\n        animationYAxis = ObjectAnimator.ofFloat(button, "y", nextY);\r\n        animationYAxis.setDuration(1400);\r\n        AnimatorSet set = new AnimatorSet();\r\n        set.playTogether(animationXAxis, animationYAxis);\r\n        return set;\r\n    }\r\n}\r\n\r\n\r\n\r\n', '2014-03-03 14:59:30');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(49, ' android', 'APIX', ' // Gradle\r\n- -\r\n\r\n// manifest\r\n <uses-permission android:name="android.permission.INTERNET" />\r\ndo not forget\r\n  <activity\r\n            android:name="com.example.apix.ResultActivity"\r\n            android:label="@string/title_activity_result"></activity>\r\n\r\n// XML activity main\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    tools:context=".MainActivity"\r\n    android:id="@+id/container"\r\n    android:orientation="vertical"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    android:layout_below="@+id/textView"\r\n    android:layout_alignParentLeft="true"\r\n    android:layout_marginTop="20dp"\r\n    android:layout_marginRight="20dp"\r\n    android:layout_marginLeft="20dp">\r\n\r\n    <EditText\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="wrap_content"\r\n        android:inputType="number"\r\n        android:ems="10"\r\n        android:id="@+id/btnPostalCode"\r\n        android:hint="postal code"\r\n        android:layout_gravity="center_horizontal"\r\n        android:textAlignment="gravity"\r\n        android:textStyle="bold"\r\n        android:typeface="sans"\r\n        android:textSize="25sp"\r\n        android:background="@android:color/white"\r\n        android:gravity="center_horizontal"\r\n        android:maxLength="10"\r\n        android:maxLines="1" />\r\n\r\n    <Button\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="wrap_content"\r\n        android:layout_marginTop="20dp"\r\n        android:layout_marginRight="20dp"\r\n        android:layout_marginLeft="20dp"\r\n        android:text="submit"\r\n        android:id="@+id/btnSubmit"\r\n        android:textSize="25sp"\r\n        android:background="#1a6512"\r\n        android:textColor="#ffffff"\r\n        android:textColorHighlight="#fbff2e"\r\n        android:gravity="center_horizontal" />\r\n\r\n    <RadioGroup\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content">\r\n\r\n        <RadioButton\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="JSON"\r\n            android:id="@+id/btnJson" />\r\n\r\n        <RadioButton\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="XML"\r\n            android:id="@+id/btnXml" />\r\n    </RadioGroup>\r\n\r\n\r\n</LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n// XML activity result\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:orientation="vertical"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    tools:context=".ResultActivity"\r\n    android:layout_gravity="center">\r\n\r\n    <ListView\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="wrap_content"\r\n        android:id="@+id/hashMap_list" />\r\n\r\n</LinearLayout>\r\n\r\n\r\n// XML list_geoname_row_layout.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:orientation="vertical" android:layout_width="match_parent"\r\n    android:layout_height="match_parent">\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content"\r\n        android:background="@android:color/holo_blue_light">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Place Name:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/placeName"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp"\r\n            android:textStyle="bold" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Latitude:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/lat"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Longitude:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/lng"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Country Code:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/countryCode"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Postal Code:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/postalCode"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Admin Code 3:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/adminCode3"\r\n           android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Admin Code 2:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/adminCode2"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Admin Code 1:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/adminCode1"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Admin Name 1:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/adminName1"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n    <RelativeLayout\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content">\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Admin Name 2:"\r\n            android:layout_alignParentLeft="true"\r\n            android:layout_marginLeft="20dp"\r\n            android:layout_marginTop="20dp" />\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="Small Text"\r\n            android:id="@+id/adminName2"\r\n            android:layout_alignParentRight="true"\r\n            android:layout_marginRight="20dp"\r\n            android:layout_marginTop="20dp" />\r\n    </RelativeLayout>\r\n</LinearLayout>\r\n\r\n\r\n\r\n// XML strings.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<resources>\r\n    <string name="app_name">APIX</string>\r\n    <string name="apix">apix!</string>\r\n\r\n    <string name="title_activity_main">GeoNames</string>\r\n    <string name="title_activity_list">ListActivity</string>\r\n    <string name="action_settings">Settings</string>\r\n    <string name="title_activity_result">ResultActivity</string>\r\n    <string name="data">data</string>\r\n</resources>\r\n\r\n\r\n\r\n\r\n\r\n// JAVA adapters\r\n\r\npublic class ArrayOfObjectsListAdapter extends BaseAdapter {\r\n\r\n	private List<GeoName> mArrayOfGeoName;\r\n	private LayoutInflater mLayoutInflater;\r\n\r\n	public ArrayOfObjectsListAdapter(Context context, List<GeoName> mListOfGeoName) {\r\n		this.mArrayOfGeoName = mListOfGeoName;\r\n		mLayoutInflater = LayoutInflater.from(context);\r\n	}\r\n\r\n	@Override\r\n	public int getCount() {\r\n		return mArrayOfGeoName.size();\r\n	}\r\n\r\n	@Override\r\n	public Object getItem(int position) {\r\n		return mArrayOfGeoName.get(position);\r\n	}\r\n\r\n	@Override\r\n	public long getItemId(int position) {\r\n		return position;\r\n	}\r\n\r\n	@Override\r\n	public View getView(int position, View convertView, ViewGroup parent) {\r\n		ViewHolder holder;\r\n		if (convertView == null) {\r\n			convertView = mLayoutInflater.inflate(R.layout.list_geoname_row_layout, null);\r\n			holder = new ViewHolder();\r\n\r\n			holder.adminCode3 = (TextView) convertView.findViewById(R.id.adminCode3);\r\n			holder.adminCode2 = (TextView) convertView.findViewById(R.id.adminCode2);\r\n			holder.adminCode1 = (TextView) convertView.findViewById(R.id.adminCode1);\r\n			holder.adminName1 = (TextView) convertView.findViewById(R.id.adminName1);\r\n			holder.adminName2 = (TextView) convertView.findViewById(R.id.adminName2);\r\n			holder.postalCode = (TextView) convertView.findViewById(R.id.postalCode);\r\n			holder.countryCode = (TextView) convertView.findViewById(R.id.countryCode);\r\n			holder.lat = (TextView) convertView.findViewById(R.id.lat);\r\n			holder.lng = (TextView) convertView.findViewById(R.id.lng);\r\n			holder.placeName = (TextView) convertView.findViewById(R.id.placeName);\r\n\r\n			convertView.setTag(holder);\r\n\r\n		} else {\r\n			holder = (ViewHolder) convertView.getTag();\r\n		}\r\n		//todo check json placeName vs xml name\r\n       // Log.d("DEBUG", mArrayOfGeoName.get(position).getPlaceName());// literally "placeName"\r\n\r\n		holder.adminCode3.setText("" + mArrayOfGeoName.get(position).getAdminCode3());\r\n		holder.adminCode2.setText("" + mArrayOfGeoName.get(position).getAdminCode2());\r\n		holder.adminCode1.setText("" + mArrayOfGeoName.get(position).getAdminCode1());\r\n		holder.adminName1.setText("" + mArrayOfGeoName.get(position).getAdminName1());\r\n		holder.adminName2.setText("" + mArrayOfGeoName.get(position).getAdminName2());\r\n		holder.postalCode.setText("" + mArrayOfGeoName.get(position).getPostalCode());\r\n		holder.countryCode.setText("" + mArrayOfGeoName.get(position).getCountryCode());\r\n		holder.lng.setText("" + mArrayOfGeoName.get(position).getLng());\r\n		holder.lat.setText("" + mArrayOfGeoName.get(position).getLat());\r\n		holder.placeName.setText("" + mArrayOfGeoName.get(position).getPlaceName());\r\n\r\n\r\n		return convertView;\r\n	}\r\n\r\n	static class ViewHolder {\r\n		TextView adminCode3;\r\n		TextView adminName2;\r\n		TextView adminCode2;\r\n		TextView postalCode;\r\n		TextView adminCode1;\r\n		TextView countryCode;\r\n		TextView lng;\r\n		TextView placeName;\r\n		TextView lat;\r\n		TextView adminName1;\r\n	}\r\n\r\n}\r\n\r\n\r\n// JAVA models\r\n\r\npublic class GeoName implements Parcelable {\r\n    private String mAdminCode3;\r\n    private String mAdminName2;\r\n    private String mAdminCode2;\r\n    private String mPostalCode;\r\n    private String mAdminCode1;\r\n    private String mCountryCode;\r\n    private String mLng;\r\n    private String mPlaceName;\r\n    private String mLat;\r\n    private String mAdminName1;\r\n\r\n    public static final String API_ADMINCODE3 = "adminCode3";\r\n    public static final String API_ADMINNAME2 = "adminName2";\r\n    public static final String API_ADMINCODE2 = "adminCode2";\r\n    public static final String API_POSTAL_CODE = "postalcode";\r\n    public static final String API_ADMINCODE1 = "adminCode1";\r\n    public static final String API_COUNTRY_CODE = "countryCode";\r\n    public static final String API_LONGITUDE = "lng";\r\n    public static final String API_PLACE_NAME = "placeName";\r\n    public static final String API_LATITUDE = "lat";\r\n    public static final String API_ADMINNAME1 = "adminName1";\r\n\r\n    public GeoName() {\r\n\r\n    }\r\n\r\n\r\n    public GeoName(JSONObject jsonObject) throws JSONException {\r\n        if (!jsonObject.isNull(API_ADMINCODE1)) {\r\n            this.mAdminCode1 = jsonObject.getString(API_ADMINCODE1);\r\n        }\r\n        if (!jsonObject.isNull(API_ADMINCODE2)) {\r\n            this.mAdminCode2 = jsonObject.getString(API_ADMINCODE2);\r\n        }\r\n        if (!jsonObject.isNull(API_ADMINCODE3)) {\r\n            this.mAdminCode3 = jsonObject.getString(API_ADMINCODE3);\r\n        }\r\n        if (!jsonObject.isNull(API_ADMINNAME1)) {\r\n            this.mAdminName1 = jsonObject.getString(API_ADMINNAME1);\r\n        }\r\n        if (!jsonObject.isNull(API_ADMINNAME2)) {\r\n            this.mAdminName2 = jsonObject.getString(API_ADMINNAME2);\r\n        }\r\n        if (!jsonObject.isNull(API_COUNTRY_CODE)) {\r\n            this.mCountryCode = jsonObject.getString(API_COUNTRY_CODE);\r\n        }\r\n        if (!jsonObject.isNull(API_LATITUDE)) {\r\n            this.mLat = jsonObject.getString(API_LATITUDE);\r\n        }\r\n        if (!jsonObject.isNull(API_LONGITUDE)) {\r\n            this.mLng = jsonObject.getString(API_LONGITUDE);\r\n        }\r\n        if (!jsonObject.isNull(API_PLACE_NAME)) {\r\n            this.mPlaceName = jsonObject.getString(API_PLACE_NAME);\r\n        }\r\n        if (!jsonObject.isNull(API_POSTAL_CODE)) {\r\n            this.mPostalCode = jsonObject.getString(API_POSTAL_CODE);\r\n        }\r\n\r\n    }\r\n\r\n    // PARCELABLE CONSTRUCTOR:\r\n    public GeoName(Parcel in) {\r\n        mAdminCode3 = in.readString();\r\n        mAdminCode2 = in.readString();\r\n        mAdminCode1 = in.readString();\r\n        mAdminName1 = in.readString();\r\n        mAdminName2 = in.readString();\r\n        mPostalCode = in.readString();\r\n        mCountryCode = in.readString();\r\n        mLat = in.readString();\r\n        mLng = in.readString();\r\n        mPlaceName = in.readString();\r\n    }\r\n\r\n\r\n\r\n    public String getAdminCode3() {\r\n        return mAdminCode3;\r\n    }\r\n\r\n    public String getAdminName2() {\r\n        return mAdminName2;\r\n    }\r\n\r\n    public String getAdminCode2() {\r\n        return mAdminCode2;\r\n    }\r\n\r\n    public String getAdminCode1() {\r\n        return mAdminCode1;\r\n    }\r\n\r\n    public String getCountryCode() {\r\n        return mCountryCode;\r\n    }\r\n\r\n    public String getLng() {\r\n        return mLng;\r\n    }\r\n\r\n    public String getPlaceName() {\r\n        return mPlaceName;\r\n    }\r\n\r\n    public String getLat() {\r\n        return mLat;\r\n    }\r\n\r\n    public String getAdminName1() {\r\n        return mAdminName1;\r\n    }\r\n\r\n    public String getPostalCode() {\r\n        return mPostalCode;\r\n    }\r\n\r\n    public void setAdminCode3(String mAdminCode3) {\r\n        this.mAdminCode3 = mAdminCode3;\r\n    }\r\n\r\n    public void setAdminName2(String mAdminName2) {\r\n        this.mAdminName2 = mAdminName2;\r\n    }\r\n\r\n    public void setAdminCode2(String mAdminCode2) {\r\n        this.mAdminCode2 = mAdminCode2;\r\n    }\r\n\r\n    public void setPostalCode(String mPostalCode) {\r\n        this.mPostalCode = mPostalCode;\r\n    }\r\n\r\n    public void setAdminCode1(String mAdminCode1) {\r\n        this.mAdminCode1 = mAdminCode1;\r\n    }\r\n\r\n    public void setCountryCode(String mCountryCode) {\r\n        this.mCountryCode = mCountryCode;\r\n    }\r\n\r\n    public void setLng(String mLng) {\r\n        this.mLng = mLng;\r\n    }\r\n\r\n    public void setPlaceName(String mPlaceName) {\r\n        this.mPlaceName = mPlaceName;\r\n    }\r\n\r\n    public void setLat(String mLat) {\r\n        this.mLat = mLat;\r\n    }\r\n\r\n    public void setAdminName1(String mAdminName1) {\r\n        this.mAdminName1 = mAdminName1;\r\n    }\r\n\r\n    // PARCELABLE METHOD:\r\n    public static final Parcelable.Creator<GeoName> CREATOR = new Parcelable.Creator<GeoName>() {\r\n        public GeoName createFromParcel(Parcel in) {\r\n            return new GeoName(in);\r\n        }\r\n\r\n        public GeoName[] newArray(int size) {\r\n            return new GeoName[size];\r\n        }\r\n    };\r\n\r\n    // PARCELABLE METHOD:\r\n    @Override\r\n    public int describeContents() {\r\n        return 0;\r\n    }\r\n\r\n    // PARCELABLE METHOD:\r\n    @Override\r\n    public void writeToParcel(Parcel dest, int flags) {\r\n        dest.writeString(mAdminCode1);\r\n        dest.writeString(mAdminCode2);\r\n        dest.writeString(mAdminCode3);\r\n        dest.writeString(mAdminName1);\r\n        dest.writeString(mAdminName2);\r\n        dest.writeString(mPostalCode);\r\n        dest.writeString(mCountryCode);\r\n        dest.writeString(mLat);\r\n        dest.writeString(mLng);\r\n        dest.writeString(mPlaceName);\r\n\r\n    }\r\n}\r\n\r\n\r\n// JAVA url\r\n--AsyncInterface\r\n\r\npublic interface AsyncInterface {\r\n\r\n	public void asyncDownloadSuccess(ArrayList<GeoName> arrayListOfGeoName);\r\n\r\n    public void asyncDownloadFailure();\r\n}\r\n\r\n-- AsyncJSONDownload\r\n\r\npublic class AsyncJSONDownload extends AsyncTask<String, Void, JSONObject> {\r\n\r\n    private ProgressDialog progressDialog;\r\n    private AsyncInterface mAsyncInterface;\r\n    private Context mContext;\r\n    private HashMap<String, String> mHashMapQueryKeysAndValues;\r\n\r\n    public AsyncJSONDownload(AsyncInterface event, Context context, HashMap<String, String> hashMapQueryKeysAndValues) {\r\n        mAsyncInterface = event;\r\n        mContext = context;\r\n        mHashMapQueryKeysAndValues = hashMapQueryKeysAndValues;\r\n    }\r\n\r\n    @Override\r\n    protected JSONObject doInBackground(String... urls) {\r\n        return UniversalURL.getJSONObjectFromUrl(urls[0], mHashMapQueryKeysAndValues);\r\n    }\r\n\r\n    @Override\r\n    protected void onPreExecute() {\r\n        super.onPreExecute();\r\n        progressDialog = ProgressDialog.show(mContext, "", "Please wait");\r\n    }\r\n\r\n    @Override\r\n    protected void onPostExecute(JSONObject obj) {\r\n        if (obj != null) {\r\n            //SUCCESS\r\n            parseJsonObject(obj);\r\n        } else {\r\n            //FAIL\r\n            mAsyncInterface.asyncDownloadFailure();\r\n        }\r\n        progressDialog.hide();\r\n    }\r\n\r\n    public void parseJsonObject(JSONObject jsonResponse) {\r\n        ArrayList<GeoName> mListOfGeoName = new ArrayList<GeoName>();\r\n        try {\r\n            JSONArray jsonMainNode = jsonResponse.optJSONArray("postalcodes");\r\n            int lengthJsonArr = jsonMainNode.length();\r\n\r\n            for (int i = 0; i < lengthJsonArr; i++) {\r\n                JSONObject jsonChildNode = null;\r\n                jsonChildNode = jsonMainNode.getJSONObject(i);\r\n                GeoName geoName = new GeoName(jsonChildNode);\r\n                mListOfGeoName.add(geoName);\r\n            }\r\n            //SUCCESS\r\n            mAsyncInterface.asyncDownloadSuccess(mListOfGeoName);\r\n        }\r\n        catch (JSONException e) {\r\n            e.printStackTrace();\r\n            //FAIL\r\n            mAsyncInterface.asyncDownloadFailure();\r\n        }\r\n    }\r\n\r\n}\r\n-- AsyncXMLDownload\r\n\r\npublic class AsyncXMLDownload extends AsyncTask<String, Void, String> {\r\n\r\n	public ProgressDialog progressDialog;// public so that it can be called from the activity.\r\n	private AsyncInterface mAsyncInterface;\r\n	private HashMap<String, String> mHashMapQueryKeysAndValues;\r\n	private Context mContext;\r\n\r\n	public AsyncXMLDownload(AsyncInterface event, Context context, HashMap<String, String> hashMapQueryKeysAndValues) {\r\n		mAsyncInterface = event;\r\n		mContext = context;\r\n		mHashMapQueryKeysAndValues = hashMapQueryKeysAndValues;\r\n	}\r\n\r\n	@Override\r\n	protected String doInBackground(String... urls) {\r\n		// urls[0] = baseURL;\r\n        String response = "";\r\n		String queryString = urls[0];\r\n		Iterator iterator = mHashMapQueryKeysAndValues.keySet().iterator();\r\n\r\n		while (iterator.hasNext()) {\r\n			String key = (String) iterator.next();\r\n			String value = mHashMapQueryKeysAndValues.get(key);\r\n			if (key.equals("username")) {\r\n				queryString += "maxRows=10&" + key + "=" + value;\r\n			} else {\r\n				queryString += key + "=" + value + "&";\r\n			}\r\n		}\r\n\r\n		DefaultHttpClient client = new DefaultHttpClient();\r\n		HttpGet httpGet = new HttpGet(queryString);\r\n		try {\r\n			HttpResponse execute = client.execute(httpGet);\r\n			InputStream content = execute.getEntity().getContent();\r\n			BufferedReader buffer = new BufferedReader(new InputStreamReader(content));\r\n			String s;\r\n			while ((s = buffer.readLine()) != null) {\r\n				response += s;\r\n			}\r\n		}\r\n		catch (Exception e) {\r\n			e.printStackTrace();\r\n		}\r\n		return response;\r\n	}\r\n\r\n	@Override\r\n	protected void onPreExecute() {\r\n		super.onPreExecute();\r\n		progressDialog = ProgressDialog.show(mContext, "", "Please wait");\r\n	}\r\n\r\n	@Override\r\n	protected void onPostExecute(String result) {\r\n		new GeoNameXMLPullParser(result);\r\n		progressDialog.hide();\r\n	}\r\n\r\n	public class GeoNameXMLPullParser {\r\n\r\n		public ArrayList<GeoName> mListOfGeoName;\r\n		boolean onTableFields = false;\r\n\r\n		public GeoNameXMLPullParser(String xmlResponse) {\r\n			XmlPullParserFactory factory = null;\r\n			try {\r\n				factory = XmlPullParserFactory.newInstance();\r\n\r\n				factory.setNamespaceAware(true);\r\n				XmlPullParser xpp = factory.newPullParser();\r\n\r\n				xpp.setInput(new StringReader(xmlResponse));\r\n				int eventType = xpp.getEventType();\r\n				String mCurrentStartTag = "";\r\n				String mCurrentEndTag = "";\r\n\r\n				GeoName geoName = new GeoName();\r\n\r\n				mListOfGeoName = new ArrayList<GeoName>();\r\n\r\n				while (eventType != XmlPullParser.END_DOCUMENT) {\r\n					if (eventType == XmlPullParser.START_DOCUMENT) {\r\n\r\n					} else if (eventType == XmlPullParser.END_DOCUMENT) {\r\n\r\n					} else if (eventType == XmlPullParser.START_TAG) {\r\n\r\n						mCurrentStartTag = xpp.getName();\r\n						if (mCurrentStartTag.equals("code")) {\r\n							onTableFields = true;\r\n							// reinstantiate a new model object\r\n							geoName = new GeoName();\r\n						}\r\n					} else if (eventType == XmlPullParser.END_TAG) {\r\n						mCurrentEndTag = xpp.getName();\r\n						if (mCurrentEndTag.equals("code")) {\r\n							onTableFields = false;\r\n						}\r\n					} else if (eventType == XmlPullParser.TEXT) {\r\n\r\n						if (mCurrentStartTag.equals("code")) {\r\n							onTableFields = true;\r\n						}\r\n\r\n						if (onTableFields) {\r\n							Log.d("DEBUG xpp.getText()", xpp.getText());\r\n\r\n							if (mCurrentStartTag.equals("postalcode")) {\r\n								geoName.setPostalCode(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("adminCode3")) {\r\n								geoName.setAdminCode3(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("adminCode2")) {\r\n								geoName.setAdminCode2(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("adminCode1")) {\r\n								geoName.setAdminCode1(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("adminName2")) {\r\n								geoName.setAdminName2(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("adminName1")) {\r\n								geoName.setAdminName1(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("lat")) {\r\n								geoName.setLat(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("lng")) {\r\n								geoName.setLng(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("countryCode")) {\r\n								geoName.setCountryCode(xpp.getText());\r\n							}\r\n							if (mCurrentStartTag.equals("name")) {\r\n								geoName.setPlaceName(xpp.getText());\r\n							}\r\n						}\r\n						if (mCurrentEndTag.equals("code")) {\r\n\r\n							mListOfGeoName.add(geoName);\r\n						}\r\n					}\r\n					try {\r\n						eventType = xpp.next();\r\n					}\r\n					catch (Exception e) {\r\n						Log.d("DEBUG", "throws an IOException");\r\n					}\r\n				}\r\n				//SUCCESS RETURN\r\n				mAsyncInterface.asyncDownloadSuccess(mListOfGeoName);\r\n\r\n			}\r\n			catch (XmlPullParserException e) {\r\n				e.printStackTrace();\r\n				//FAIL RETURN\r\n				mAsyncInterface.asyncDownloadFailure();\r\n			}\r\n\r\n		}\r\n\r\n	}\r\n\r\n}\r\n-- UniversalURL\r\n\r\npublic class UniversalURL {\r\n\r\n   // FOR XML\r\n    //private HashMap<String, String> hashMapOfQueryKeysAndValues;\r\n    //private String mQueryString;\r\n\r\n    /**  ---------------------------------------------------------------------------------------------------------------------\r\n     * XML\r\n     * @param baseURL\r\n     * @param hashMapQueryKeysAndValues\r\n\r\n    public UniversalURL(String baseURL, HashMap<String, String> hashMapQueryKeysAndValues) {\r\n        this.hashMapOfQueryKeysAndValues = hashMapQueryKeysAndValues;\r\n        String queryString = baseURL;\r\n        Iterator iterator = hashMapOfQueryKeysAndValues.keySet().iterator();\r\n        while (iterator.hasNext()) {\r\n            String key = (String) iterator.next();\r\n            String value = hashMapOfQueryKeysAndValues.get(key);\r\n            if(key.equals("username")){\r\n                queryString += "maxRows=10&" +key + "=" + value;\r\n            }else{\r\n                queryString += key + "=" + value + "&";\r\n            }\r\n\r\n        }\r\n        this.mQueryString = queryString;\r\n    }\r\n\r\n    public String getQueryString() {\r\n        return mQueryString;\r\n    }\r\n     */\r\n\r\n\r\n    /**  ---------------------------------------------------------------------------------------------------------------------\r\n     * JSON\r\n     * @param baseURL\r\n     * @param hashMapQueryKeysAndValues\r\n     * @return\r\n     */\r\n    public static JSONObject getJSONObjectFromUrl(String baseURL, HashMap<String, String> hashMapQueryKeysAndValues) {\r\n        String queryString = baseURL;\r\n        Iterator iterator = hashMapQueryKeysAndValues.keySet().iterator();\r\n        while (iterator.hasNext()) {\r\n            String key = (String) iterator.next();\r\n            String value = hashMapQueryKeysAndValues.get(key);\r\n            queryString += key + "=" + value + "&";\r\n        }\r\n        String response = "";\r\n        DefaultHttpClient client = new DefaultHttpClient();\r\n        HttpGet httpGet = new HttpGet(queryString);\r\n        try {\r\n            HttpResponse execute = client.execute(httpGet);\r\n            InputStream content = execute.getEntity().getContent();\r\n            BufferedReader buffer = new BufferedReader(new InputStreamReader(content));\r\n            String s;\r\n            while ((s = buffer.readLine()) != null) {\r\n                response += s;\r\n            }\r\n            return new JSONObject(response);\r\n        }\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n// JAVA activities\r\n\r\n-- mainActivity\r\n\r\npublic class MainActivity extends Activity implements View.OnClickListener, AsyncInterface {\r\n\r\n	private EditText mInputPostalCode;\r\n	private Button mBtnSubmit;\r\n	private AsyncJSONDownload mAsyncJSONDownload;\r\n	private AsyncXMLDownload mAsyncXMLDownload;\r\n	private Button mBtnJson;\r\n	private Button mBtnXml;\r\n    boolean json = false;\r\n\r\n	@Override\r\n	public void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n		setContentView(R.layout.activity_main);\r\n\r\n		mInputPostalCode = (EditText) findViewById(R.id.btnPostalCode);\r\n\r\n		mBtnSubmit = (Button) findViewById(R.id.btnSubmit);\r\n		mBtnSubmit.setOnClickListener(this);\r\n		mBtnSubmit.setEnabled(true);\r\n\r\n		mBtnJson = (Button) findViewById(R.id.btnJson);\r\n		mBtnJson.setOnClickListener(this);\r\n\r\n		mBtnXml = (Button) findViewById(R.id.btnXml);\r\n		mBtnXml.setOnClickListener(this);\r\n	}\r\n\r\n	@Override\r\n	public void onClick(View view) {\r\n\r\n		switch (view.getId()) {\r\n			case R.id.btnJson:\r\n				Log.d("DEBUG", "select: json");\r\n				json = true;\r\n				break;\r\n\r\n			case R.id.btnXml:\r\n				Log.d("DEBUG", "select: xml");\r\n				json = false;\r\n				break;\r\n\r\n			case R.id.btnSubmit:\r\n				if (!mInputPostalCode.getText().toString().equals("")) {\r\n					if (json) {\r\n						Log.d("DEBUG", "responseType:  J S O N !");\r\n						String baseURL = "http://api.geonames.org/postalCodeLookupJSON?";\r\n						// prevent empty search\r\n                        HashMap<String, String> hashMapQueryKeysAndValues = new HashMap<String, String>();\r\n                        hashMapQueryKeysAndValues.put("postalcode", mInputPostalCode.getText().toString());\r\n                        hashMapQueryKeysAndValues.put("username", "indatustest");\r\n\r\n                        mAsyncJSONDownload = new AsyncJSONDownload(this, MainActivity.this, hashMapQueryKeysAndValues);\r\n                        mAsyncJSONDownload.execute(baseURL);\r\n\r\n					} else {\r\n						Log.d("DEBUG", "responseType:  X M L !");\r\n						String baseURL = "http://api.geonames.org/postalCodeSearch?";\r\n						HashMap<String, String> hashMapQueryKeysAndValues = new HashMap<String, String>();\r\n						hashMapQueryKeysAndValues.put("postalcode", mInputPostalCode.getText().toString());\r\n						hashMapQueryKeysAndValues.put("username", "indatustest");\r\n                        mAsyncXMLDownload = new AsyncXMLDownload(this, MainActivity.this,hashMapQueryKeysAndValues);\r\n                        mAsyncXMLDownload.execute(baseURL);\r\n					}\r\n\r\n				}\r\n\r\n				break;\r\n		}\r\n\r\n	}\r\n\r\n	@Override\r\n	public void asyncDownloadSuccess(ArrayList<GeoName> arrayListOfGeoName) {\r\n		//SUCCESS\r\n		Intent intent = new Intent(MainActivity.this, ResultActivity.class);\r\n		ArrayList<GeoName> geoNameList = (ArrayList<GeoName>) arrayListOfGeoName;\r\n		intent.putParcelableArrayListExtra("data", geoNameList);\r\n		startActivity(intent);\r\n	}\r\n\r\n	@Override\r\n	public void asyncDownloadFailure() {\r\n		//FAIL\r\n	}\r\n\r\n}\r\n\r\n\r\n-- ResultActivity\r\n\r\npublic class ResultActivity extends Activity {\r\n\r\n	private ListView mListView;\r\n	private List<GeoName> mListOfGeoName;\r\n\r\n	@Override\r\n	protected void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n		setContentView(R.layout.activity_result);\r\n		mListOfGeoName = getIntent().getParcelableArrayListExtra(getString(R.string.data));\r\n        mListView = (ListView) findViewById(R.id.hashMap_list);\r\n        ArrayOfObjectsListAdapter arrayOfObjectsListAdapter = new ArrayOfObjectsListAdapter(ResultActivity.this, mListOfGeoName);\r\n        mListView.setAdapter(arrayOfObjectsListAdapter);\r\n	}\r\n\r\n}\r\n\r\n', '2014-03-03 15:08:07'),
(50, ' android', 'AudioX', ' \r\n\r\n// manifest\r\n <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>\r\n    <uses-permission android:name="android.permission.RECORD_AUDIO" />\r\n\r\n// XML activity main\r\n    <?xml version="1.0" encoding="utf-8"?>\r\n    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n        android:layout_width="match_parent"\r\n        android:layout_height="match_parent"\r\n        android:orientation="vertical" >\r\n\r\n        <Button\r\n            android:id="@+id/start"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="Start Recording"\r\n            android:onClick="startRecording" />\r\n\r\n\r\n\r\n        <Button\r\n            android:id="@+id/stop"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="Stop Recording"\r\n            android:enabled="false"\r\n            android:onClick="stopRecording"\r\n            />\r\n\r\n        <Button\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="Play Back"\r\n            android:id="@+id/playBack"\r\n            android:layout_gravity="center_vertical" />\r\n\r\n\r\n    </LinearLayout>\r\n\r\n  // JAVA main activity\r\n\r\n\r\npublic class MainActivity extends Activity implements View.OnClickListener {\r\n\r\n	MediaRecorder recorder;\r\n	File audiofile = null;\r\n	private static final String TAG = "SoundRecordingActivity";\r\n	private View startButton;\r\n	private View stopButton;\r\n	private Button playBack;\r\n	private Uri recordingUri;\r\n\r\n	@Override\r\n	public void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n		setContentView(R.layout.activity_main);\r\n		startButton = findViewById(R.id.start);\r\n		stopButton = findViewById(R.id.stop);\r\n		playBack = (Button) findViewById(R.id.playBack);\r\n		playBack.setOnClickListener(this);\r\n\r\n		// Set the hardware buttons to control the music\r\n		this.setVolumeControlStream(AudioManager.STREAM_MUSIC);\r\n\r\n	}\r\n\r\n	public void startRecording(View view) throws IOException {\r\n\r\n		startButton.setEnabled(false);\r\n		stopButton.setEnabled(true);\r\n\r\n		File sampleDir = Environment.getExternalStorageDirectory();\r\n		try {\r\n			audiofile = File.createTempFile("sound", ".3gp", sampleDir);\r\n		}\r\n		catch (IOException e) {\r\n			Log.e(TAG, "sdcard access error");\r\n			return;\r\n		}\r\n		recorder = new MediaRecorder();\r\n		recorder.setAudioSource(MediaRecorder.AudioSource.MIC);\r\n		recorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);\r\n		recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);\r\n		recorder.setOutputFile(audiofile.getAbsolutePath());\r\n		recorder.prepare();\r\n		recorder.start();\r\n	}\r\n\r\n	public void stopRecording(View view) {\r\n		startButton.setEnabled(true);\r\n		stopButton.setEnabled(false);\r\n		recorder.stop();\r\n		recorder.release();\r\n		addRecordingToMediaLibrary();\r\n	}\r\n\r\n	protected void addRecordingToMediaLibrary() {\r\n		ContentValues values = new ContentValues(4);\r\n		long current = System.currentTimeMillis();\r\n		values.put(MediaStore.Audio.Media.TITLE, "audio" + audiofile.getName());\r\n		values.put(MediaStore.Audio.Media.DATE_ADDED, (int) (current / 1000));\r\n		values.put(MediaStore.Audio.Media.MIME_TYPE, "audio/3gpp");\r\n		values.put(MediaStore.Audio.Media.DATA, audiofile.getAbsolutePath());\r\n		ContentResolver contentResolver = getContentResolver();\r\n\r\n		Uri base = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n		Uri newUri = contentResolver.insert(base, values);\r\n\r\n		sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, newUri));\r\n		Toast.makeText(this, "Added File " + newUri, Toast.LENGTH_LONG).show();\r\n		recordingUri = newUri;\r\n		Log.d("DEBUG: recording URI to string:", String.valueOf(newUri));\r\n		// URI looks like this-> //content://media/external/audio/media/949\r\n	}\r\n\r\n	@Override\r\n	public void onClick(View v) {\r\n		switch (v.getId()) {\r\n			case R.id.playBack:\r\n				PlayAudio();\r\n				break;\r\n		}\r\n	}\r\n\r\n	public void PlayAudio() {\r\n		MediaPlayer mPlayer = new MediaPlayer();\r\n		mPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\r\n		//Set the data source as a content Uri:\r\n		try {\r\n			mPlayer.setDataSource(getApplicationContext(), recordingUri);\r\n		}\r\n		catch (IllegalArgumentException e) {\r\n			Toast.makeText(getApplicationContext(), "You might not set the URI correctly!", Toast.LENGTH_LONG).show();\r\n		}\r\n		catch (SecurityException e) {\r\n			Toast.makeText(getApplicationContext(), "You might not set the URI correctly!", Toast.LENGTH_LONG).show();\r\n		}\r\n		catch (IllegalStateException e) {\r\n			Toast.makeText(getApplicationContext(), "You might not set the URI correctly!", Toast.LENGTH_LONG).show();\r\n		}\r\n		catch (IOException e) {\r\n			e.printStackTrace();\r\n		}\r\n\r\n		//Prepare the player for playback, synchronously:\r\n		try {\r\n			mPlayer.prepare();\r\n		}\r\n		catch (IllegalStateException e) {\r\n			Toast.makeText(getApplicationContext(), "You might not set the URI correctly!", Toast.LENGTH_LONG).show();\r\n		}\r\n		catch (IOException e) {\r\n			Toast.makeText(getApplicationContext(), "You might not set the URI correctly!", Toast.LENGTH_LONG).show();\r\n		}\r\n		//Start the player:\r\n		mPlayer.start();\r\n\r\n	}\r\n}\r\n', '2014-03-03 15:10:44'),
(51, ' android', 'CalendarEventX', ' \r\n\r\n// JAVA main activity\r\n\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n	@Override\r\n	protected void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n		setContentView(R.layout.activity_main);\r\n\r\n		//USER INSERTED EVENT via Default\r\n		// ACTION_INSERT does not work on all phones\r\n		// use  Intent.ACTION_EDIT in this case\r\n		/*\r\n		 * Intent intentUser = new Intent(Intent.ACTION_INSERT); intentUser.setData(CalendarContract.Events.CONTENT_URI); startActivity(intentUser);\r\n		 */\r\n		/* */\r\n		Intent intent = new Intent(Intent.ACTION_INSERT);\r\n		intent.setType("vnd.android.cursor.item/event");\r\n		intent.putExtra(CalendarContract.Events.TITLE, "Learn Android");\r\n		intent.putExtra(CalendarContract.Events.EVENT_LOCATION, "Home sweet home");\r\n		intent.putExtra(CalendarContract.Events.DESCRIPTION, "Download Examples");\r\n\r\n		// Setting dates\r\n		GregorianCalendar calDate = new GregorianCalendar(2014,1,28); // months are 0-11\r\n       // GregorianCalendar calxDate = new GregorianCalendar(2014,2,28);\r\n		intent.putExtra(CalendarContract.EXTRA_EVENT_BEGIN_TIME, calDate.getTimeInMillis());\r\n		intent.putExtra(CalendarContract.EXTRA_EVENT_END_TIME, calDate.getTimeInMillis());\r\n\r\n		// make it a full day event\r\n		intent.putExtra(CalendarContract.EXTRA_EVENT_ALL_DAY, true);\r\n\r\n		// make it a recurring Event\r\n		//intent.putExtra(CalendarContract.Events.RRULE, "FREQ=WEEKLY;COUNT=11;WKST=SU;BYDAY=TU,TH");\r\n\r\n		// Making it private and shown as busy\r\n		intent.putExtra(CalendarContract.Events.ACCESS_LEVEL, CalendarContract.Events.ACCESS_PRIVATE);\r\n		intent.putExtra(CalendarContract.Events.AVAILABILITY, CalendarContract.Events.AVAILABILITY_BUSY);\r\n\r\n		startActivity(intent);\r\n	}\r\n\r\n}\r\n\r\n', '2014-03-03 15:14:31'),
(52, ' android', 'CalendarX(datepicker)', ' // ( date picker )\r\n\r\n\r\n// GRADLE\r\n\r\ndependencies {\r\n    compile -----com.android.support:support-v4:19.0.1---- replace with single apostrophes\r\n}\r\n\r\n\r\n\r\n// XML\r\n\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:orientation="vertical"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    android:layout_gravity="center_horizontal|top">\r\n    <EditText\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="wrap_content"\r\n        android:inputType="date"\r\n        android:ems="10"\r\n        android:id="@+id/add_work_inputDate"\r\n        android:layout_gravity="center_horizontal"\r\n        android:hint="Date" />\r\n    <Button\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content"\r\n        android:text="OK"\r\n        android:id="@+id/add_work_btnCreate" />\r\n\r\n\r\n</LinearLayout>\r\n\r\n\r\n// JAVA\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.Dialog;\r\nimport android.app.DialogFragment;\r\nimport android.content.DialogInterface;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\n\r\nimport java.util.Calendar;\r\n\r\npublic class MainActivity extends Activity implements View.OnClickListener, View.OnTouchListener  {\r\n\r\n    private Button btnCreate;\r\n    private EditText inputDate;\r\n    private boolean mFired = false;\r\n\r\n    /**\r\n     * This method sets up the UI, including a "Date Dialog".\r\n     *\r\n     * @param savedInstanceState\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        btnCreate = (Button) findViewById(R.id.add_work_btnCreate);\r\n        btnCreate.setOnClickListener(this);\r\n        inputDate = (EditText) findViewById(R.id.add_work_inputDate);\r\n        inputDate.setFocusable(false);\r\n        inputDate.setClickable(true);\r\n        inputDate.setOnTouchListener(this);\r\n    }\r\n\r\n    /**\r\n     * This method is the OnClickListener delegate method that receives the user input, parses the data accordingly, and if requirements are met, creates a new\r\n     * Hours record. Otherwise it prompts the user to correct their errors.\r\n     *\r\n     * @param v\r\n     */\r\n    @Override\r\n    public void onClick(View v) {\r\n        String str_date = String.valueOf(inputDate.getText());\r\n            //Screen Input Data\r\n            if (!str_date.equals("")) {\r\n                // DO SOMETHING WITH THE DATE FROM THE TEXT FIELD\r\n                Log.d("DEBUG",str_date);\r\n            } else {\r\n                alertUserToFixDataEntered();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * This method creates and displays the inputDate dialog.\r\n     */\r\n    public void alertUserToFixDataEntered() {\r\n        AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);\r\n        alertDialog.setTitle("Alert");\r\n        alertDialog.setMessage("Make sure the data you entered is correct.Thank you.");\r\n        alertDialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //Now users are aware that they need to re-enter a piece of data.\r\n            }\r\n        });\r\n        alertDialog.show();\r\n    }\r\n\r\n    /**\r\n     * This method creates a date picker when the input text for date is clicked.\r\n     *\r\n     * @param v\r\n     * @param event\r\n     * @return\r\n     */\r\n    @Override\r\n    public boolean onTouch(View v, MotionEvent event) {\r\n        showDatePickerDialog(v);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * NEW DATE PICKER\r\n     */\r\n\r\n    public void showDatePickerDialog(View v) {\r\n        if (mFired) {\r\n            Log.d("DEBUG", "Double showDatePickerDialog dismiss duplicate fire.(per android Issue 64895: Issue 34860 )");\r\n        } else {\r\n            mFired = true;\r\n            DialogFragment newFragment = new DatePickerFragment();\r\n            newFragment.show(getFragmentManager(), "datePicker");\r\n        }\r\n    }\r\n\r\n    public class DatePickerFragment extends DialogFragment implements DatePickerDialog.OnDateSetListener {\r\n\r\n        @Override\r\n        public Dialog onCreateDialog(Bundle savedInstanceState) {\r\n            final Calendar c = Calendar.getInstance();\r\n            int year = c.get(Calendar.YEAR);\r\n            int month = c.get(Calendar.MONTH);\r\n            int day = c.get(Calendar.DAY_OF_MONTH);\r\n            return new DatePickerDialog(getActivity(), this, year, month, day);\r\n\r\n        }\r\n\r\n        public void onDateSet(DatePicker view, int year, int month, int day) {\r\n            String time = Integer.toString(month + 1) + " / " + Integer.toString(day) + " / " + Integer.toString(year);\r\n            inputDate.setText(time);\r\n\r\n            mFired = false;\r\n        }\r\n    }\r\n\r\n}\r\n', '2014-03-03 15:18:50');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(53, ' android', 'CameraX', ' This app starts based on info here, using existing camera app.\r\nhttp://developer.android.com/guide/topics/media/camera.html#intents\r\n\r\nManifest:\r\n<!--\r\nQuick Camera Manifest Requirements:\r\n\r\n <uses-permission android:name="android.permission.CAMERA" />\r\n    <uses-feature android:name="android.hardware.camera" />\r\n    <uses-feature android:name="android.hardware.camera" android:required="false" />\r\n    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />\r\n    <uses-permission android:name="android.permission.RECORD_AUDIO" />\r\n    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />\r\n-->\r\n\r\n\r\n//JAVA CLASS\r\npackage com.mocura.camerax;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\n\r\n/**\r\n * Created by BForte on 1/30/14.\r\n */\r\npublic class MyCameraActivity extends Activity {\r\n    private static final int CAMERA_REQUEST = 1888;\r\n    private ImageView imageView;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.main);\r\n        this.imageView = (ImageView)this.findViewById(R.id.imageView1);\r\n        Button photoButton = (Button) this.findViewById(R.id.button1);\r\n\r\n        photoButton.setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                startActivityForResult(cameraIntent, CAMERA_REQUEST);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        if (requestCode == CAMERA_REQUEST && resultCode == RESULT_OK) {\r\n            Bitmap photo = (Bitmap) data.getExtras().get("data");\r\n            imageView.setImageBitmap(photo);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// XML\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:orientation="vertical"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    >\r\n    <Button android:id="@+id/button1" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="photo"></Button>\r\n    <ImageView android:id="@+id/imageView1" android:layout_height="wrap_content" android:src="@drawable/ic_launcher" android:layout_width="wrap_content"></ImageView>\r\n\r\n</LinearLayout>', '2014-03-03 15:19:47'),
(54, ' android', 'ContactsX', ' \r\n\r\n\r\n\r\n// manifest\r\n<uses-permission android:name="android.permission.READ_CONTACTS" />\r\n<uses-permission android:name="android.permission.WRITE_CONTACTS" />\r\n\r\n\r\n//JAVA\r\n    public void addAContact() {\r\n\r\n    		String DisplayName = "Zeus";\r\n    		String MobileNumber = "333-333-3333";\r\n    		String HomeNumber = "502-234-4563";\r\n    		String WorkNumber = "2222";\r\n    		String emailID = "email@nomail.com";\r\n    		String company = "bad";\r\n    		String jobTitle = "abcd";\r\n\r\n    		ArrayList<ContentProviderOperation> ops = new ArrayList<ContentProviderOperation>();\r\n\r\n    		ops.add(ContentProviderOperation.newInsert(ContactsContract.RawContacts.CONTENT_URI).withValue(ContactsContract.RawContacts.ACCOUNT_TYPE, null)\r\n    				.withValue(ContactsContract.RawContacts.ACCOUNT_NAME, null).build());\r\n\r\n    		//------------------------------------------------------ Names\r\n    		if (DisplayName != null) {\r\n    			ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI).withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)\r\n    					.withValue(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE)\r\n    					.withValue(ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME, DisplayName).build());\r\n    		}\r\n\r\n    		//------------------------------------------------------ Mobile Number\r\n    		if (MobileNumber != null) {\r\n    			ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI).withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)\r\n    					.withValue(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)\r\n    					.withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, MobileNumber)\r\n    					.withValue(ContactsContract.CommonDataKinds.Phone.TYPE, ContactsContract.CommonDataKinds.Phone.TYPE_MOBILE).build());\r\n    		}\r\n\r\n    		//------------------------------------------------------ Home Numbers\r\n    		if (HomeNumber != null) {\r\n    			ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI).withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)\r\n    					.withValue(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)\r\n    					.withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, HomeNumber)\r\n    					.withValue(ContactsContract.CommonDataKinds.Phone.TYPE, ContactsContract.CommonDataKinds.Phone.TYPE_HOME).build());\r\n    		}\r\n\r\n    		//------------------------------------------------------ Work Numbers\r\n    		if (WorkNumber != null) {\r\n    			ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI).withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)\r\n    					.withValue(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)\r\n    					.withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, WorkNumber)\r\n    					.withValue(ContactsContract.CommonDataKinds.Phone.TYPE, ContactsContract.CommonDataKinds.Phone.TYPE_WORK).build());\r\n    		}\r\n\r\n    		//------------------------------------------------------ Email\r\n    		if (emailID != null) {\r\n    			ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI).withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)\r\n    					.withValue(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Email.CONTENT_ITEM_TYPE)\r\n    					.withValue(ContactsContract.CommonDataKinds.Email.DATA, emailID)\r\n    					.withValue(ContactsContract.CommonDataKinds.Email.TYPE, ContactsContract.CommonDataKinds.Email.TYPE_WORK).build());\r\n    		}\r\n\r\n    		//------------------------------------------------------ Organization\r\n    		if (!company.equals("") && !jobTitle.equals("")) {\r\n    			ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI).withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)\r\n    					.withValue(ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Organization.CONTENT_ITEM_TYPE)\r\n    					.withValue(ContactsContract.CommonDataKinds.Organization.COMPANY, company)\r\n    					.withValue(ContactsContract.CommonDataKinds.Organization.TYPE, ContactsContract.CommonDataKinds.Organization.TYPE_WORK)\r\n    					.withValue(ContactsContract.CommonDataKinds.Organization.TITLE, jobTitle)\r\n    					.withValue(ContactsContract.CommonDataKinds.Organization.TYPE, ContactsContract.CommonDataKinds.Organization.TYPE_WORK).build());\r\n    		}\r\n\r\n    		// Asking the Contact provider to create a new contact\r\n    		try {\r\n    			getContentResolver().applyBatch(ContactsContract.AUTHORITY, ops);\r\n    			Toast.makeText(MainActivity.this, "SUCCESSFULLY ADDED CONTACT  name XYZ ? ", Toast.LENGTH_SHORT).show();\r\n    		}\r\n    		catch (Exception e) {\r\n    			e.printStackTrace();\r\n    			Toast.makeText(MainActivity.this, "Exception: " + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n    		}\r\n    	}\r\n\r\n\r\n    	public void readAllContacts(){\r\n                Cursor cursor = getContentResolver().query(ContactsContract.Contacts.CONTENT_URI,null, null, null, null);\r\n\r\n                while (cursor.moveToNext()) {\r\n                    String contactId = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts._ID));\r\n                    String name      = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));\r\n\r\n                    System.out.println( contactId.toString() + "   " + name);\r\n                }\r\n                cursor.close();\r\n            }\r\n', '2014-03-03 15:20:23'),
(55, ' android', 'DataX', ' // ACTIVITY\r\npublic class MainActivity extends ListActivity {\r\n    public CommentsSQLiteHelperDeluxe mCommentsSQLiteHelperDeluxe;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        mCommentsSQLiteHelperDeluxe = new CommentsSQLiteHelperDeluxe(this);\r\n        mCommentsSQLiteHelperDeluxe.open();\r\n\r\n        List<Comment> values = mCommentsSQLiteHelperDeluxe.getAllComments();\r\n\r\n        // use the SimpleCursorAdapter to show the elements in a ListView\r\n        ArrayAdapter<Comment> adapter = new ArrayAdapter<Comment>(this,\r\n                android.R.layout.simple_list_item_1, values);\r\n        setListAdapter(adapter);\r\n    }\r\n\r\n\r\n    public void onClick(View view) {\r\n        @SuppressWarnings("unchecked")\r\n        ArrayAdapter<Comment> adapter = (ArrayAdapter<Comment>) getListAdapter();\r\n        Comment comment = null;\r\n        switch (view.getId()) {\r\n            case R.id.add:\r\n                String[] comments = new String[] { "Cool", "Very nice", "Hate it" };\r\n                int nextInt = new Random().nextInt(3);\r\n                // save the new comment to the database\r\n                comment = mCommentsSQLiteHelperDeluxe.createComment(comments[nextInt]);\r\n                adapter.add(comment);\r\n                break;\r\n            case R.id.delete:\r\n                if (getListAdapter().getCount() > 0) {\r\n                    comment = (Comment) getListAdapter().getItem(0);\r\n                    mCommentsSQLiteHelperDeluxe.deleteComment(comment);\r\n                    adapter.remove(comment);\r\n                }\r\n                break;\r\n        }\r\n        adapter.notifyDataSetChanged();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        mCommentsSQLiteHelperDeluxe.open();\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        mCommentsSQLiteHelperDeluxe.close();\r\n        super.onPause();\r\n    }\r\n\r\n}\r\n\r\n\r\n// MODEL\r\npublic class Comment {\r\n    private long mId;\r\n    private String mComment;\r\n\r\n    public long getId() {\r\n        return mId;\r\n    }\r\n\r\n    public void setId(long id) {\r\n        this.mId = id;\r\n    }\r\n\r\n    public String getComment() {\r\n        return mComment;\r\n    }\r\n\r\n    public void setComment(String comment) {\r\n        this.mComment = comment;\r\n    }\r\n\r\n    // Will be used by the ArrayAdapter in the ListView\r\n    @Override\r\n    public String toString() {\r\n        return mComment;\r\n    }\r\n}\r\n\r\n// SQLiteHelper\r\n\r\n\r\npublic class CommentsSQLiteHelperDeluxe extends SQLiteOpenHelper {\r\n\r\n    public static final String TABLE_COMMENTS = "comments";\r\n    public static final String COLUMN_ID = "_id";\r\n    public static final String COLUMN_COMMENT = "comment";\r\n\r\n    private static final String DATABASE_NAME = "commments.db";\r\n    private static final int DATABASE_VERSION = 1;\r\n\r\n    // Database creation sql statement\r\n    private static final String DATABASE_CREATE = "create table "\r\n            + TABLE_COMMENTS + "(" + COLUMN_ID\r\n            + " integer primary key autoincrement, " + COLUMN_COMMENT\r\n            + " text not null);";\r\n\r\n\r\n   private SQLiteDatabase mSQLiteDatabase;\r\n\r\n    public CommentsSQLiteHelperDeluxe(Context context) {\r\n        super(context, DATABASE_NAME, null, DATABASE_VERSION);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase database) {\r\n        database.execSQL(DATABASE_CREATE);\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n        Log.w("CommentsSQLiteHelperDeluxe",\r\n                "Upgrading database from version " + oldVersion + " to "\r\n                        + newVersion + ", which will destroy all old data");\r\n        db.execSQL("DROP TABLE IF EXISTS " + TABLE_COMMENTS);\r\n        onCreate(db);\r\n    }\r\n\r\n\r\n\r\n    private String[] mAllColumns = {  COLUMN_ID,\r\n             COLUMN_COMMENT };\r\n\r\n    public void open() throws SQLException {\r\n       mSQLiteDatabase = getWritableDatabase();\r\n    }\r\n\r\n    public void close() {\r\n        close();\r\n    }\r\n\r\n\r\n\r\n    public Comment createComment(String comment) {\r\n        ContentValues values = new ContentValues();\r\n        values.put(COLUMN_COMMENT, comment);\r\n        long insertId = mSQLiteDatabase.insert(TABLE_COMMENTS, null,\r\n                values);\r\n        Cursor cursor = mSQLiteDatabase.query(TABLE_COMMENTS,\r\n                mAllColumns, COLUMN_ID + " = " + insertId, null,\r\n                null, null, null);\r\n        cursor.moveToFirst();\r\n        Comment newComment = cursorToComment(cursor);\r\n        cursor.close();\r\n        return newComment;\r\n    }\r\n\r\n    public void deleteComment(Comment comment) {\r\n        long id = comment.getId();\r\n        System.out.println("Comment deleted with id: " + id);\r\n        mSQLiteDatabase.delete(TABLE_COMMENTS, COLUMN_ID\r\n                + " = " + id, null);\r\n    }\r\n\r\n    public List<Comment> getAllComments() {\r\n        List<Comment> comments = new ArrayList<Comment>();\r\n\r\n        Cursor cursor = mSQLiteDatabase.query(TABLE_COMMENTS,\r\n                mAllColumns, null, null, null, null, null);\r\n\r\n        cursor.moveToFirst();\r\n        while (!cursor.isAfterLast()) {\r\n            Comment comment = cursorToComment(cursor);\r\n            comments.add(comment);\r\n            cursor.moveToNext();\r\n        }\r\n        // make sure to close the cursor\r\n        cursor.close();\r\n        return comments;\r\n    }\r\n\r\n    private Comment cursorToComment(Cursor cursor) {\r\n        Comment comment = new Comment();\r\n        comment.setId(cursor.getLong(0));\r\n        comment.setComment(cursor.getString(1));\r\n        return comment;\r\n    }\r\n\r\n}\r\n\r\n\r\n// XML\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:orientation="vertical" >\r\n\r\n    <LinearLayout\r\n        android:id="@+id/group"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content" >\r\n\r\n        <Button\r\n            android:id="@+id/add"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="Add New"\r\n            android:onClick="onClick"/>\r\n\r\n        <Button\r\n            android:id="@+id/delete"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="Delete First"\r\n            android:onClick="onClick"/>\r\n\r\n    </LinearLayout>\r\n\r\n    <ListView\r\n        android:id="@android:id/list"\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content"\r\n        android:text="string/hello" />\r\n\r\n</LinearLayout>\r\n', '2014-03-03 15:21:20'),
(56, ' android', 'EmailX', ' //java\r\npackage com.example.app;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport java.io.File;\r\n\r\npublic class MainActivity extends Activity implements View.OnClickListener{\r\n\r\n    Button btnSend;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        btnSend  = (Button) findViewById(R.id.btnSend);\r\n        btnSend.setOnClickListener(this);\r\n\r\n    }\r\n\r\n    public void emailWithAnAttachment(){\r\n        Intent emailWithAttachmentsIntent = new Intent(Intent.ACTION_SEND);\r\n        emailWithAttachmentsIntent.setType("text/plain");\r\n        emailWithAttachmentsIntent.putExtra(Intent.EXTRA_EMAIL, new String[] {"email@example.com"});\r\n        emailWithAttachmentsIntent.putExtra(Intent.EXTRA_SUBJECT, "subject here");\r\n        emailWithAttachmentsIntent.putExtra(Intent.EXTRA_TEXT, "body text");\r\n        File root = Environment.getExternalStorageDirectory();\r\n        String pathToMyAttachedFile="temp/attachement.xml";\r\n        File file = new File(root, pathToMyAttachedFile);\r\n        if (!file.exists() || !file.canRead()) {\r\n            return;\r\n        }\r\n        Uri uri = Uri.fromFile(file);\r\n        emailWithAttachmentsIntent.putExtra(Intent.EXTRA_STREAM, uri);\r\n        startActivity(Intent.createChooser(emailWithAttachmentsIntent, "Pick an Email provider"));\r\n    }\r\n\r\n    public void sendBasicEmail(){\r\n        Intent intentEmail = new Intent(Intent.ACTION_SEND);\r\n        intentEmail.putExtra(Intent.EXTRA_EMAIL, new String[]{"bforte@indatus.com"});\r\n        intentEmail.putExtra(Intent.EXTRA_SUBJECT, "Android Email");\r\n        intentEmail.putExtra(Intent.EXTRA_TEXT, "sendBasicEmail");\r\n        intentEmail.setType("message/rfc822");\r\n        startActivity(Intent.createChooser(intentEmail, "Choose an email provider :"));\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        sendBasicEmail();\r\n    }\r\n}\r\n\r\n\r\n// xml\r\n\r\n<LinearLayout\r\n    android:orientation="vertical"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    xmlns:android="http://schemas.android.com/apk/res/android">\r\n\r\n    <Button\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:text="Send Email"\r\n        android:id="@+id/btnSend"\r\n        android:layout_gravity="center_horizontal" />\r\n</LinearLayout>', '2014-03-03 15:22:03'),
(57, ' android', 'FileX', ' //Quick File Write and Read\r\n// !! REPLACE --- with single apostrophes\r\n\r\n//manifest\r\n <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />\r\n\r\n\r\n //java\r\n public class MainActivity extends Activity {\r\n\r\n     private File root = new File(Environment.getExternalStorageDirectory(), "Notes");\r\n     private String mAbsoluteStoragePath;\r\n     private String mExternalStorageStatus;\r\n     private  TextView tv;\r\n\r\n     @Override\r\n     protected void onCreate(Bundle savedInstanceState) {\r\n         super.onCreate(savedInstanceState);\r\n         setContentView(R.layout.activity_main);\r\n\r\n         tv = (TextView)findViewById(R.id.text_view);\r\n\r\n         // GET ABSOLUTE PATH IF NECESSARY\r\n         mAbsoluteStoragePath =  Environment.getExternalStorageDirectory().getAbsolutePath();\r\n         Log.d("DEBUG mAbsoluteStoragePath:",mAbsoluteStoragePath);\r\n\r\n         //CHECK IF EXTERNAL STORAGE IS AVAILABLE\r\n         mExternalStorageStatus = Environment.getExternalStorageState();\r\n         if(mExternalStorageStatus.equals("mounted")){\r\n             generateNoteOnSD("foofile.txt","Hey there worldlings....");\r\n         }\r\n\r\n         readATextFile();\r\n     }\r\n\r\n     public void generateNoteOnSD(String sFileName, String sBody){\r\n\r\n         try\r\n         {\r\n            root = new File(Environment.getExternalStorageDirectory(), "Notes");\r\n             if (!root.exists()) {\r\n                 root.mkdirs();\r\n             }\r\n             File gpxfile = new File(root, sFileName);\r\n             FileWriter writer = new FileWriter(gpxfile);\r\n             writer.append(sBody);\r\n             writer.flush();\r\n             writer.close();\r\n             Toast.makeText(this, "Saved", Toast.LENGTH_SHORT).show();\r\n         }\r\n         catch(IOException e)\r\n         {\r\n             e.printStackTrace();\r\n         }\r\n     }\r\n\r\n\r\n     public void readATextFile(){\r\n\r\n          File file = new File(root,"foofile.txt");\r\n          StringBuilder text = new StringBuilder();\r\n         try {\r\n             BufferedReader br = new BufferedReader(new FileReader(file));\r\n             String line;\r\n\r\n             while ((line = br.readLine()) != null) {\r\n                 text.append(line);\r\n                 // HEADS UP !! replace --- with single apostrophe text.append(---\r\n---);\r\n             }\r\n         }\r\n         catch (IOException e) {\r\n             //You---ll need to add proper error handling here\r\n         }\r\n          tv.setText(text);\r\n     }\r\n\r\n }\r\n\r\n\r\n//XML\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.app.MainActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n    <LinearLayout\r\n        android:orientation="vertical"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        android:layout_gravity="center">\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="New Text"\r\n            android:id="@+id/text_view"\r\n            android:layout_gravity="center_horizontal" />\r\n    </LinearLayout>\r\n</FrameLayout>\r\n', '2014-03-03 15:24:31'),
(58, ' android', 'FragmentTabNavX', ' // XML\r\n-- tab bar navigation activity\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context=".TabBarNavigationActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n\r\n</FrameLayout>\r\n\r\n\r\n// XML --menu\r\n<menu xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    tools:context="com.example.app.MainActivity" >\r\n\r\n    <item\r\n        android:id="@+id/action_refresh"\r\n        android:orderInCategory="100"\r\n        android:showAsAction="never"\r\n\r\n        android:title="HOME"/>\r\n\r\n</menu>\r\n\r\n// XML strings\r\n  <!-- TABS -->\r\n    <string name="title_section1">1</string>\r\n    <string name="title_section2">2</string>\r\n    <string name="title_section3">3</string>\r\n\r\n\r\n\r\n\r\n// JAVA\r\n\r\n--main activity\r\n\r\npublic class MainActivity extends Activity implements\r\n        ActionBar.TabListener {\r\n\r\n\r\n    /**\r\n     * The serialization (saved instance state) Bundle key representing the\r\n     * current tab position.\r\n     */\r\n\r\n    private static final String STATE_SELECTED_NAVIGATION_ITEM = "selected_navigation_item";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.tabbarnavigation_activity);\r\n\r\n        // Set up the action bar to show tabs.\r\n        final ActionBar actionBar = getActionBar();\r\n        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);\r\n\r\n        // for each of the sections in the app, add a tab to the action bar.\r\n        actionBar.addTab(actionBar.newTab().setText(R.string.title_section1)\r\n                .setTabListener(this));\r\n        actionBar.addTab(actionBar.newTab().setText(R.string.title_section2)\r\n                .setTabListener(this));\r\n        actionBar.addTab(actionBar.newTab().setText(R.string.title_section3)\r\n                .setTabListener(this));\r\n\r\n\r\n\r\n        actionBar.setSubtitle("TabBarNavigation");\r\n        actionBar.setTitle("TabBarX");\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRestoreInstanceState(Bundle savedInstanceState) {\r\n        // Restore the previously serialized current tab position.\r\n        if (savedInstanceState.containsKey(STATE_SELECTED_NAVIGATION_ITEM)) {\r\n            getActionBar().setSelectedNavigationItem(savedInstanceState.getInt(STATE_SELECTED_NAVIGATION_ITEM));\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onSaveInstanceState(Bundle outState) {\r\n        // Serialize the current tab position.\r\n        outState.putInt(STATE_SELECTED_NAVIGATION_ITEM, getActionBar()\r\n                .getSelectedNavigationIndex());\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        getMenuInflater().inflate(R.menu.main, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.action_refresh:\r\n                Intent homeIntent = new Intent(MainActivity.this, MainActivity.class);\r\n                startActivity(homeIntent);\r\n                break;\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onTabSelected(ActionBar.Tab tab,\r\n                              FragmentTransaction fragmentTransaction) {\r\n\r\n        Log.d("DEBUG", String.valueOf(tab.getPosition()));\r\n        Fragment fragment;\r\n        Bundle args = new Bundle();\r\n        switch (tab.getPosition()) {\r\n\r\n            case 0:\r\n\r\n                fragment = new Tab1Fragment();\r\n                args.putInt(DummySectionFragment.ARG_SECTION_NUMBER,\r\n                        tab.getPosition() + 1);\r\n                fragment.setArguments(args);\r\n                getFragmentManager().beginTransaction()\r\n                        .replace(R.id.container, fragment).commit();\r\n                break;\r\n            case 1:\r\n\r\n                fragment = new Tab2Fragment();\r\n                args.putInt(Tab2Fragment.ARG_SECTION_NUMBER,\r\n                        tab.getPosition() + 1);\r\n                fragment.setArguments(args);\r\n                getFragmentManager().beginTransaction()\r\n                        .replace(R.id.container, fragment).commit();\r\n\r\n                break;\r\n            case 2:\r\n\r\n                fragment = new Tab3Fragment();\r\n                args.putInt(Tab3Fragment.ARG_SECTION_NUMBER,\r\n                        tab.getPosition() + 1);\r\n                fragment.setArguments(args);\r\n                getFragmentManager().beginTransaction()\r\n                        .replace(R.id.container, fragment).commit();\r\n\r\n                break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onTabUnselected(ActionBar.Tab tab,\r\n                                FragmentTransaction fragmentTransaction) {\r\n    }\r\n\r\n    @Override\r\n    public void onTabReselected(ActionBar.Tab tab,\r\n                                FragmentTransaction fragmentTransaction) {\r\n    }\r\n\r\n\r\n    /**\r\n     * A dummy fragment representing a section of the app\r\n     */\r\n\r\n    public static class DummySectionFragment extends Fragment {\r\n        public static final String ARG_SECTION_NUMBER = "placeholder_text";\r\n\r\n        @Override\r\n        public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                                 Bundle savedInstanceState) {\r\n            TextView textView = new TextView(getActivity());\r\n            textView.setGravity(Gravity.CENTER);\r\n            textView.setText(Integer.toString(getArguments().getInt(ARG_SECTION_NUMBER)));\r\n            return textView;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// JAVA tab fragments\r\n\r\npublic class Tab1Fragment  extends Fragment {\r\n\r\n    public static final String ARG_SECTION_NUMBER = "placeholder_text";\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        TextView textView = new TextView(getActivity());\r\n        textView.setGravity(Gravity.CENTER);\r\n        textView.setText("tab 1");\r\n        return textView;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\npublic class Tab2Fragment  extends Fragment {\r\n\r\n    public static final String ARG_SECTION_NUMBER = "placeholder_text";\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        TextView textView = new TextView(getActivity());\r\n        textView.setGravity(Gravity.CENTER);\r\n        textView.setText("tab 2");\r\n        return textView;\r\n    }\r\n}\r\n\r\n\r\n\r\npublic class Tab3Fragment  extends Fragment {\r\n\r\n    public static final String ARG_SECTION_NUMBER = "placeholder_text";\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        TextView textView = new TextView(getActivity());\r\n        textView.setGravity(Gravity.CENTER);\r\n        textView.setText("tab 3");\r\n        return textView;\r\n    }\r\n}', '2014-03-03 15:29:35'),
(59, ' android', 'GalleryX', ' \r\n// XML activity main\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.galleryx.MainActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n    <LinearLayout\r\n        android:orientation="vertical"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        android:layout_gravity="left|center_vertical">\r\n\r\n\r\n        <Gallery\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:id="@+id/gallery"\r\n            android:layout_gravity="center_horizontal" />\r\n    </LinearLayout>\r\n</FrameLayout>\r\n\r\n\r\n// XML gallery item\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:orientation="horizontal"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    android:id="@+id/gallery_item">\r\n\r\n    <TextView\r\n        android:id="@+id/textView"\r\n        android:layout_width="wrap_content"\r\n        android:text="TextView"\r\n        android:layout_height="wrap_content"\r\n        android:layout_alignParentTop="true"\r\n        android:layout_centerHorizontal="true"\r\n        android:layout_marginTop="14dp"></TextView>\r\n\r\n    <ImageView\r\n        android:layout_width="wrap_content"\r\n        android:id="@+id/imageView"\r\n        android:src="@drawable/ic_launcher"\r\n        android:layout_height="wrap_content"\r\n        android:layout_alignParentTop="true"\r\n        android:layout_alignParentRight="true"\r\n        android:layout_marginRight="22dp"></ImageView>\r\n\r\n    <CheckBox\r\n        android:id="@+id/checkBox"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:layout_alignParentTop="true"\r\n        android:layout_alignParentLeft="true"\r\n        android:layout_marginLeft="24dp"></CheckBox>\r\n</RelativeLayout>\r\n\r\n\r\n// JAVA main activity\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n\r\n   // Context c;\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        // Find our gallery view and set the adapter for it\r\n        Gallery gallery = (Gallery) findViewById(R.id.gallery);\r\n        gallery.setAdapter(new newGalleryAdapter(MainActivity.this));\r\n    }\r\n\r\n    // The new custom Gallery Adapter for our new layout\r\n\r\n    private class newGalleryAdapter extends BaseAdapter {\r\n        public Context context; // needed to create the view\r\n\r\n        public newGalleryAdapter(Context context) {\r\n            this.context = context;\r\n        }\r\n\r\n        // set to three for this example\r\n        // for normal use this should be set to the length of the data\r\n        // structure that contains the items to be displayed\r\n        public int getCount() {\r\n            return 3;\r\n\r\n        }\r\n\r\n        public Object getItem(int position) {\r\n            return position;\r\n        }\r\n\r\n        public long getItemId(int position) {\r\n            return position;\r\n        }\r\n\r\n        public View getView(int position, View convertView, ViewGroup parent) {\r\n            View v;\r\n\r\n            // just a simple optimiztaion -\r\n            // we only inflate a new layout if we do not have one to reuse\r\n\r\n            if (convertView == null) {\r\n                v = LayoutInflater.from(this.context).inflate(R.layout.gallery_item,\r\n                        parent, false);\r\n            }\r\n            else{\r\n                v = convertView;\r\n            }\r\n            // Now that we have our new custom View, find out widgets in the\r\n            // view and set them\r\n            TextView tv = (TextView) v.findViewById(R.id.textView);\r\n\r\n            tv.setText(String.valueOf(position));\r\n            CheckBox cb = (CheckBox) v.findViewById(R.id.checkBox);\r\n\r\n            // this just alternates what the checkbox states are\r\n            if (position % 2 == 0)\r\n                cb.setChecked(true);\r\n            else\r\n                cb.setChecked(false);\r\n            return v;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n', '2014-03-03 15:32:27'),
(60, ' android', 'GoogleAnalyticsX', '// GET A GOOGLE TRACKING ID\r\nhttp://www.google.com/analytics/\r\n\r\n\r\n//DOWNLOAD IT\r\nhttp://dl.google.com/googleanalyticsservices/GoogleAnalyticsServicesAndroid_3.01.zip\r\n\r\n//Manifest\r\n   <uses-permission android:name="android.permission.INTERNET" />\r\n    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\r\n\r\n\r\n\r\n// libs folder ( create or put the jar in it)\r\n\r\n// GRADLE\r\ndependencies {\r\n    compile files(---src/main/libs/libGoogleAnalyticsServices.jar---)\r\n}\r\n\r\n\r\n// JAVA\r\npublic class MainActivity extends Activity {\r\n\r\n    private EasyTracker easyTracker = null;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        easyTracker = EasyTracker.getInstance(MainActivity.this);\r\n\r\n        findViewById(R.id.trackEvent).setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View view) {\r\n                easyTracker.send(MapBuilder.createEvent("your_action",\r\n                        "event_name", "button_name/id", null).build());\r\n            }\r\n        });\r\n        findViewById(R.id.trackEvent2).setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View view) {\r\n                easyTracker.send(MapBuilder.createEvent("your_action2",\r\n                        "event_name2", "button_name2/id2", null).build());\r\n            }\r\n        });\r\n\r\n\r\n        findViewById(R.id.trackCrash).setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                try {\r\n                    int a[] = new int[2];\r\n                    int num = a[4];\r\n                } catch (ArrayIndexOutOfBoundsException e) {\r\n                    easyTracker.send(MapBuilder.createException(\r\n                            new StandardExceptionParser(MainActivity.this, null)\r\n                                    .getDescription(Thread.currentThread().getName(), e), false).build());\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //... // The rest of your onStart() code.\r\n        EasyTracker.getInstance(this).activityStart(this);  // Add this method.\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        //... // The rest of your onStop() code.\r\n        EasyTracker.getInstance(this).activityStop(this);  // Add this method.\r\n    }\r\n\r\n}\r\n\r\n\r\n//XML\r\nanalytics.xml\r\n<?xml version="1.0" encoding="utf-8" ?>\r\n\r\n<resources>\r\n    <!--Replace placeholder ID with your tracking ID-->\r\n    <string name="ga_trackingId">UA-48383737-1</string>\r\n\r\n    <!--Enable automatic activity tracking-->\r\n    <bool name="ga_autoActivityTracking">true</bool>\r\n\r\n    <!--Enable automatic exception tracking-->\r\n    <bool name="ga_reportUncaughtExceptions">true</bool>\r\n\r\n    <-- The screen names that will appear in reports -->\r\n    <string name="com.example.googleanalyticsz.MainActivity">Home Page</string>\r\n\r\n\r\n </resources>', '2014-03-03 15:33:49');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(61, ' android', 'GraphX', '\r\n//Gradle\r\n\r\ndependencies {\r\n    compile files(---src/main/libs/androidplot-core-0.6.0.jar---)\r\n}\r\n\r\n\r\n// MANIFEST\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\r\n    package="com.example.graphx" >\r\n\r\n    <application\r\n        android:allowBackup="true"\r\n        android:icon="@drawable/ic_launcher"\r\n        android:label="@string/app_name"\r\n        android:theme="@style/AppTheme" >\r\n        <activity\r\n            android:name="com.example.graphx.StaticChartActivity"\r\n            android:label="@string/app_name" >\r\n        </activity>\r\n        <activity\r\n            android:name="com.example.graphx.DynamicChartActivity"\r\n            android:label="@string/app_name" >\r\n        </activity>\r\n        <activity\r\n            android:name="com.example.graphx.BarPlotExampleActivity"\r\n            android:label="@string/app_name" >\r\n        </activity>\r\n        <activity\r\n            android:name="com.example.graphx.TimeSeriesActivity"\r\n            android:label="@string/app_name" >\r\n\r\n        </activity>\r\n        <activity\r\n            android:name="com.example.graphx.MainActivity"\r\n            android:label="@string/app_name" >\r\n            <intent-filter>\r\n                <action android:name="android.intent.action.MAIN" />\r\n\r\n                <category android:name="android.intent.category.LAUNCHER" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>\r\n\r\n\r\n//XML\r\n// actionbarbuttonsandmenu.xml\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context=".ActionBarButtonsAndMenuActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n\r\n</FrameLayout>\r\n\r\n//activity_dynamic_chart.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:orientation="vertical"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent">\r\n\r\n    <com.androidplot.xy.XYPlot\r\n        android:id="@+id/dynamicPlot"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="100px"\r\n        android:layout_marginTop="10px"\r\n        android:layout_marginLeft="10px"\r\n        android:layout_marginRight="10px"\r\n        title="Dynamic Plot" />\r\n\r\n</LinearLayout>\r\n\r\n// activity_main2.xml\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.graphx.MainActivity"\r\n    tools:ignore="MergeRootFrame" />\r\n\r\n//bar_plot_example.xml\r\n<?xml version="1.0" encoding="utf-8"?><!--\r\n  ~ Copyright 2012 AndroidPlot.com\r\n  ~\r\n  ~    Licensed under the Apache License, Version 2.0 (the "License");\r\n  ~    you may not use this file except in compliance with the License.\r\n  ~    You may obtain a copy of the License at\r\n  ~\r\n  ~        http://www.apache.org/licenses/LICENSE-2.0\r\n  ~\r\n  ~    Unless required by applicable law or agreed to in writing, software\r\n  ~    distributed under the License is distributed on an "AS IS" BASIS,\r\n  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  ~    See the License for the specific language governing permissions and\r\n  ~    limitations under the License.\r\n  -->\r\n\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    style="@style/AppTheme"\r\n    android:orientation="vertical"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent">\r\n\r\n    <com.androidplot.xy.XYPlot\r\n        android:id="@+id/mySimpleXYPlot"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        androidPlot.title="Growth"\r\n        androidPlot.domainLabel="Month"\r\n        androidPlot.rangeLabel="Revenue (millions)"\r\n        androidPlot.titleWidget.labelPaint.textSize="@dimen/title_font_size"\r\n        androidPlot.domainLabelWidget.labelPaint.textSize="@dimen/domain_label_font_size"\r\n        androidPlot.rangeLabelWidget.labelPaint.textSize="@dimen/range_label_font_size"\r\n        androidPlot.graphWidget.marginTop="20dp"\r\n        androidPlot.graphWidget.marginLeft="15dp"\r\n        androidPlot.graphWidget.marginBottom="25dp"\r\n        androidPlot.graphWidget.marginRight="10dp"\r\n        androidPlot.graphWidget.gridBackgroundPaint.color="#000000"\r\n        androidPlot.graphWidget.domainGridLinePaint.alpha="0"\r\n        androidPlot.graphWidget.domainOriginLinePaint.alpha="0"\r\n        androidPlot.graphWidget.rangeLabelPaint.textSize="@dimen/range_tick_label_font_size"\r\n        androidPlot.graphWidget.rangeOriginLabelPaint.textSize="@dimen/range_tick_label_font_size"\r\n        androidPlot.graphWidget.domainLabelPaint.textSize="@dimen/domain_tick_label_font_size"\r\n        androidPlot.graphWidget.domainOriginLabelPaint.textSize="@dimen/domain_tick_label_font_size"\r\n        androidPlot.legendWidget.textPaint.textSize="@dimen/legend_text_font_size"\r\n        androidPlot.legendWidget.iconSizeMetrics.heightMetric.value="15dp"\r\n        androidPlot.legendWidget.iconSizeMetrics.widthMetric.value="15dp"\r\n        androidPlot.legendWidget.heightMetric.value="25dp"\r\n        androidPlot.legendWidget.positionMetrics.anchor="right_bottom"\r\n        android:layout_weight="1"\r\n        androidPlot.graphWidget.gridLinePaint.color="#000000" />\r\n\r\n    <LinearLayout\r\n        android:layout_height="wrap_content"\r\n        android:layout_width="fill_parent"\r\n        android:layout_gravity="center"\r\n        android:orientation="horizontal">\r\n\r\n        <Spinner\r\n            android:id="@+id/spRenderStyle"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content" />\r\n\r\n        <Spinner\r\n            android:id="@+id/spSeriesSize"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_height="wrap_content"\r\n        android:layout_width="fill_parent"\r\n        android:layout_gravity="center"\r\n        android:orientation="horizontal">\r\n\r\n        <Spinner\r\n            android:id="@+id/spWidthStyle"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content" />\r\n\r\n        <RelativeLayout\r\n            android:id="@+id/sectionGraph"\r\n            android:layout_width="fill_parent"\r\n            android:layout_height="wrap_content">\r\n\r\n            <SeekBar\r\n                android:layout_width="fill_parent"\r\n                android:layout_height="wrap_content"\r\n                android:paddingLeft="10dp"\r\n                android:paddingRight="10dp"\r\n                android:max="300"\r\n                android:progress="10"\r\n                android:id="@+id/sbFixed" />\r\n\r\n            <SeekBar\r\n                android:layout_width="fill_parent"\r\n                android:layout_height="wrap_content"\r\n                android:paddingLeft="10dp"\r\n                android:paddingRight="10dp"\r\n                android:max="50"\r\n                android:progress="1"\r\n                android:id="@+id/sbVariable" />\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_height="wrap_content"\r\n        android:layout_width="wrap_content"\r\n        android:layout_gravity="center"\r\n        android:orientation="horizontal">\r\n\r\n        <CheckBox\r\n            android:id="@+id/s1CheckBox"\r\n            android:text="Series 1"\r\n            android:checked="true"\r\n            android:layout_height="wrap_content"\r\n            android:layout_width="fill_parent" />\r\n\r\n        <CheckBox\r\n            android:id="@+id/s2CheckBox"\r\n            android:text="Series 2"\r\n            android:checked="true"\r\n            android:layout_height="wrap_content"\r\n            android:layout_width="fill_parent" />\r\n    </LinearLayout>\r\n</LinearLayout>\r\n\r\n//fragment_main2.xml\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:paddingLeft="@dimen/activity_horizontal_margin"\r\n    android:paddingRight="@dimen/activity_horizontal_margin"\r\n    android:paddingTop="@dimen/activity_vertical_margin"\r\n    android:paddingBottom="@dimen/activity_vertical_margin"\r\n    tools:context="com.example.graphx.MainActivity$PlaceholderFragment">\r\n\r\n\r\n\r\n</RelativeLayout>\r\n\r\n//simple_xy_plot_example.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    style="@style/AppTheme"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    >\r\n\r\n    <com.androidplot.xy.XYPlot\r\n        android:id="@+id/mySimpleXYPlot"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        androidPlot.title="A Simple XY Plot"\r\n        androidPlot.domainLabel="Domain"\r\n        androidPlot.rangeLabel="Range"\r\n        androidPlot.titleWidget.labelPaint.textSize="@dimen/title_font_size"\r\n        androidPlot.domainLabelWidget.labelPaint.textSize="@dimen/domain_label_font_size"\r\n        androidPlot.rangeLabelWidget.labelPaint.textSize="@dimen/range_label_font_size"\r\n        androidPlot.graphWidget.marginTop="20dp"\r\n        androidPlot.graphWidget.marginLeft="15dp"\r\n        androidPlot.graphWidget.marginBottom="25dp"\r\n        androidPlot.graphWidget.marginRight="10dp"\r\n        androidPlot.graphWidget.rangeLabelPaint.textSize="@dimen/range_tick_label_font_size"\r\n        androidPlot.graphWidget.rangeOriginLabelPaint.textSize="@dimen/range_tick_label_font_size"\r\n        androidPlot.graphWidget.domainLabelPaint.textSize="@dimen/domain_tick_label_font_size"\r\n        androidPlot.graphWidget.domainOriginLabelPaint.textSize="@dimen/domain_tick_label_font_size"\r\n        androidPlot.legendWidget.textPaint.textSize="@dimen/legend_text_font_size"\r\n        androidPlot.legendWidget.iconSizeMetrics.heightMetric.value="15dp"\r\n        androidPlot.legendWidget.iconSizeMetrics.widthMetric.value="15dp"\r\n        androidPlot.legendWidget.heightMetric.value="25dp"\r\n        androidPlot.legendWidget.positionMetrics.anchor="right_bottom"\r\n        androidPlot.graphWidget.gridLinePaint.color="#000000"/>\r\n</LinearLayout>\r\n\r\n\r\n//time_series_example.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n\r\n<!--\r\n  ~ Copyright 2012 AndroidPlot.com\r\n  ~\r\n  ~    Licensed under the Apache License, Version 2.0 (the "License");\r\n  ~    you may not use this file except in compliance with the License.\r\n  ~    You may obtain a copy of the License at\r\n  ~\r\n  ~        http://www.apache.org/licenses/LICENSE-2.0\r\n  ~\r\n  ~    Unless required by applicable law or agreed to in writing, software\r\n  ~    distributed under the License is distributed on an "AS IS" BASIS,\r\n  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  ~    See the License for the specific language governing permissions and\r\n  ~    limitations under the License.\r\n  -->\r\n\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n              style="@style/AppTheme"\r\n              android:orientation="vertical"\r\n    android:layout_width="200dp"\r\n    android:layout_height="200dp"\r\n    >\r\n\r\n    <com.androidplot.xy.XYPlot\r\n            android:id="@+id/plot1"\r\n            android:layout_width="fill_parent"\r\n            android:layout_height="fill_parent"\r\n            title="@string/ts_plot1_title"\r\n            renderMode="use_main_thread"/>\r\n</LinearLayout>\r\n\r\n\r\n// XML\r\nmenu_example.xml\r\n<menu xmlns:android="http://schemas.android.com/apk/res/android" >\r\n\r\n    <item\r\n        android:id="@+id/action_refresh"\r\n        android:orderInCategory="100"\r\n        android:showAsAction="always"\r\n        android:icon="@drawable/ic_launcher"\r\n        android:title="Refresh"/>\r\n    <item\r\n        android:id="@+id/menuitem1"\r\n        android:title="@string/menu1">\r\n    </item>\r\n    <item\r\n        android:id="@+id/menuitem2"\r\n        android:title="@string/menu2">\r\n    </item>\r\n    <item\r\n        android:id="@+id/menuitem3"\r\n        android:title="@string/menu3">\r\n    </item>\r\n    <item\r\n        android:id="@+id/menuitem4"\r\n        android:title="@string/menu4">\r\n    </item>\r\n\r\n</menu>\r\n\r\n\r\n// XML strings.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<resources>\r\n\r\n    <string name="app_name">GraphX</string>\r\n    <string name="hello_world">Hello world!</string>\r\n    <string name="action_settings">Settings</string>\r\n    <string name="sxy_title">A Simple XY Plot</string>\r\n    <string name="ts_title">Time Series</string>\r\n    <string name="ts_plot1_title">Yearly UFO Sightings</string>\r\n    <string name="title_activity_main">MainActivity</string>\r\n\r\n    <string name="menu1">Static</string>\r\n    <string name="menu2">Dynamic</string>\r\n    <string name="menu3">BarChart</string>\r\n    <string name="menu4">TimeLine</string>\r\n\r\n</resources>\r\n\r\n\r\n// XML dimens.xml\r\n<resources>\r\n    <!-- Default screen margins, per the Android Design guidelines. -->\r\n    <dimen name="activity_horizontal_margin">16dp</dimen>\r\n    <dimen name="activity_vertical_margin">16dp</dimen>\r\n    <!-- Android Plot Demo -->\r\n    <dimen name="pie_segment_label_font_size">10dp</dimen>\r\n    <dimen name="title_font_size">20dp</dimen>\r\n    <dimen name="domain_label_font_size">13dp</dimen>\r\n    <dimen name="range_label_font_size">13dp</dimen>\r\n    <dimen name="range_tick_label_font_size">15dp</dimen>\r\n    <dimen name="domain_tick_label_font_size">15dp</dimen>\r\n    <dimen name="legend_text_font_size">20dp</dimen>\r\n    </resources>\r\n\r\n\r\n\r\n    // JAVA\r\n\r\n\r\npublic class BarPlotExampleActivity extends Activity {\r\n\r\n    private static final String NO_SELECTION_TXT = "Touch bar to select.";\r\n    private XYPlot plot;\r\n\r\n    private CheckBox series1CheckBox;\r\n    private CheckBox series2CheckBox;\r\n    private Spinner spRenderStyle, spWidthStyle, spSeriesSize;\r\n    private SeekBar sbFixedWidth, sbVariableWidth;\r\n\r\n    private XYSeries series1;\r\n    private XYSeries series2;\r\n    private enum SeriesSize {\r\n        TEN,\r\n        TWENTY,\r\n        SIXTY\r\n    }\r\n\r\n    // Create a couple arrays of y-values to plot:\r\n    Number[] series1Numbers10 = {2, null, 5, 2, 7, 4, 3, 7, 4, 5};\r\n    Number[] series2Numbers10 = {4, 6, 3, null, 2, 0, 7, 4, 5, 4};\r\n    Number[] series1Numbers20 = {2, null, 5, 2, 7, 4, 3, 7, 4, 5, 7, 4, 5, 8, 5, 3, 6, 3, 9, 3};\r\n    Number[] series2Numbers20 = {4, 6, 3, null, 2, 0, 7, 4, 5, 4, 9, 6, 2, 8, 4, 0, 7, 4, 7, 9};\r\n    Number[] series1Numbers60 = {2, null, 5, 2, 7, 4, 3, 7, 4, 5, 7, 4, 5, 8, 5, 3, 6, 3, 9, 3, 2, null, 5, 2, 7, 4, 3, 7, 4, 5, 7, 4, 5, 8, 5, 3, 6, 3, 9, 3, 2, null, 5, 2, 7, 4, 3, 7, 4, 5, 7, 4, 5, 8, 5, 3, 6, 3, 9, 3};\r\n    Number[] series2Numbers60 = {4, 6, 3, null, 2, 0, 7, 4, 5, 4, 9, 6, 2, 8, 4, 0, 7, 4, 7, 9, 4, 6, 3, null, 2, 0, 7, 4, 5, 4, 9, 6, 2, 8, 4, 0, 7, 4, 7, 9, 4, 6, 3, null, 2, 0, 7, 4, 5, 4, 9, 6, 2, 8, 4, 0, 7, 4, 7, 9};\r\n    Number[] series1Numbers = series1Numbers10;\r\n    Number[] series2Numbers = series2Numbers10;\r\n\r\n   // private MyBarFormatter formatter1 =\r\n           // new MyBarFormatter(Color.argb(200, 100, 150, 100), Color.RED);\r\n\r\n    //private MyBarFormatter formatter2 =\r\n           // new MyBarFormatter(Color.argb(200, 100, 100, 150), Color.GREEN);\r\n\r\n   // private MyBarFormatter selectionFormatter =\r\n           // new MyBarFormatter(Color.YELLOW, Color.WHITE);\r\n\r\n    private TextLabelWidget selectionWidget;\r\n\r\n    private Pair<Integer, XYSeries> selection;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState)\r\n    {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.bar_plot_example);\r\n\r\n        // initialize our XYPlot reference:\r\n        plot = (XYPlot) findViewById(R.id.mySimpleXYPlot);\r\n\r\n        selectionWidget = new TextLabelWidget(plot.getLayoutManager(), NO_SELECTION_TXT,\r\n                new SizeMetrics(\r\n                        PixelUtils.dpToPix(100), SizeLayoutType.ABSOLUTE,\r\n                        PixelUtils.dpToPix(100), SizeLayoutType.ABSOLUTE),\r\n                TextOrientationType.HORIZONTAL);\r\n\r\n        selectionWidget.getLabelPaint().setTextSize(PixelUtils.dpToPix(16));\r\n\r\n        // add a dark, semi-transparent background to the selection label widget:\r\n        Paint p = new Paint();\r\n        p.setARGB(100, 0, 0, 0);\r\n        selectionWidget.setBackgroundPaint(p);\r\n\r\n        selectionWidget.position(\r\n                0, XLayoutStyle.RELATIVE_TO_CENTER,\r\n                PixelUtils.dpToPix(45), YLayoutStyle.ABSOLUTE_FROM_TOP,\r\n                AnchorPosition.TOP_MIDDLE);\r\n        selectionWidget.pack();\r\n\r\n\r\n        // reduce the number of range labels\r\n        plot.setTicksPerRangeLabel(3);\r\n        plot.setRangeLowerBoundary(0, BoundaryMode.FIXED);\r\n        plot.getGraphWidget().setGridPadding(30, 10, 30, 0);\r\n\r\n        plot.setTicksPerDomainLabel(2);\r\n\r\n\r\n        // setup checkbox listers:\r\n        series1CheckBox = (CheckBox) findViewById(R.id.s1CheckBox);\r\n        series1CheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {\r\n                onS1CheckBoxClicked(b);\r\n            }\r\n        });\r\n\r\n        series2CheckBox = (CheckBox) findViewById(R.id.s2CheckBox);\r\n        series2CheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {onS2CheckBoxClicked(b);\r\n            }\r\n        });\r\n\r\n        plot.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent motionEvent) {\r\n                if(motionEvent.getAction() == MotionEvent.ACTION_DOWN) {\r\n                    onPlotClicked(new PointF(motionEvent.getX(), motionEvent.getY()));\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        spRenderStyle = (Spinner) findViewById(R.id.spRenderStyle);\r\n        ArrayAdapter<BarRenderer.BarRenderStyle> adapter = new ArrayAdapter <BarRenderer.BarRenderStyle> (this, android.R.layout.simple_spinner_item, BarRenderer.BarRenderStyle.values() );\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spRenderStyle.setAdapter(adapter);\r\n        spRenderStyle.setSelection(BarRenderer.BarRenderStyle.OVERLAID.ordinal());\r\n        spRenderStyle.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            public void onItemSelected(AdapterView<?> arg0, View arg1,int arg2, long arg3) {\r\n                updatePlot();\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> arg0) {\r\n            }\r\n        });\r\n\r\n        spWidthStyle = (Spinner) findViewById(R.id.spWidthStyle);\r\n        ArrayAdapter <BarRenderer.BarWidthStyle> adapter1 = new ArrayAdapter <BarRenderer.BarWidthStyle> (this, android.R.layout.simple_spinner_item, BarRenderer.BarWidthStyle.values() );\r\n        adapter1.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spWidthStyle.setAdapter(adapter1);\r\n        spWidthStyle.setSelection(BarRenderer.BarWidthStyle.FIXED_WIDTH.ordinal());\r\n        spWidthStyle.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            public void onItemSelected(AdapterView<?> arg0, View arg1,int arg2, long arg3) {\r\n                if (BarRenderer.BarWidthStyle.FIXED_WIDTH.equals(spWidthStyle.getSelectedItem())) {\r\n                    sbFixedWidth.setVisibility(View.VISIBLE);\r\n                    sbVariableWidth.setVisibility(View.INVISIBLE);\r\n                } else {\r\n                    sbFixedWidth.setVisibility(View.INVISIBLE);\r\n                    sbVariableWidth.setVisibility(View.VISIBLE);\r\n                }\r\n                updatePlot();\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> arg0) {\r\n            }\r\n        });\r\n\r\n        spSeriesSize = (Spinner) findViewById(R.id.spSeriesSize);\r\n        ArrayAdapter <SeriesSize> adapter11 = new ArrayAdapter <SeriesSize> (this, android.R.layout.simple_spinner_item, SeriesSize.values() );\r\n        adapter11.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spSeriesSize.setAdapter(adapter11);\r\n        spSeriesSize.setSelection(SeriesSize.TEN.ordinal());\r\n        spSeriesSize.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            public void onItemSelected(AdapterView<?> arg0, View arg1,int arg2, long arg3) {\r\n                switch ((SeriesSize)arg0.getSelectedItem()) {\r\n                    case TEN:\r\n                        series1Numbers = series1Numbers10;\r\n                        series2Numbers = series2Numbers10;\r\n                        break;\r\n                    case TWENTY:\r\n                        series1Numbers = series1Numbers20;\r\n                        series2Numbers = series2Numbers20;\r\n                        break;\r\n                    case SIXTY:\r\n                        series1Numbers = series1Numbers60;\r\n                        series2Numbers = series2Numbers60;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                updatePlot();\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> arg0) {\r\n            }\r\n        });\r\n\r\n\r\n        sbFixedWidth = (SeekBar) findViewById(R.id.sbFixed);\r\n        sbFixedWidth.setProgress(50);\r\n        sbFixedWidth.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\r\n            @Override\r\n            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {updatePlot();}\r\n            @Override\r\n            public void onStartTrackingTouch(SeekBar seekBar) {}\r\n\r\n            @Override\r\n            public void onStopTrackingTouch(SeekBar seekBar) {}\r\n        });\r\n\r\n\r\n        sbVariableWidth = (SeekBar) findViewById(R.id.sbVariable);\r\n        sbVariableWidth.setProgress(1);\r\n        sbVariableWidth.setVisibility(View.INVISIBLE);\r\n        sbVariableWidth.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\r\n            @Override\r\n            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {updatePlot();}\r\n            @Override\r\n            public void onStartTrackingTouch(SeekBar seekBar) {}\r\n            @Override\r\n            public void onStopTrackingTouch(SeekBar seekBar) {}\r\n        });\r\n\r\n        plot.setDomainValueFormat(new NumberFormat() {\r\n            @Override\r\n            public StringBuffer format(double value, StringBuffer buffer, FieldPosition field) {\r\n                int year = (int) (value + 0.5d) / 12;\r\n                int month = (int) ((value + 0.5d) % 12);\r\n                return new StringBuffer(DateFormatSymbols.getInstance().getShortMonths()[month] + " <singleApostropheHERE>0" + year);\r\n            }\r\n\r\n            @Override\r\n            public StringBuffer format(long value, StringBuffer buffer, FieldPosition field) {\r\n                throw new UnsupportedOperationException("Not yet implemented.");\r\n            }\r\n\r\n            @Override\r\n            public Number parse(String string, ParsePosition position) {\r\n                throw new UnsupportedOperationException("Not yet implemented.");\r\n            }\r\n        });\r\n        updatePlot();\r\n\r\n    }\r\n\r\n    private void updatePlot() {\r\n\r\n        // Remove all current series from each plot\r\n        Iterator<XYSeries> iterator1 = plot.getSeriesSet().iterator();\r\n        while(iterator1.hasNext()) {\r\n            XYSeries setElement = iterator1.next();\r\n            plot.removeSeries(setElement);\r\n        }\r\n\r\n        // Setup our Series with the selected number of elements\r\n        series1 = new SimpleXYSeries(Arrays.asList(series1Numbers), SimpleXYSeries.ArrayFormat.Y_VALS_ONLY, "Us");\r\n        series2 = new SimpleXYSeries(Arrays.asList(series2Numbers), SimpleXYSeries.ArrayFormat.Y_VALS_ONLY, "Them");\r\n\r\n        // add a new series to the xyplot:\r\n        //if (series1CheckBox.isChecked()) plot.addSeries(series1, formatter1);\r\n        BarFormatter series1Format = new BarFormatter(Color.RED, Color.GREEN);\r\n        BarFormatter series2Format = new BarFormatter(Color.GREEN, Color.BLUE);\r\n\r\n        if (series1CheckBox.isChecked()) plot.addSeries(series1,series1Format);\r\n       // if (series2CheckBox.isChecked()) plot.addSeries(series2, formatter2);\r\n        if (series2CheckBox.isChecked()) plot.addSeries(series2, series2Format);\r\n\r\n        // Setup the BarRenderer with our selected options\r\n        /*\r\n        MyBarRenderer renderer = ((MyBarRenderer)plot.getRenderer(MyBarRenderer.class));\r\n        renderer.setBarRenderStyle((BarRenderer.BarRenderStyle)spRenderStyle.getSelectedItem());\r\n        renderer.setBarWidthStyle((BarRenderer.BarWidthStyle)spWidthStyle.getSelectedItem());\r\n        renderer.setBarWidth(sbFixedWidth.getProgress());\r\n        renderer.setBarGap(sbVariableWidth.getProgress());\r\n\r\n        if (BarRenderer.BarRenderStyle.STACKED.equals(spRenderStyle.getSelectedItem())) {\r\n            plot.setRangeTopMin(15);\r\n        } else {\r\n            plot.setRangeTopMin(0);\r\n        }\r\n        */\r\n\r\n        plot.setRangeTopMin(0);\r\n        plot.redraw();\r\n\r\n    }\r\n\r\n    private void onPlotClicked(PointF point) {\r\n\r\n        // make sure the point lies within the graph area.  we use gridrect\r\n        // because it accounts for margins and padding as well.\r\n        if (plot.getGraphWidget().getGridRect().contains(point.x, point.y)) {\r\n            Number x = plot.getXVal(point);\r\n            Number y = plot.getYVal(point);\r\n\r\n\r\n            selection = null;\r\n            double xDistance = 0;\r\n            double yDistance = 0;\r\n\r\n            // find the closest value to the selection:\r\n            for (XYSeries series : plot.getSeriesSet()) {\r\n                for (int i = 0; i < series.size(); i++) {\r\n                    Number thisX = series.getX(i);\r\n                    Number thisY = series.getY(i);\r\n                    if (thisX != null && thisY != null) {\r\n                        double thisXDistance =\r\n                                LineRegion.measure(x, thisX).doubleValue();\r\n                        double thisYDistance =\r\n                                LineRegion.measure(y, thisY).doubleValue();\r\n                        if (selection == null) {\r\n                            selection = new Pair<Integer, XYSeries>(i, series);\r\n                            xDistance = thisXDistance;\r\n                            yDistance = thisYDistance;\r\n                        } else if (thisXDistance < xDistance) {\r\n                            selection = new Pair<Integer, XYSeries>(i, series);\r\n                            xDistance = thisXDistance;\r\n                            yDistance = thisYDistance;\r\n                        } else if (thisXDistance == xDistance &&\r\n                                thisYDistance < yDistance &&\r\n                                thisY.doubleValue() >= y.doubleValue()) {\r\n                            selection = new Pair<Integer, XYSeries>(i, series);\r\n                            xDistance = thisXDistance;\r\n                            yDistance = thisYDistance;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n            // if the press was outside the graph area, deselect:\r\n            selection = null;\r\n        }\r\n\r\n        if(selection == null) {\r\n            selectionWidget.setText(NO_SELECTION_TXT);\r\n        } else {\r\n            selectionWidget.setText("Selected: " + selection.second.getTitle() +\r\n                    " Value: " + selection.second.getY(selection.first));\r\n        }\r\n        plot.redraw();\r\n    }\r\n\r\n    private void onS1CheckBoxClicked(boolean checked) {\r\n        if (checked) {\r\n           // plot.addSeries(series1, formatter1);\r\n            plot.addSeries(series1, null);\r\n        } else {\r\n            plot.removeSeries(series1);\r\n        }\r\n        plot.redraw();\r\n    }\r\n\r\n    private void onS2CheckBoxClicked(boolean checked) {\r\n        if (checked) {\r\n           // plot.addSeries(series2, formatter2);\r\n            plot.addSeries(series2, null);\r\n        } else {\r\n            plot.removeSeries(series2);\r\n        }\r\n        plot.redraw();\r\n    }\r\n\r\n    class MyBarFormatter extends BarFormatter {\r\n        public MyBarFormatter(int fillColor, int borderColor) {\r\n            super(fillColor, borderColor);\r\n        }\r\n\r\n        @Override\r\n        public Class<? extends SeriesRenderer> getRendererClass() {\r\n            return MyBarRenderer.class;\r\n        }\r\n\r\n        @Override\r\n        public SeriesRenderer getRendererInstance(XYPlot plot) {\r\n            return new MyBarRenderer(plot);\r\n        }\r\n    }\r\n\r\n    class MyBarRenderer extends BarRenderer<MyBarFormatter> {\r\n\r\n        public MyBarRenderer(XYPlot plot) {\r\n            super(plot);\r\n        }\r\n\r\n        /**\r\n         * Implementing this method to allow us to inject our\r\n         * special selection formatter.\r\n         *\r\n         * @param index index of the point being rendered.\r\n         * @param series XYSeries to which the point being rendered belongs.\r\n         * @return\r\n         */\r\n       //@Override\r\n        public BarFormatter getFormatter(int index, XYSeries series) {\r\n            if(selection != null &&\r\n                    selection.second == series &&\r\n                    selection.first == index) {\r\n               // return selectionFormatter;\r\n               // return null;\r\n                BarFormatter seriesFormat = new BarFormatter(Color.RED, Color.BLUE);\r\n                return seriesFormat;\r\n\r\n            } else {\r\n                return getFormatter(series);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// JAVA\r\n\r\npublic class DynamicChartActivity extends Activity {\r\n    // redraws a plot whenever an update is received:\r\n    private class MyPlotUpdater implements Observer {\r\n        Plot plot;\r\n        public MyPlotUpdater(Plot plot) {\r\n            this.plot = plot;\r\n        }\r\n        @Override\r\n        public void update(Observable o, Object arg) {\r\n            try {\r\n               ///------->>>>>>> plot.postRedraw();\r\n                plot.redraw();\r\n\r\n            } catch (Exception e) {\r\n                e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\r\n            }\r\n        }\r\n    }\r\n\r\n    private XYPlot dynamicPlot;\r\n    private XYPlot staticPlot;\r\n    private MyPlotUpdater plotUpdater;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n\r\n        // android boilerplate stuff\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_dynamic_chart);\r\n\r\n        // get handles to our View defined in layout.xml:\r\n        dynamicPlot = (XYPlot) findViewById(R.id.dynamicPlot);\r\n\r\n        plotUpdater = new MyPlotUpdater(dynamicPlot);\r\n\r\n        // only display whole numbers in domain labels\r\n        dynamicPlot.getGraphWidget().setDomainValueFormat(new DecimalFormat("0"));\r\n\r\n        // getInstance and position datasets:\r\n        SampleDynamicXYDatasource data = new SampleDynamicXYDatasource();\r\n        SampleDynamicSeries sine1Series = new SampleDynamicSeries(data, 0, "Sine 1");\r\n        SampleDynamicSeries sine2Series = new SampleDynamicSeries(data, 1, "Sine 2");\r\n\r\n\r\n\r\n        LineAndPointFormatter series1Format = new LineAndPointFormatter(Color.RED, Color.GREEN, Color.BLUE, null);\r\n\r\n        dynamicPlot.addSeries(sine1Series, series1Format);\r\n\r\n        // create a series using a formatter with some transparency applied:\r\n        LineAndPointFormatter f1 = new LineAndPointFormatter(Color.RED, Color.GREEN, Color.BLUE, null);\r\n        f1.getFillPaint().setAlpha(220);\r\n        dynamicPlot.addSeries(sine2Series, f1);\r\n        dynamicPlot.setGridPadding(5, 0, 5, 0);\r\n\r\n        // hook up the plotUpdater to the data model:\r\n        data.addObserver(plotUpdater);\r\n\r\n        dynamicPlot.setDomainStepMode(XYStepMode.SUBDIVIDE);\r\n        dynamicPlot.setDomainStepValue(sine1Series.size());\r\n\r\n        // thin out domain/range tick labels so they dont overlap each other:\r\n        dynamicPlot.setTicksPerDomainLabel(5);\r\n        dynamicPlot.setTicksPerRangeLabel(3);\r\n       //---->>>>>>> dynamicPlot.disableAllMarkup();\r\n\r\n        // freeze the range boundaries:\r\n        dynamicPlot.setRangeBoundaries(-100, 100, BoundaryMode.FIXED);\r\n\r\n        // kick off the data generating thread:\r\n        new Thread(data).start();\r\n    }\r\n}\r\n\r\n\r\n// JAVA\r\n\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n    /**\r\n     *\r\n     *\r\n     * menu_example activity features:\r\n     * menu items\r\n     * home/refresh button in the action bar\r\n     */\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.actionbarbuttonsandmenu);\r\n\r\n        overridePendingTransition(R.anim.popup_zoom_in, R.anim.fade_out);\r\n\r\n\r\n        ActionBar actionBar = getActionBar();\r\n        actionBar.setTitle("GraphX");\r\n        actionBar.setSubtitle("four androidplot graphs");\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        getMenuInflater().inflate(R.menu.menu_example, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n\r\n            case R.id.action_refresh:\r\n                Intent homeIntent = new Intent(MainActivity.this, MainActivity.class);\r\n                startActivity(homeIntent);\r\n                break;\r\n            case R.id.menuitem1:\r\n                Intent staticChartIntent = new Intent(MainActivity.this, StaticChartActivity.class);\r\n                startActivity(staticChartIntent);\r\n                break;\r\n            case R.id.menuitem2:\r\n                Intent dynamicChartIntent = new Intent(MainActivity.this, DynamicChartActivity.class);\r\n                startActivity(dynamicChartIntent);\r\n                break;\r\n            case R.id.menuitem3:\r\n                Intent barPlotChartIntent = new Intent(MainActivity.this, BarPlotExampleActivity.class);\r\n                startActivity(barPlotChartIntent);\r\n                break;\r\n\r\n            case R.id.menuitem4:\r\n                Intent timeSeriesIntent = new Intent(MainActivity.this, TimeSeriesActivity.class);\r\n                startActivity(timeSeriesIntent);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// JAVA\r\n\r\npublic class StaticChartActivity extends Activity {\r\n\r\n\r\n    private XYPlot plot;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // fun little snippet that prevents users from taking screenshots\r\n        // on ICS+ devices :-)\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE,\r\n                WindowManager.LayoutParams.FLAG_SECURE);\r\n\r\n        setContentView(R.layout.simple_xy_plot_example);\r\n\r\n        // initialize our XYPlot reference:\r\n        plot = (XYPlot) findViewById(R.id.mySimpleXYPlot);\r\n\r\n        // Create a couple arrays of y-values to plot:\r\n        Number[] series1Numbers = {1, 8, 5, 2, 7, 4};\r\n        Number[] series2Numbers = {4, 6, 3, 8, 2, 10};\r\n\r\n        // Turn the above arrays into XYSeries:\r\n        XYSeries series1 = new SimpleXYSeries(\r\n                Arrays.asList(series1Numbers),          // SimpleXYSeries takes a List so turn our array into a List\r\n                SimpleXYSeries.ArrayFormat.Y_VALS_ONLY, // Y_VALS_ONLY means use the element index as the x value\r\n                "Series1");                             // Set the display title of the series\r\n\r\n        // same as above\r\n        XYSeries series2 = new SimpleXYSeries(Arrays.asList(series2Numbers), SimpleXYSeries.ArrayFormat.Y_VALS_ONLY, "Series2");\r\n\r\n        // Create a formatter to use for drawing a series using LineAndPointRenderer\r\n        // and configure it from xml:\r\n        /*\r\n        LineAndPointFormatter series1Format = new LineAndPointFormatter();\r\n        series1Format.setPointLabelFormatter(new PointLabelFormatter());\r\n        series1Format.configure(getApplicationContext(),\r\n                R.layout.xml.line_point_formatter_with_plf1);\r\n*/\r\n        // this instead of wacky XML <config> things\r\n        LineAndPointFormatter series1Format = new LineAndPointFormatter(Color.RED, Color.GREEN, Color.BLUE, null);\r\n\r\n\r\n\r\n\r\n\r\n        // add a new series to the xyplot:\r\n        plot.addSeries(series1, series1Format);\r\n\r\n        // same as above:\r\n        /*\r\n        LineAndPointFormatter series2Format = new LineAndPointFormatter();\r\n        series2Format.setPointLabelFormatter(new PointLabelFormatter());\r\n        series2Format.configure(getApplicationContext(),\r\n                R.xml.line_point_formatter_with_plf2);\r\n*/\r\n        LineAndPointFormatter series2Format = new LineAndPointFormatter(Color.RED, Color.GREEN, Color.BLUE, null);\r\n\r\n\r\n\r\n        plot.addSeries(series2, series2Format);\r\n\r\n        // reduce the number of range labels\r\n        plot.setTicksPerRangeLabel(3);\r\n        plot.getGraphWidget().setDomainLabelOrientation(-45);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n// JAVA\r\n\r\n\r\npublic class TimeSeriesActivity extends Activity  {\r\n\r\n    private XYPlot plot1;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.time_series_example);\r\n\r\n        plot1 = (XYPlot) findViewById(R.id.plot1);\r\n        Number[] numSightings = {5, 8, 9, 2, 5};\r\n\r\n        // an array of years in milliseconds:\r\n        Number[] years = {\r\n                978307200,  // 2001\r\n                1009843200, // 2002\r\n                1041379200, // 2003\r\n                1072915200, // 2004\r\n                1104537600  // 2005\r\n        };\r\n        // create our series from our array of nums:\r\n        XYSeries series2 = new SimpleXYSeries(\r\n                Arrays.asList(years),\r\n                Arrays.asList(numSightings),\r\n                "Sightings in USA");\r\n\r\n        plot1.getGraphWidget().getGridBackgroundPaint().setColor(Color.WHITE);\r\n        plot1.getGraphWidget().getDomainGridLinePaint().setColor(Color.BLACK);\r\n        plot1.getGraphWidget().getDomainGridLinePaint().\r\n                setPathEffect(new DashPathEffect(new float[]{1, 1}, 1));\r\n        plot1.getGraphWidget().getRangeGridLinePaint().setColor(Color.BLACK);\r\n        plot1.getGraphWidget().getRangeGridLinePaint().\r\n                setPathEffect(new DashPathEffect(new float[]{1, 1}, 1));\r\n        plot1.getGraphWidget().getDomainOriginLinePaint().setColor(Color.BLACK);\r\n        plot1.getGraphWidget().getRangeOriginLinePaint().setColor(Color.BLACK);\r\n\r\n        // Create a formatter to use for drawing a series using LineAndPointRenderer:\r\n        LineAndPointFormatter series1Format = new LineAndPointFormatter(\r\n                Color.rgb(0, 100, 0),                   // line color\r\n                Color.rgb(0, 100, 0),                   // point color\r\n                Color.rgb(100, 200, 0), null);                // fill color\r\n\r\n\r\n        // setup our line fill paint to be a slightly transparent gradient:\r\n        Paint lineFill = new Paint();\r\n        lineFill.setAlpha(200);\r\n\r\n        // ugly usage of LinearGradient. unfortunately there is no way to determine the actual size of\r\n        // a View from within onCreate.  one alternative is to specify a dimension in resources\r\n        // and use that accordingly.  at least then the values can be customized for the device type and orientation.\r\n        lineFill.setShader(new LinearGradient(0, 0, 200, 200, Color.WHITE, Color.GREEN, Shader.TileMode.CLAMP));\r\n\r\n        LineAndPointFormatter formatter  =\r\n                new LineAndPointFormatter(Color.rgb(0, 0,0), Color.BLUE, Color.RED, null);\r\n        formatter.setFillPaint(lineFill);\r\n        plot1.getGraphWidget().setPaddingRight(2);\r\n        plot1.addSeries(series2, formatter);\r\n\r\n        // draw a domain tick for each year:\r\n        plot1.setDomainStep(XYStepMode.SUBDIVIDE, years.length);\r\n\r\n        // customize our domain/range labels\r\n        plot1.setDomainLabel("Year");\r\n        plot1.setRangeLabel("# of Sightings");\r\n\r\n        // get rid of decimal points in our range labels:\r\n        plot1.setRangeValueFormat(new DecimalFormat("0"));\r\n\r\n        plot1.setDomainValueFormat(new Format() {\r\n\r\n            // create a simple date format that draws on the year portion of our timestamp.\r\n            // see http://download.oracle.com/javase/1.4.2/docs/api/java/text/SimpleDateFormat.html\r\n            // for a full description of SimpleDateFormat.\r\n            private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy");\r\n\r\n            @Override\r\n            public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {\r\n\r\n                // because our timestamps are in seconds and SimpleDateFormat expects milliseconds\r\n                // we multiply our timestamp by 1000:\r\n                long timestamp = ((Number) obj).longValue() * 1000;\r\n                Date date = new Date(timestamp);\r\n                return dateFormat.format(date, toAppendTo, pos);\r\n            }\r\n\r\n            @Override\r\n            public Object parseObject(String source, ParsePosition pos) {\r\n                return null;\r\n\r\n            }\r\n        });\r\n\r\n        // by default, AndroidPlot displays developer guides to aid in laying out your plot.\r\n        // To get rid of them call disableAllMarkup():\r\n        //plot1.disableAllMarkup();\r\n    }\r\n}\r\n\r\n\r\n\r\n// JAVA- DYNAMIC GRAPHING PACKAGE\r\n\r\nimport com.androidplot.xy.XYSeries;\r\n\r\npublic class SampleDynamicSeries implements XYSeries {\r\n    private SampleDynamicXYDatasource datasource;\r\n    private int seriesIndex;\r\n    private String title;\r\n\r\n    public SampleDynamicSeries(SampleDynamicXYDatasource datasource, int seriesIndex, String title) {\r\n        this.datasource = datasource;\r\n        this.seriesIndex = seriesIndex;\r\n        this.title = title;\r\n    }\r\n    @Override\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    @Override\r\n    public int size() {\r\n        return datasource.getItemCount(seriesIndex);\r\n    }\r\n\r\n    @Override\r\n    public Number getX(int index) {\r\n        return datasource.getX(seriesIndex, index);\r\n    }\r\n\r\n    @Override\r\n    public Number getY(int index) {\r\n        return datasource.getY(seriesIndex, index);\r\n    }\r\n}\r\n\r\n\r\n// JAVA\r\n\r\nimport java.util.Observable;\r\nimport java.util.Observer;\r\n\r\npublic class SampleDynamicXYDatasource implements Runnable {\r\n\r\n    // encapsulates management of the observers watching this datasource for update events:\r\n    class MyObservable extends Observable {\r\n        @Override\r\n        public void notifyObservers() {\r\n            setChanged();\r\n            super.notifyObservers();\r\n        }\r\n    }\r\n\r\n    private static final int MAX_AMP_SEED = 100;\r\n    private static final int MIN_AMP_SEED = 10;\r\n    private static final int AMP_STEP = 5;\r\n    public static final int SINE1 = 0;\r\n    public static final int SINE2 = 1;\r\n    private static final int SAMPLE_SIZE = 30;\r\n    private int phase = 0;\r\n    private int sinAmp = 20;\r\n    private MyObservable notifier;\r\n\r\n    {\r\n        notifier = new MyObservable();\r\n    }\r\n\r\n    //@Override\r\n    public void run() {\r\n        try {\r\n            boolean isRising = true;\r\n            while (true) {\r\n\r\n                Thread.sleep(50); // decrease or remove to speed up the refresh rate.\r\n                phase++;\r\n                if (sinAmp >= MAX_AMP_SEED) {\r\n                    isRising = false;\r\n                } else if (sinAmp <= MIN_AMP_SEED) {\r\n                    isRising = true;\r\n                }\r\n\r\n                if (isRising) {\r\n                    sinAmp += AMP_STEP;\r\n                } else {\r\n                    sinAmp -= AMP_STEP;\r\n                }\r\n                notifier.notifyObservers();\r\n            }\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public int getItemCount(int series) {\r\n        return 30;\r\n    }\r\n\r\n    public Number getX(int series, int index) {\r\n        if (index >= SAMPLE_SIZE) {\r\n            throw new IllegalArgumentException();\r\n        }\r\n        return index;\r\n    }\r\n\r\n    public Number getY(int series, int index) {\r\n        if (index >= SAMPLE_SIZE) {\r\n            throw new IllegalArgumentException();\r\n        }\r\n        double amp = sinAmp * Math.sin(index + phase + 4);\r\n        switch (series) {\r\n            case SINE1:\r\n                return amp;\r\n            case SINE2:\r\n                return -amp;\r\n            default:\r\n                throw new IllegalArgumentException();\r\n        }\r\n    }\r\n\r\n    public void addObserver(Observer observer) {\r\n        notifier.addObserver(observer);\r\n    }\r\n\r\n    public void removeObserver(Observer observer) {\r\n        notifier.deleteObserver(observer);\r\n    }\r\n\r\n}\r\n\r\n', '2014-03-03 15:47:24');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(62, ' android', 'LocationServicesX', ' // XML\r\n--activity_main.xml\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.locationservicex.LbsGeocodingActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n    <LinearLayout\r\n        android:orientation="vertical"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        android:layout_gravity="center">\r\n\r\n        <Button\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="Location Based Service"\r\n            android:id="@+id/retrieve_location_button"\r\n            android:layout_gravity="center_horizontal" />\r\n    </LinearLayout>\r\n</FrameLayout>\r\n\r\n\r\n\r\n// JAVA\r\n\r\n\r\npublic class LbsGeocodingActivity extends Activity {\r\n\r\n    private static final long MINIMUM_DISTANCE_CHANGE_FOR_UPDATES = 1; // in Meters\r\n    private static final long MINIMUM_TIME_BETWEEN_UPDATES = 1000; // in Milliseconds\r\n\r\n    protected LocationManager locationManager;\r\n\r\n    protected Button retrieveLocationButton;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n\r\n        setContentView(R.layout.activity_main);\r\n\r\n        retrieveLocationButton = (Button) findViewById(R.id.retrieve_location_button);\r\n\r\n        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\r\n\r\n        locationManager.requestLocationUpdates(\r\n\r\n                LocationManager.GPS_PROVIDER,\r\n\r\n                MINIMUM_TIME_BETWEEN_UPDATES,\r\n\r\n                MINIMUM_DISTANCE_CHANGE_FOR_UPDATES,\r\n\r\n                new MyLocationListener()\r\n\r\n        );\r\n\r\n        retrieveLocationButton.setOnClickListener(new OnClickListener() {\r\n\r\n            @Override\r\n\r\n            public void onClick(View v) {\r\n\r\n                showCurrentLocation();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    protected void showCurrentLocation() {\r\n\r\n        Location location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);\r\n\r\n        if (location != null) {\r\n\r\n            String message = String.format(\r\n\r\n                    "Current Location n Longitude: %1$s n Latitude: %2$s",\r\n\r\n                    location.getLongitude(), location.getLatitude()\r\n\r\n            );\r\n\r\n            Toast.makeText(LbsGeocodingActivity.this, message,\r\n\r\n                    Toast.LENGTH_LONG).show();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private class MyLocationListener implements LocationListener {\r\n\r\n        public void onLocationChanged(Location location) {\r\n\r\n            String message = String.format(\r\n\r\n                    "New Location n Longitude: %1$s n Latitude: %2$s",\r\n\r\n                    location.getLongitude(), location.getLatitude()\r\n\r\n            );\r\n\r\n            Toast.makeText(LbsGeocodingActivity.this, message, Toast.LENGTH_LONG).show();\r\n\r\n        }\r\n\r\n        public void onStatusChanged(String s, int i, Bundle b) {\r\n\r\n            Toast.makeText(LbsGeocodingActivity.this, "Provider status changed",\r\n\r\n                    Toast.LENGTH_LONG).show();\r\n\r\n        }\r\n\r\n        public void onProviderDisabled(String s) {\r\n\r\n            Toast.makeText(LbsGeocodingActivity.this,\r\n\r\n                    "Provider disabled by the user. GPS turned off",\r\n\r\n                    Toast.LENGTH_LONG).show();\r\n\r\n        }\r\n\r\n        public void onProviderEnabled(String s) {\r\n\r\n            Toast.makeText(LbsGeocodingActivity.this,\r\n\r\n                    "Provider enabled by the user. GPS turned on",\r\n\r\n                    Toast.LENGTH_LONG).show();\r\n\r\n        }\r\n\r\n    }\r\n\r\n}', '2014-03-03 15:50:36'),
(63, ' android', 'MapX', ' // GRADLE\r\n\r\ndependencies {\r\n    compile ---com.google.android.gms:play-services:4.0.30---\r\n    compile ---com.android.support:support-v4:19.0.1+---   replace --- with single apostrophe\r\n}\r\n\r\n\r\n// MANIFEST\r\n  <permission\r\n        android:name="com.mocura.gmap1.permission.MAPS_RECEIVE"\r\n        android:protectionLevel="signature" />\r\n\r\n    <uses-feature\r\n        android:glEsVersion="0x00020000"\r\n        android:required="true" />\r\n\r\n    <uses-permission android:name="com.mocura.gmap1.permission.MAPS_RECEIVE" />\r\n    <uses-permission android:name="android.permission.INTERNET" />\r\n    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />\r\n    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />\r\n    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />\r\n    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />\r\n    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\r\n    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />\r\n\r\n\r\n    <!-- ... then,  inside application tags -->\r\n     <meta-data\r\n                android:name="com.google.android.maps.v2.API_KEY"\r\n                android:value="AIzaSyDtZ2rRf1s8U1yYST_94OeqRZrk8sg7k2w" />\r\n            <meta-data\r\n                android:name="com.google.android.gms.version"\r\n                android:value="4030500" />\r\n\r\n                <!-- 4030500 or @integer/google_play_services_version   -->\r\n\r\n// XML\r\nactivity_main.xml\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.mapx.MainActivity"\r\n    tools:ignore="MergeRootFrame" />\r\n\r\nfragment_about_us.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:layout_width="fill_parent"\r\n    android:layout_height="fill_parent"\r\n    android:id="@+id/containerDeAboutUs"\r\n    android:layout_alignParentLeft="true">\r\n    <LinearLayout\r\n        android:orientation="vertical"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="100dp"\r\n        android:layout_alignParentTop="true"\r\n        android:background="@android:color/white">\r\n        <ImageView\r\n            android:autoLink="web"\r\n            android:text="http://www.mocura.com"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:id="@+id/imageLink"\r\n            android:background="@drawable/ic_launcher"\r\n            android:layout_gravity="center_horizontal"\r\n            android:layout_marginTop="10dp" />\r\n    </LinearLayout>\r\n    <RelativeLayout\r\n        android:id="@+id/smallMap"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:layout_marginTop="100dp">\r\n    </RelativeLayout>\r\n</RelativeLayout>\r\n\r\n\r\n\r\n// fragment_main.xml\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:paddingLeft="@dimen/activity_horizontal_margin"\r\n    android:paddingRight="@dimen/activity_horizontal_margin"\r\n    android:paddingTop="@dimen/activity_vertical_margin"\r\n    android:paddingBottom="@dimen/activity_vertical_margin"\r\n    tools:context="com.example.mapx.MainActivity$PlaceholderFragment">\r\n    <TextView\r\n        android:text="@string/hello_world"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content" />\r\n</RelativeLayout>\r\n\r\n\r\n\r\n// JAVA\r\nMainActivity.java\r\nimport android.os.Bundle;\r\nimport android.support.v4.app.FragmentActivity;\r\n\r\nimport map.AboutUsFragment;\r\n\r\npublic class MainActivity extends FragmentActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        if (savedInstanceState == null) {\r\n            getFragmentManager().beginTransaction()\r\n                    .add(R.id.container, new AboutUsFragment())\r\n                    .commit();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// JAVA\r\n\r\nAboutUsFragment.java\r\n\r\nimport android.app.Fragment;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.mapx.R;\r\n\r\n/**\r\n * Created by BForte on 1/30/14.\r\n */\r\npublic class AboutUsFragment extends Fragment implements View.OnClickListener{\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_about_us, container,\r\n                false);\r\n\r\n        getFragmentManager().beginTransaction().add(R.id.smallMap, new AboutUsMapFragment()).commit();\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        Intent intent = new Intent();\r\n        intent.setAction(Intent.ACTION_VIEW);\r\n        intent.addCategory(Intent.CATEGORY_BROWSABLE);\r\n        intent.setData(Uri.parse("http://mocura.com"));\r\n        startActivity(intent);\r\n    }\r\n}\r\n\r\n\r\n// JAVA\r\n\r\nAboutUsMapFragment.java\r\n\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.MapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\n\r\nimport com.example.mapx.R;\r\n/**\r\n * Created by BForte on 1/30/14.\r\n */\r\npublic class AboutUsMapFragment extends MapFragment   {\r\n\r\n    static final LatLng INDATUS = new LatLng(38.2865, -85.8235);\r\n\r\n    public AboutUsMapFragment() {\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        return super.onCreateView(inflater, container, savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n\r\n        ImageView imgLink=(ImageView) getActivity().findViewById(R.id.imageLink);\r\n        imgLink.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent link=new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.mocura.com"));\r\n                startActivity(link);\r\n            }\r\n        });\r\n        getMap().moveCamera((CameraUpdateFactory.newLatLngZoom(INDATUS, 15)));\r\n        getMap().setMyLocationEnabled(true);\r\n        getMap().addMarker(new MarkerOptions().position(INDATUS)\r\n                .title("Indatus"));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', '2014-03-03 15:52:28'),
(64, ' android', 'MediaX', ' \r\n//manifest\r\n <uses-permission android:name="android.permission.INTERNET"/>\r\n\r\n  <activity\r\n             android:name="com.example.mediax.MainActivity"\r\n             android:label="@string/app_name">\r\n         </activity>\r\n         <activity\r\n             android:name="com.example.mediax.MediaPlayerDemo"\r\n             android:label="@string/app_name">\r\n             <intent-filter>\r\n                 <action android:name="android.intent.action.MAIN" />\r\n\r\n                 <category android:name="android.intent.category.LAUNCHER" />\r\n             </intent-filter>\r\n         </activity>\r\n         <activity\r\n             android:name="com.example.mediax.MediaPlayerDemo_Audio"\r\n             android:label="@string/app_name">\r\n          </activity>\r\n         <activity\r\n             android:name="com.example.mediax.MediaPlayerDemo_Video"\r\n             android:label="@string/app_name">\r\n         </activity>\r\n\r\n\r\n\r\n //  XML\r\n mediaplayer_1.xml\r\n <?xml version="1.0" encoding="utf-8"?>\r\n\r\n <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n     android:orientation="vertical" android:layout_width="match_parent"\r\n     android:layout_height="match_parent">\r\n\r\n     <MediaController\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:id="@+id/mediaController"\r\n         android:layout_gravity="center_horizontal" />\r\n\r\n     <Button\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:text="localaudio"\r\n         android:id="@+id/localaudio"\r\n         android:layout_gravity="center_horizontal" />\r\n\r\n     <Button\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:text="localvideo"\r\n         android:id="@+id/localvideo"\r\n         android:layout_gravity="center_horizontal" />\r\n\r\n     <Button\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:text="resourcesaudio"\r\n         android:id="@+id/resourcesaudio"\r\n         android:layout_gravity="center_horizontal" />\r\n\r\n     <Button\r\n         android:layout_width="wrap_content"\r\n         android:layout_height="wrap_content"\r\n         android:text="streamvideo"\r\n         android:id="@+id/streamvideo"\r\n         android:layout_gravity="center_horizontal" />\r\n </LinearLayout>\r\n\r\n\r\n\r\n // XML\r\n medaiplayer_2.xml\r\n <?xml version="1.0" encoding="utf-8"?>\r\n\r\n <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n     android:orientation="vertical" android:layout_width="match_parent"\r\n     android:layout_height="match_parent"\r\n     android:weightSum="1">\r\n\r\n     <SurfaceView\r\n         android:layout_width="328dp"\r\n         android:layout_height="wrap_content"\r\n         android:id="@+id/surfaceView"\r\n         android:layout_gravity="center_horizontal"\r\n         android:layout_weight="0.65" />\r\n </LinearLayout>\r\n\r\n\r\n // create a "raw" directory in res with the mp3 files you will need.\r\n\r\n\r\n\r\n // JAVA\r\n\r\npublic class MediaPlayerDemo extends Activity implements View.OnClickListener {\r\n\r\n	private Button mlocalvideo;\r\n	private Button mresourcesvideo;\r\n	private Button mstreamvideo;\r\n	private Button mlocalaudio;\r\n	private Button mresourcesaudio;\r\n	private Button mstreamaudio;\r\n	private static final String MEDIA = "media";\r\n	private static final int LOCAL_AUDIO = 1;\r\n	private static final int STREAM_AUDIO = 2;\r\n	private static final int RESOURCES_AUDIO = 3;\r\n	private static final int LOCAL_VIDEO = 4;\r\n	private static final int STREAM_VIDEO = 5;\r\n	private static final int RESOURCES_VIDEO = 6;\r\n\r\n	@Override\r\n	protected void onCreate(Bundle icicle) {\r\n		// TODO Auto-generated method stub\r\n		super.onCreate(icicle);\r\n		setContentView(R.layout.mediaplayer_1);\r\n		mlocalaudio = (Button) findViewById(R.id.localaudio);\r\n		mlocalaudio.setOnClickListener(mLocalAudioListener);\r\n\r\n        mresourcesaudio = (Button) findViewById(R.id.resourcesaudio);\r\n		mresourcesaudio.setOnClickListener(mResourcesAudioListener);\r\n/*\r\n		mlocalvideo = (Button) findViewById(R.id.localvideo);\r\n		mlocalvideo.setOnClickListener(mLocalVideoListener);\r\n*/\r\n		mstreamvideo = (Button) findViewById(R.id.streamvideo);\r\n		mstreamvideo.setOnClickListener(mStreamVideoListener);\r\n\r\n	}\r\n\r\n	private View.OnClickListener mLocalAudioListener = new View.OnClickListener() {\r\n		public void onClick(View v) {\r\n			Intent intent = new Intent(MediaPlayerDemo.this.getApplication(), MediaPlayerDemo_Audio.class);\r\n			intent.putExtra(MEDIA, LOCAL_AUDIO);\r\n			startActivity(intent);\r\n\r\n		}\r\n	};\r\n\r\n	private View.OnClickListener mResourcesAudioListener = new View.OnClickListener() {\r\n		public void onClick(View v) {\r\n			Intent intent = new Intent(MediaPlayerDemo.this.getApplication(), MediaPlayerDemo_Audio.class);\r\n			intent.putExtra(MEDIA, RESOURCES_AUDIO);\r\n			startActivity(intent);\r\n\r\n		}\r\n	};\r\n    /*\r\n       private View.OnClickListener mLocalVideoListener = new View.OnClickListener() {\r\n           public void onClick(View v) {\r\n               Intent intent = new Intent(MediaPlayerDemo.this, MediaPlayerDemo_Video.class);\r\n               intent.putExtra(MEDIA, LOCAL_VIDEO);\r\n               startActivity(intent);\r\n\r\n           }\r\n       };\r\n          */\r\n       private View.OnClickListener mStreamVideoListener = new View.OnClickListener() {\r\n           public void onClick(View v) {\r\n               Intent intent = new Intent(MediaPlayerDemo.this, MediaPlayerDemo_Video.class);\r\n               intent.putExtra(MEDIA, STREAM_VIDEO);\r\n               startActivity(intent);\r\n\r\n           }\r\n       };\r\n\r\n	@Override\r\n	public void onClick(View v) {\r\n\r\n	}\r\n}\r\n\r\n\r\n// JAVA\r\n\r\npublic class MediaPlayerDemo_Audio extends Activity {\r\n\r\n	private static final String TAG = "MediaPlayerDemo";\r\n	private MediaPlayer mMediaPlayer;\r\n	private static final String MEDIA = "media";\r\n	private static final int LOCAL_AUDIO = 1;\r\n	private static final int STREAM_AUDIO = 2;\r\n	private static final int RESOURCES_AUDIO = 3;\r\n	private static final int LOCAL_VIDEO = 4;\r\n	private static final int STREAM_VIDEO = 5;\r\n	private String path;\r\n\r\n	private TextView tx;\r\n\r\n	@Override\r\n	public void onCreate(Bundle icicle) {\r\n		super.onCreate(icicle);\r\n		tx = new TextView(this);\r\n		setContentView(tx);\r\n		Bundle extras = getIntent().getExtras();\r\n		playAudio(extras.getInt(MEDIA));\r\n	}\r\n\r\n	private void playAudio(Integer media) {\r\n		try {\r\n			switch (media) {\r\n				case LOCAL_AUDIO:\r\n					/**\r\n					 * TODO: Set the path variable to a local audio file path.\r\n					 */\r\n					path = "";\r\n					if (path == "") {\r\n						// Tell the user to provide an audio file URL.\r\n						Toast.makeText(\r\n								MediaPlayerDemo_Audio.this,\r\n								"Please edit MediaPlayer_Audio Activity, " + "and set the path variable to your audio file path."\r\n										+ " Your audio file must be stored on sdcard.", Toast.LENGTH_LONG).show();\r\n\r\n					}\r\n					mMediaPlayer = new MediaPlayer();\r\n					mMediaPlayer.setDataSource(path);\r\n					mMediaPlayer.prepare();\r\n					mMediaPlayer.start();\r\n					break;\r\n				case RESOURCES_AUDIO:\r\n					/**\r\n					 * TODO: Upload a audio file to res/raw folder and provide its resid in MediaPlayer.create() method.\r\n					 */\r\n					mMediaPlayer = MediaPlayer.create(this, R.raw.salamisound);\r\n					mMediaPlayer.start();\r\n			}\r\n			tx.setText("Playing audio...");\r\n		}\r\n		catch (Exception e) {\r\n			Log.e(TAG, "error: " + e.getMessage(), e);\r\n		}\r\n\r\n	}\r\n\r\n	@Override\r\n	protected void onDestroy() {\r\n		super.onDestroy();\r\n		// TODO Auto-generated method stub\r\n		if (mMediaPlayer != null) {\r\n			mMediaPlayer.release();\r\n			mMediaPlayer = null;\r\n		}\r\n\r\n	}\r\n\r\n}\r\n\r\n\r\n\r\n// JAVA\r\n\r\npublic class MediaPlayerDemo_Video  extends Activity implements\r\n        MediaPlayer.OnBufferingUpdateListener, MediaPlayer.OnCompletionListener,\r\n        MediaPlayer.OnPreparedListener, MediaPlayer.OnVideoSizeChangedListener, SurfaceHolder.Callback {\r\n\r\n    private static final String TAG = "MediaPlayerDemo";\r\n    private int mVideoWidth;\r\n    private int mVideoHeight;\r\n    private MediaPlayer mMediaPlayer;\r\n    private SurfaceView mPreview;\r\n    private SurfaceHolder holder;\r\n    private String path;\r\n    private Bundle extras;\r\n    private static final String MEDIA = "media";\r\n    private static final int LOCAL_AUDIO = 1;\r\n    private static final int STREAM_AUDIO = 2;\r\n    private static final int RESOURCES_AUDIO = 3;\r\n    private static final int LOCAL_VIDEO = 4;\r\n    private static final int STREAM_VIDEO = 5;\r\n    private boolean mIsVideoSizeKnown = false;\r\n    private boolean mIsVideoReadyToBePlayed = false;\r\n\r\n    /**\r\n     *\r\n     * Called when the activity is first created.\r\n     */\r\n    @Override\r\n    public void onCreate(Bundle icicle) {\r\n        super.onCreate(icicle);\r\n        setContentView(R.layout.mediaplayer_2);\r\n        mPreview = (SurfaceView) findViewById(R.id.surfaceView);\r\n        holder = mPreview.getHolder();\r\n        holder.addCallback(this);\r\n        holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);\r\n        extras = getIntent().getExtras();\r\n\r\n    }\r\n\r\n    private void playVideo(Integer Media) {\r\n        doCleanUp();\r\n        try {\r\n\r\n            switch (Media) {\r\n                case LOCAL_VIDEO:\r\n                    /*\r\n                     * TODO: Set the path variable to a local media file path.\r\n                     */\r\n                    path = "";\r\n                    if (path == "") {\r\n                        // Tell the user to provide a media file URL.\r\n                        Toast\r\n                                .makeText(\r\n                                        MediaPlayerDemo_Video.this,\r\n                                        "Please edit MediaPlayerDemo_Video Activity, "\r\n                                                + "and set the path variable to your media file path."\r\n                                                + " Your media file must be stored on sdcard.",\r\n                                        Toast.LENGTH_LONG).show();\r\n\r\n                    }\r\n                    break;\r\n                case STREAM_VIDEO:\r\n                    /*\r\n                     * TODO: Set path variable to progressive streamable mp4 or\r\n                     * 3gpp format URL. Http protocol should be used.\r\n                     * Mediaplayer can only play "progressive streamable\r\n                     * contents" which basically means: 1. the movie atom has to\r\n                     * precede all the media data atoms. 2. The clip has to be\r\n                     * reasonably interleaved.\r\n                     *\r\n                     */\r\n                    path = "http://www.pocketjourney.com/downloads/pj/video/famous.3gp";\r\n                    if (path == "") {\r\n                        // Tell the user to provide a media file URL.\r\n                        Toast\r\n                                .makeText(\r\n                                        MediaPlayerDemo_Video.this,\r\n                                        "Please edit MediaPlayerDemo_Video Activity,"\r\n                                                + " and set the path variable to your media file URL.",\r\n                                        Toast.LENGTH_LONG).show();\r\n\r\n                    }\r\n\r\n                    break;\r\n\r\n\r\n            }\r\n\r\n            // Create a new media player and set the listeners\r\n            mMediaPlayer = new MediaPlayer();\r\n            mMediaPlayer.setDataSource(path);\r\n            mMediaPlayer.setDisplay(holder);\r\n            mMediaPlayer.prepare();\r\n            mMediaPlayer.setOnBufferingUpdateListener(this);\r\n            mMediaPlayer.setOnCompletionListener(this);\r\n            mMediaPlayer.setOnPreparedListener(this);\r\n            mMediaPlayer.setOnVideoSizeChangedListener(this);\r\n            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\r\n\r\n\r\n        } catch (Exception e) {\r\n            Log.e(TAG, "error: " + e.getMessage(), e);\r\n        }\r\n    }\r\n\r\n    public void onBufferingUpdate(MediaPlayer arg0, int percent) {\r\n        Log.d(TAG, "onBufferingUpdate percent:" + percent);\r\n\r\n    }\r\n\r\n    public void onCompletion(MediaPlayer arg0) {\r\n        Log.d(TAG, "onCompletion called");\r\n    }\r\n\r\n    public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {\r\n        Log.v(TAG, "onVideoSizeChanged called");\r\n        if (width == 0 || height == 0) {\r\n            Log.e(TAG, "invalid video width(" + width + ") or height(" + height + ")");\r\n            return;\r\n        }\r\n        mIsVideoSizeKnown = true;\r\n        mVideoWidth = width;\r\n        mVideoHeight = height;\r\n        if (mIsVideoReadyToBePlayed && mIsVideoSizeKnown) {\r\n            startVideoPlayback();\r\n        }\r\n    }\r\n\r\n    public void onPrepared(MediaPlayer mediaplayer) {\r\n        Log.d(TAG, "onPrepared called");\r\n        mIsVideoReadyToBePlayed = true;\r\n        if (mIsVideoReadyToBePlayed && mIsVideoSizeKnown) {\r\n            startVideoPlayback();\r\n        }\r\n    }\r\n\r\n    public void surfaceChanged(SurfaceHolder surfaceholder, int i, int j, int k) {\r\n        Log.d(TAG, "surfaceChanged called");\r\n\r\n    }\r\n\r\n    public void surfaceDestroyed(SurfaceHolder surfaceholder) {\r\n        Log.d(TAG, "surfaceDestroyed called");\r\n    }\r\n\r\n\r\n    public void surfaceCreated(SurfaceHolder holder) {\r\n        Log.d(TAG, "surfaceCreated called");\r\n        playVideo(extras.getInt(MEDIA));\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        releaseMediaPlayer();\r\n        doCleanUp();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        releaseMediaPlayer();\r\n        doCleanUp();\r\n    }\r\n\r\n    private void releaseMediaPlayer() {\r\n        if (mMediaPlayer != null) {\r\n            mMediaPlayer.release();\r\n            mMediaPlayer = null;\r\n        }\r\n    }\r\n\r\n    private void doCleanUp() {\r\n        mVideoWidth = 0;\r\n        mVideoHeight = 0;\r\n        mIsVideoReadyToBePlayed = false;\r\n        mIsVideoSizeKnown = false;\r\n    }\r\n\r\n    private void startVideoPlayback() {\r\n        Log.v(TAG, "startVideoPlayback");\r\n        holder.setFixedSize(mVideoWidth, mVideoHeight);\r\n        mMediaPlayer.start();\r\n    }\r\n}\r\n', '2014-03-03 15:58:44'),
(65, ' android', 'MotionX', ' \r\n\r\n// JAVA\r\n\r\npublic class MainActivity extends Activity {\r\nprivate AnimView animView;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n       // setContentView(R.layout.activity_main);\r\n        animView = new AnimView(MainActivity.this);\r\n        setContentView(animView);\r\n    }\r\n\r\n}\r\n\r\n\r\n// JAVA\r\n\r\npublic class AnimView extends SurfaceView implements SurfaceHolder.Callback, SensorEventListener {\r\n\r\n    //private SurfaceHolder holder;\r\n    private AnimThread animThread;\r\nContext context;\r\n    public AnimView(Context context) {\r\n        super(context);\r\n        this.context = context;\r\n       //  holder = getHolder();\r\n       // this.holder.addCallback(this);\r\n        getHolder().addCallback(this);\r\n        setFocusable(true);\r\n\r\n        SensorManager manager = (SensorManager)context.getSystemService(Context.SENSOR_SERVICE);\r\n        if(manager.getSensorList(Sensor.TYPE_ACCELEROMETER).size() != 0) {\r\n            Sensor accelerometer = manager.getSensorList(Sensor.TYPE_ACCELEROMETER).get(0);\r\n            manager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_GAME);\r\n           //YES Log.d("DEBUG","accelerometer");\r\n\r\n\r\n            this.animThread = new AnimThread(getHolder());\r\n        }else{\r\n           // Log.d("DEBUG","NO NO NO accelerometer");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void surfaceCreated(SurfaceHolder holder) {\r\n        Log.d("DEBUG","surfaceCreated()");\r\n    }\r\n\r\n    @Override\r\n    public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {\r\n        Log.d("DEBUG","surfaceChanged()");\r\n    }\r\n\r\n    @Override\r\n    public void surfaceDestroyed(SurfaceHolder holder) {\r\n        Log.d("DEBUG","surfaceDestroyed()");\r\n    }\r\n\r\n    @Override\r\n    public void onSensorChanged(SensorEvent event) {\r\n       //HIT  Log.d("DEBUG","onSensorChanged()");\r\n        if(this.animThread != null) {\r\n            Log.d("DEBUG", "animThread IS");\r\n            Log.d("DEBUG event.values[0]: ", String.valueOf(event.values[0]));\r\n            Log.d("DEBUG event.values[1]: ", String.valueOf(event.values[1]));\r\n\r\n            this.animThread.setTilt(event.values[0], event.values[1]);\r\n        }else{\r\n           // Log.d("DEBUG","animThread IS NOT ");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onAccuracyChanged(Sensor sensor, int accuracy) {\r\n        Log.d("DEBUG","onAccuracyChanged()");\r\n    }\r\n}\r\n\r\n\r\n// JAVA\r\n\r\n\r\npublic class AnimThread  extends Thread{\r\n    private SurfaceHolder holder;\r\n    private boolean running = true;\r\n    private float x = 100;\r\n    private float y = 100;\r\n    private float vx = 0;\r\n    private float vy = 0;\r\n    private float tiltX = 0;\r\n    private float tiltY = 0;\r\n\r\n    public AnimThread(SurfaceHolder holder) {\r\n        this.holder = holder;\r\n       this.setRunning(true);\r\n        Log.d("DEBUG", "AnimThread constructor");\r\n        //run();\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        Log.d("DEBUG", "AnimThread run");\r\n        while(running ) {\r\n            Canvas canvas = null;\r\n\r\n            try {\r\n                Log.d("DEBUG", "canvas try");\r\n                canvas = holder.lockCanvas();\r\n                synchronized (holder) {\r\n                    // update\r\n                    vx -= tiltX * 0.1;\r\n                    vy += tiltY * 0.1;\r\n                    x += vx;\r\n                    y += vy;\r\n\r\n                    // draw\r\n                    canvas.drawColor(Color.WHITE);\r\n                    Paint paint = new Paint();\r\n                    paint.setColor(Color.RED);\r\n                    canvas.drawCircle(x, y, 50, paint);\r\n\r\n                }\r\n            }\r\n            finally {\r\n                Log.d("DEBUG", "canvas finally");\r\n                if (canvas != null) {\r\n                    Log.d("DEBUG", "canvas NOT NULL");\r\n                    holder.unlockCanvasAndPost(canvas);\r\n                }else{\r\n                    Log.d("DEBUG", "canvas IS NULL");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void setRunning(boolean b) {\r\n        Log.d("DEBUG", "setRunning()");\r\n        running = b;\r\n    }\r\n\r\n    public void setTilt(float tiltX, float tiltY) {\r\n        Log.d("DEBUG", "setTilt()");\r\n        this.tiltX = tiltX;\r\n        this.tiltY = tiltY;\r\n    }\r\n\r\n}\r\n\r\n', '2014-03-03 16:01:20'),
(66, ' android', 'NavDrawerX', ' \r\n\r\n// Gradle\r\n\r\ndependencies {\r\n    compile ---com.android.support:support-v4:19.0.1--- REPLACE --- with single apostrophe\r\n\r\n}\r\n\r\n\r\n// XML\r\n-- activity_navigationdrawer.xml\r\n\r\n<android.support.v4.widget.DrawerLayout\r\n    xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:id="@+id/drawer_layout"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent">\r\n\r\n    <!-- Framelayout to display Fragments -->\r\n    <FrameLayout\r\n        android:id="@+id/frame_container"\r\n        android:layout_width="match_parent"\r\n        android:layout_height="match_parent" />\r\n\r\n    <!-- Listview to display slider menu -->\r\n    <ListView\r\n        android:id="@+id/list_slidermenu"\r\n        android:layout_width="240dp"\r\n        android:layout_height="match_parent"\r\n        android:layout_gravity="start"\r\n        android:choiceMode="singleChoice"\r\n\r\n        android:dividerHeight="1dp"\r\n\r\n        />\r\n</android.support.v4.widget.DrawerLayout>\r\n\r\n    <!--\r\n    extracted list view proerties:\r\n         android:divider="@color/list_divider"\r\n            android:listSelector="@drawable/list_selector"\r\n            android:background="@color/list_background"\r\n                -->\r\n\r\n\r\n// XML\r\n--drawer_list_item.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="48dp"\r\n    android:background="@drawable/list_selector">\r\n<!-- android:src="@drawable/ic_launcher" -->\r\n    <ImageView\r\n        android:id="@+id/icon"\r\n        android:layout_width="25dp"\r\n        android:layout_height="wrap_content"\r\n        android:layout_alignParentLeft="true"\r\n        android:layout_marginLeft="12dp"\r\n        android:layout_marginRight="12dp"\r\n        android:contentDescription="@string/desc_list_item_icon"\r\n\r\n        android:layout_centerVertical="true" />\r\n\r\n    <TextView\r\n        android:id="@+id/title"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="match_parent"\r\n        android:layout_toRightOf="@id/icon"\r\n        android:minHeight="?android:attr/listPreferredItemHeightSmall"\r\n        android:textAppearance="?android:attr/textAppearanceListItemSmall"\r\n\r\n        android:gravity="center_vertical"\r\n        android:paddingRight="40dp"/>\r\n\r\n    <TextView android:id="@+id/counter"\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:background="@drawable/counter_bg"\r\n        android:layout_alignParentRight="true"\r\n        android:layout_centerVertical="true"\r\n        android:layout_marginRight="8dp"\r\n        />\r\n\r\n</RelativeLayout>\r\n\r\n    <!--\r\n        extracted:\r\n        android:textColor="@color/list_item_title"\r\n        android:textColor="@color/counter_text_color"\r\n\r\n            -->\r\n\r\n\r\n// XML\r\n--list_item.xml\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:orientation="vertical" >\r\n\r\n    <!-- Single ListItem -->\r\n\r\n    <!-- Product Name -->\r\n    <TextView android:id="@+id/product_name"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="wrap_content"\r\n        android:padding="10dip"\r\n        android:textSize="16dip"\r\n        android:textStyle="bold"/>\r\n\r\n</LinearLayout>\r\n\r\n\r\n\r\n// XML STRINGS\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<resources>\r\n\r\n    <string name="app_name">DrawerX</string>\r\n    <string name="hello_world">Hello world!</string>\r\n    <string name="action_settings">Settings</string>\r\n\r\n    <!-- hive navigation drawer -->\r\n    <string name="drawer_open">Slider Menu Opened</string>\r\n    <string name="drawer_close">Slider Menu Closed</string>\r\n\r\n    <!-- Nav Drawer Menu Items -->\r\n    <string-array name="nav_drawer_items">\r\n        <item >Home</item>\r\n        <item >Find People</item>\r\n        <item >Photos</item>\r\n        <item >Communities</item>\r\n        <item >Pages</item>\r\n        <item >What is Hot</item>\r\n    </string-array>\r\n\r\n    <!-- Nav Drawer List Item Icons -->\r\n    <!-- Keep them in order as the titles are in -->\r\n    <array name="nav_drawer_icons">\r\n        <item>@drawable/drawer_item</item>\r\n        <item>@drawable/drawer_item</item>\r\n        <item>@drawable/drawer_item</item>\r\n        <item>@drawable/drawer_item</item>\r\n        <item>@drawable/drawer_item</item>\r\n        <item>@drawable/drawer_item</item>\r\n    </array>\r\n\r\n    <!-- Content Description -->\r\n    <string name="desc_list_item_icon">Item Icon</string>\r\n\r\n</resources>\r\n\r\n\r\n\r\n// JAVA adapters\r\n\r\npublic class NavDrawerListAdapter extends BaseAdapter {\r\n\r\n    private Context context;\r\n    private ArrayList<NavDrawerItem> navDrawerItems;\r\n\r\n    public NavDrawerListAdapter(Context context, ArrayList<NavDrawerItem> navDrawerItems) {\r\n        this.context = context;\r\n        this.navDrawerItems = navDrawerItems;\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        return navDrawerItems.size();\r\n    }\r\n\r\n    @Override\r\n    public Object getItem(int position) {\r\n        return navDrawerItems.get(position);\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n\r\n    @Override\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n        if (convertView == null) {\r\n            LayoutInflater mInflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\r\n            convertView = mInflater.inflate(R.layout.drawer_list_item, null);\r\n        }\r\n\r\n        ImageView imgIcon = (ImageView) convertView.findViewById(R.id.icon);\r\n        TextView txtTitle = (TextView) convertView.findViewById(R.id.title);\r\n        TextView txtCount = (TextView) convertView.findViewById(R.id.counter);\r\n\r\n        imgIcon.setImageResource(navDrawerItems.get(position).getIcon());\r\n        txtTitle.setText(navDrawerItems.get(position).getTitle());\r\n\r\n        if (navDrawerItems.get(position).getCounterVisibility()) {\r\n            txtCount.setText(navDrawerItems.get(position).getCount());\r\n        } else {\r\n            // hide the counter view\r\n            txtCount.setVisibility(View.GONE);\r\n        }\r\n\r\n        return convertView;\r\n    }\r\n}\r\n\r\n// JAVA navigationDrawer\r\n\r\npublic class NavDrawerItem {\r\n\r\n    private String title;\r\n    private int icon;\r\n    private String count = "0";\r\n    private boolean isCounterVisible = false;\r\n\r\n    public NavDrawerItem(){}\r\n\r\n    public NavDrawerItem(String title, int icon){\r\n        this.title = title;\r\n        this.icon = icon;\r\n    }\r\n\r\n    public NavDrawerItem(String title, int icon, boolean isCounterVisible, String count){\r\n        this.title = title;\r\n        this.icon = icon;\r\n        this.isCounterVisible = isCounterVisible;\r\n        this.count = count;\r\n    }\r\n\r\n    public String getTitle(){\r\n        return this.title;\r\n    }\r\n\r\n    public int getIcon(){\r\n        return this.icon;\r\n    }\r\n\r\n    public String getCount(){\r\n        return this.count;\r\n    }\r\n\r\n    public boolean getCounterVisibility(){\r\n        return this.isCounterVisible;\r\n    }\r\n\r\n    public void setTitle(String title){\r\n        this.title = title;\r\n    }\r\n\r\n    public void setIcon(int icon){\r\n        this.icon = icon;\r\n    }\r\n\r\n    public void setCount(String count){\r\n        this.count = count;\r\n    }\r\n\r\n    public void setCounterVisibility(boolean isCounterVisible){\r\n        this.isCounterVisible = isCounterVisible;\r\n    }\r\n\r\n}\r\n\r\n\r\n//JAVA main activity\r\n\r\npublic class MainActivity extends Activity implements ListView.OnItemClickListener{\r\n\r\n    private DrawerLayout mDrawerLayout;\r\n    private ListView mDrawerList;\r\n    private ActionBarDrawerToggle mDrawerToggle;\r\n    private CharSequence mDrawerTitle;\r\n    private CharSequence mAppTitle;\r\n    private String[] navMenuTitles;\r\n    private TypedArray navMenuIcons;\r\n    private ArrayList<NavDrawerItem> navDrawerItems;\r\n    private NavDrawerListAdapter adapter;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(com.example.navdrawerx.R.layout.activity_navigationdrawer);\r\n\r\n        mAppTitle = mDrawerTitle = getTitle();\r\n        navMenuTitles = getResources().getStringArray(R.array.nav_drawer_items);\r\n        navMenuIcons = getResources().obtainTypedArray(R.array.nav_drawer_icons);\r\n\r\n        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\r\n        mDrawerList = (ListView) findViewById(R.id.list_slidermenu);\r\n        mDrawerList.setOnItemClickListener(this);\r\n        navDrawerItems = new ArrayList<NavDrawerItem>();\r\n\r\n        navDrawerItems.add(new NavDrawerItem(navMenuTitles[0], navMenuIcons.getResourceId(0, -1)));\r\n        navDrawerItems.add(new NavDrawerItem(navMenuTitles[1], navMenuIcons.getResourceId(1, -1)));\r\n        navDrawerItems.add(new NavDrawerItem(navMenuTitles[2], navMenuIcons.getResourceId(2, -1)));\r\n        navDrawerItems.add(new NavDrawerItem(navMenuTitles[3], navMenuIcons.getResourceId(3, -1), true, "22"));\r\n        navDrawerItems.add(new NavDrawerItem(navMenuTitles[4], navMenuIcons.getResourceId(4, -1)));\r\n        navDrawerItems.add(new NavDrawerItem(navMenuTitles[5], navMenuIcons.getResourceId(5, -1), true, "50+"));\r\n\r\n        // Recycle the typed array\r\n        navMenuIcons.recycle();\r\n\r\n        adapter = new NavDrawerListAdapter(getApplicationContext(), navDrawerItems);\r\n        mDrawerList.setAdapter(adapter);\r\n\r\n        // enabling action bar app icon and behaving it as toggle button\r\n        getActionBar().setDisplayHomeAsUpEnabled(true);\r\n        getActionBar().setHomeButtonEnabled(true);\r\n\r\n        mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, R.drawable.toggle, //nav menu toggle icon\r\n                R.string.app_name, // nav drawer open - description for accessibility\r\n                R.string.app_name // nav drawer close - description for accessibility\r\n        ) {\r\n            public void onDrawerClosed(View view) {\r\n                getActionBar().setTitle(mAppTitle);\r\n                // calling onPrepareOptionsMenu() to show action bar icons\r\n                invalidateOptionsMenu();\r\n            }\r\n\r\n            public void onDrawerOpened(View drawerView) {\r\n                getActionBar().setTitle(mDrawerTitle);\r\n                // calling onPrepareOptionsMenu() to hide action bar icons\r\n                invalidateOptionsMenu();\r\n            }\r\n        };\r\n        mDrawerLayout.setDrawerListener(mDrawerToggle);\r\n\r\n        if (savedInstanceState == null) {\r\n            // on first time display view for first nav item\r\n            // !!!!!!   displayView(0);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.navigationdrawermenu, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        // toggle nav drawer on selecting action bar app icon/title\r\n        if (mDrawerToggle.onOptionsItemSelected(item)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Called when invalidateOptionsMenu() is triggered\r\n     */\r\n    @Override\r\n    public boolean onPrepareOptionsMenu(Menu menu) {\r\n        // if nav drawer is opened, hide the action items\r\n        boolean drawerOpen = mDrawerLayout.isDrawerOpen(mDrawerList);\r\n        return super.onPrepareOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public void setTitle(CharSequence title) {\r\n        mAppTitle = title;\r\n        getActionBar().setTitle(mAppTitle);\r\n    }\r\n\r\n    /**\r\n     * When using the ActionBarDrawerToggle, you must call it during onPostCreate() and onConfigurationChanged()...\r\n     */\r\n\r\n    @Override\r\n    protected void onPostCreate(Bundle savedInstanceState) {\r\n        super.onPostCreate(savedInstanceState);\r\n        // Sync the toggle state after onRestoreInstanceState has occurred.\r\n        mDrawerToggle.syncState();\r\n    }\r\n\r\n    @Override\r\n    public void onConfigurationChanged(Configuration newConfig) {\r\n        super.onConfigurationChanged(newConfig);\r\n        // Pass any configuration change to the drawer toggls\r\n        mDrawerToggle.onConfigurationChanged(newConfig);\r\n    }\r\n\r\n    @Override\r\n    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n        // Fragment newFragment;\r\n        // FragmentTransaction transaction = getFragmentManager().beginTransaction();\r\n        Toast.makeText(MainActivity.this, "position: " + position + " id:" + id + "", Toast.LENGTH_LONG).show();\r\n\r\n        switch (position) {\r\n            case 0:\r\n                /* Example call to a Fragment\r\n                newFragment = new f1();\r\n                transaction.replace(R.id.content_frame, newFragment);\r\n                transaction.addToBackStack(null);\r\n                transaction.commit();\r\n                */\r\n\r\n                break;\r\n\r\n            case 1:\r\n                /*\r\n                newFragment = new f2();\r\n                transaction.replace(R.id.content_frame, newFragment);\r\n                transaction.addToBackStack(null);\r\n                transaction.commit();\r\n                */\r\n\r\n                break;\r\n\r\n\r\n\r\n\r\n        }\r\n        //DrawerList.setItemChecked(position, true);\r\n        setTitle(navMenuTitles[position]);\r\n        //DrawerLayout.closeDrawer(mDrawerLayout);\r\n        // getActionBar().setTitle(mAppTitle);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n', '2014-03-03 16:07:40'),
(67, ' android', 'PhoneX', ' \r\n\r\n// manifest\r\n    <uses-permission android:name="android.permission.CALL_PHONE" />\r\n    <uses-permission android:name="android.permission.READ_PHONE_STATE" />\r\n\r\n// XML\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.phonex.MainActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n    <LinearLayout\r\n        android:orientation="vertical"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        android:layout_gravity="left|center_vertical">\r\n\r\n        <Button\r\n            android:id="@+id/button"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:text="Call 123456" />\r\n\r\n        </LinearLayout>\r\n</FrameLayout>\r\n\r\n\r\n// JAVA\r\n\r\n\r\npublic class MainActivity extends Activity implements View.OnClickListener{\r\n\r\n    private Button btn;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        btn = (Button) findViewById(R.id.button);\r\n\r\n        PhoneCallListener phoneCallListener = new PhoneCallListener();\r\n        TelephonyManager telManager = (TelephonyManager) this.getSystemService(Context.TELEPHONY_SERVICE);\r\n        telManager.listen(phoneCallListener, PhoneStateListener.LISTEN_CALL_STATE);\r\n\r\n        btn.setOnClickListener(MainActivity.this);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        Intent phoneCallIntent = new Intent(Intent.ACTION_CALL);\r\n        phoneCallIntent.setData(Uri.parse("tel:123456"));\r\n        startActivity(phoneCallIntent);\r\n    }\r\n\r\n\r\n    // monitor phone call states\r\n    private class PhoneCallListener extends PhoneStateListener {\r\n\r\n        String TAG = "LOGGING PHONE CALL";\r\n\r\n        private boolean phoneCalling = false;\r\n\r\n        @Override\r\n        public void onCallStateChanged(int state, String incomingNumber) {\r\n\r\n            if (TelephonyManager.CALL_STATE_RINGING == state) {\r\n                // phone ringing\r\n                Log.i(TAG, "RINGING, number: " + incomingNumber);\r\n            }\r\n\r\n            if (TelephonyManager.CALL_STATE_OFFHOOK == state) {\r\n                // active\r\n                Log.i(TAG, "OFFHOOK");\r\n\r\n                phoneCalling = true;\r\n            }\r\n\r\n            // When the call ends launch the main activity again\r\n            if (TelephonyManager.CALL_STATE_IDLE == state) {\r\n\r\n                Log.i(TAG, "IDLE");\r\n\r\n                if (phoneCalling) {\r\n\r\n                    Log.i(TAG, "restart app");\r\n\r\n                    // restart app\r\n                    Intent i = getBaseContext().getPackageManager()\r\n                            .getLaunchIntentForPackage(\r\n                                    getBaseContext().getPackageName());\r\n\r\n                    i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                    startActivity(i);\r\n\r\n                    phoneCalling = false;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n', '2014-03-03 16:10:52');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(68, ' android', 'SMSX', ' \r\n\r\n//manifest\r\n <uses-permission android:name="android.permission.SEND_SMS" />\r\n\r\n // JAVA\r\n\r\n\r\npublic class MainActivity extends Activity implements View.OnClickListener {\r\n\r\n	Button button;\r\n	EditText editPhoneNum;\r\n	EditText editSMS;\r\n\r\n	@Override\r\n	protected void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n		setContentView(R.layout.activity_main);\r\n\r\n		button = (Button) findViewById(R.id.button);\r\n		editPhoneNum = (EditText) findViewById(R.id.editPhoneNum);\r\n		editSMS = (EditText) findViewById(R.id.editSMS);\r\n		button.setOnClickListener(this);\r\n\r\n	}\r\n\r\n	@Override\r\n	public void onClick(View v) {\r\n		String phoneNo = editPhoneNum.getText().toString();\r\n		String sms = editSMS.getText().toString();\r\n\r\n		try {\r\n			SmsManager smsManager = SmsManager.getDefault();\r\n			smsManager.sendTextMessage(phoneNo, null, sms, null, null);\r\n			Toast.makeText(getApplicationContext(), "SMS Sent!", Toast.LENGTH_LONG).show();\r\n		}\r\n		catch (Exception e) {\r\n			Toast.makeText(getApplicationContext(), "SMS faild, please try again later!", Toast.LENGTH_LONG).show();\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n}\r\n\r\n\r\n', '2014-03-03 16:13:03'),
(69, ' android', 'TestX', '\r\n//TESTX : unit testing and automation\r\n\r\n\r\n// Gradle : remember to sync gradle afterwards.\r\ndependencies {\r\n    compile ---com.jayway.android.robotium:robotium-solo:4.3.1@jar---   REPLACE  --- with single apostrophe\r\n}\r\n\r\n\r\n\r\n defaultConfig {\r\n\r\n        testPackageName "com.example.testx.test"\r\n        testInstrumentationRunner "com.example.testx.test.Runner"\r\n\r\n        OR\r\n\r\n         testPackageName "com.mocura.moduleseventests.test"\r\n                testInstrumentationRunner "com.mocura.moduleseventests.test.Runner"\r\n    }\r\n\r\n\r\n\r\n\r\n// JAVA : RUNNER\r\n    package com.mocura.moduleseventests.test;\r\n\r\n    import android.test.InstrumentationTestRunner;\r\n    import android.test.InstrumentationTestSuite;\r\n\r\n    import com.mocura.moduleseventests.MainActivityTest;\r\n\r\n    import junit.framework.TestSuite;\r\n\r\n    /**\r\n     * Created by swav on 21/08/13.\r\n     */\r\n    public class Runner extends InstrumentationTestRunner {\r\n\r\n    	@Override\r\n    	public TestSuite getAllTests() {\r\n    		InstrumentationTestSuite suite = new InstrumentationTestSuite(this);\r\n    		suite.addTestSuite(MainActivityTest.class);\r\n\r\n    		//suite.addTestSuite(DatabaseTest.class);\r\n    		//suite.addTestSuite(InstrumentationTest.class);\r\n\r\n    		return suite;\r\n    	}\r\n\r\n    	@Override\r\n    	public ClassLoader getLoader() {\r\n    		return Runner.class.getClassLoader();\r\n    	}\r\n\r\n    }\r\n\r\n\r\n\r\n// JAVA : DATABASE TEST\r\npackage com.mocura.moduleseventests.test;\r\n\r\nimport android.content.Context;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteException;\r\nimport android.test.AndroidTestCase;\r\nimport android.util.Log;\r\n\r\nimport com.mocura.moduleseven.helper.Helper;\r\nimport com.mocura.moduleseven.models.Hour;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * Created by BForte on 1/16/14.\r\n */\r\n\r\n/**\r\n * This class is a unit test for the CRUD methods of the Hours class.\r\n */\r\n\r\npublic class DatabaseTest extends AndroidTestCase {\r\n\r\n	private Context mContext;\r\n	private boolean mDatabaseExists = false;\r\n	public Helper mXHelper;\r\n\r\n	/**\r\n	 * This method makes sure the database exists before trying to do any tests by creating a boolean flag, mDatabaseExists.\r\n	 *\r\n	 * @throws Exception\r\n	 */\r\n	@Override\r\n	protected void setUp() throws Exception {\r\n		super.setUp();\r\n		mContext = getContext();\r\n\r\n		mXHelper = new Helper(mContext);\r\n		mXHelper.open();\r\n\r\n		String pathToDatabase = String.valueOf(mContext.getDatabasePath("Hour"));\r\n		SQLiteDatabase checkDB = null;\r\n		// SQLiteDatabase mDatabase;\r\n		try {\r\n			checkDB = SQLiteDatabase.openDatabase(pathToDatabase, null, SQLiteDatabase.OPEN_READONLY);\r\n			checkDB.close();\r\n		}\r\n		catch (SQLiteException e) {\r\n			// database does not exist yet.\r\n		}\r\n\r\n		if (checkDB != null) {\r\n			mDatabaseExists = true;\r\n			//mDatabase = checkDB;\r\n		} else {\r\n			mDatabaseExists = false;\r\n		}\r\n	}\r\n\r\n	@Override\r\n	protected void tearDown() throws Exception {\r\n		super.tearDown();\r\n		mXHelper.close();\r\n	}\r\n\r\n	/**\r\n	 * This method tests whether an Hours object was created by verifying that the company name sent in, equals the company name that gets sent out.\r\n	 */\r\n	public void testCRUD() {\r\n		if (mDatabaseExists) {\r\n\r\n			try {\r\n\r\n				//create\r\n				Hour xhour1 = new Hour("TestCompanyName", 1.2, "1/22/2014");\r\n				mXHelper.createXHour(xhour1);\r\n\r\n				//read\r\n				List<Hour> hourList = mXHelper.readAllXHour();\r\n				Hour lastHour = hourList.get(hourList.size() - 1);\r\n				assertEquals(lastHour.getCompany(), "TestCompanyName");\r\n\r\n				//update\r\n				lastHour.setCompany("UpdatedCompany");\r\n				mXHelper.updateHours(lastHour);\r\n				List<Hour> xUpdatedHourList = mXHelper.readAllXHour();\r\n				Hour lastUpdatedHour = hourList.get(xUpdatedHourList.size() - 1);\r\n				assertEquals(lastUpdatedHour.getCompany(), "UpdatedCompany");\r\n\r\n				//delete\r\n				int countBeforeDelete = xUpdatedHourList.size() - 1;\r\n				mXHelper.deleteXHour(lastUpdatedHour);\r\n				List<Hour> xDeletedHourList = mXHelper.readAllXHour();\r\n				int countAfterDelete = xDeletedHourList.size() - 1;\r\n				assertTrue("Delete Test Failed:", countBeforeDelete - 1 == countAfterDelete);\r\n\r\n			}\r\n			catch (Exception e) {\r\n				Log.d("DEBUG", e.toString());\r\n			}\r\n\r\n		} else {\r\n			String database = "database";\r\n			assertEquals("databaseDoesNotExist", database);\r\n		}\r\n	}\r\n\r\n}\r\n\r\n\r\n// JAVA : Robotium Automation\r\npackage com.mocura.moduleseventests.test;\r\n\r\nimport android.test.ActivityInstrumentationTestCase2;\r\nimport android.widget.ListView;\r\n\r\nimport com.jayway.android.robotium.solo.Solo;\r\nimport com.mocura.moduleseven.AddWorkActivity;\r\nimport com.mocura.moduleseven.EditActivity;\r\nimport com.mocura.moduleseven.MainActivity;\r\n\r\n/**\r\n * Created by BForte on 1/20/14.\r\n */\r\n\r\n/**\r\n * This class is a test to automate the application and verify that certain tasks are completed correctly. Your instrumentationTests should not be a subpackage\r\n * -tests-; rather they should be their own directory and package entirely.\r\n */\r\n\r\npublic class InstrumentationTest extends ActivityInstrumentationTestCase2<MainActivity> {\r\n\r\n	private Solo solo;\r\n	public int countBeforeDeletion;\r\n	public int countAfterDeletion;\r\n\r\n	public InstrumentationTest() {\r\n\r\n		super(MainActivity.class);\r\n	}\r\n\r\n	public void setUp() throws Exception {\r\n		solo = new Solo(getInstrumentation(), getActivity());\r\n\r\n	}\r\n\r\n	@Override\r\n	public void tearDown() throws Exception {\r\n\r\n		solo.finishOpenedActivities();\r\n\r\n	}\r\n\r\n	public void testCreateButton1() {\r\n		solo.assertCurrentActivity("wrong activity", MainActivity.class);\r\n		solo.clickOnActionBarItem(com.mocura.moduleseven.R.id.addWork);\r\n		solo.assertCurrentActivity("on the Add Activity screen", AddWorkActivity.class);\r\n		solo.enterText(0, "Indatus");\r\n		solo.enterText(1, "22.7");\r\n		solo.enterText(2, "1/19/2014");\r\n		solo.clickOnButton("OK");\r\n		solo.sleep(1000);\r\n	}\r\n\r\n	public void testCreateButton2() {\r\n		solo.assertCurrentActivity("wrong activity", MainActivity.class);\r\n		solo.clickOnActionBarItem(com.mocura.moduleseven.R.id.addWork);\r\n		solo.assertCurrentActivity("on the Add Activity screen", AddWorkActivity.class);\r\n		solo.enterText(0, "Mocura");\r\n		solo.enterText(1, "11.02");\r\n		solo.enterText(2, "1/20/2014");\r\n		solo.clickOnButton("OK");\r\n		solo.sleep(1000);\r\n	}\r\n\r\n	public void testCreateButton3() {\r\n		solo.assertCurrentActivity("wrong activity", MainActivity.class);\r\n		solo.clickOnActionBarItem(com.mocura.moduleseven.R.id.addWork);\r\n		solo.assertCurrentActivity("on the Add Activity screen", AddWorkActivity.class);\r\n		solo.enterText(0, "Google");\r\n		solo.enterText(1, "26.54");\r\n		solo.enterText(2, "1/21/2014");\r\n		solo.clickOnButton("OK");\r\n		solo.sleep(1000);\r\n	}\r\n\r\n	public void testDelete() {\r\n		ListView list = (ListView) solo.getView(com.mocura.moduleseven.R.id.main_mHoursList);\r\n		countBeforeDeletion = list.getAdapter().getCount();\r\n		/* Long click 3 rows and Delete them */\r\n		solo.clickLongInList(countAfterDeletion);\r\n		solo.clickOnButton("Yes");\r\n		solo.clickLongInList(countAfterDeletion - 1);\r\n		solo.clickOnButton("Yes");\r\n		solo.clickLongInList(countAfterDeletion - 2);\r\n		solo.clickOnButton("Yes");\r\n		solo.sleep(3000); //wait and make sure process is completed.\r\n		/* verify that they were deleted */\r\n		int countAfterDeletionOf3Records = list.getAdapter().getCount();\r\n		if (countBeforeDeletion == countAfterDeletionOf3Records + 3) {\r\n			//force a success\r\n			solo.assertCurrentActivity("TEST-SUCCESS ", MainActivity.class);\r\n		} else {\r\n			//force a fail\r\n			solo.assertCurrentActivity("TEST-FAIL ", EditActivity.class);\r\n		}\r\n	}\r\n\r\n}\r\n\r\n// JAVA : MainActivity Test\r\npackage com.mocura.moduleseventests;\r\n\r\nimport android.test.ActivityInstrumentationTestCase2;\r\nimport android.test.suitebuilder.annotation.MediumTest;\r\n\r\nimport com.example.testx.MainActivity;\r\n\r\n/**\r\n * Created by swav on 21/08/13.\r\n */\r\npublic class MainActivityTest extends ActivityInstrumentationTestCase2<MainActivity> {\r\n	public MainActivityTest() {\r\n		super(MainActivity.class);\r\n	}\r\n\r\n	@MediumTest\r\n	public void testToFail() {\r\n		fail("nil");\r\n	}\r\n\r\n}\r\n\r\n\r\n// Run > Edit Configurations >\r\n    select the module and the runner appropriately.\r\n\r\n\r\n\r\n', '2014-03-03 16:15:04'),
(70, ' android', 'ThreadX', ' \r\n\r\n\r\n// manifest\r\n\r\n <uses-permission android:name="android.permission.INTERNET" />\r\n\r\n <activity\r\n             android:name="com.example.app.MainActivity"\r\n             android:label="@string/app_name" >\r\n\r\n         </activity>\r\n         <activity\r\n             android:name="com.example.app.ThreadPoolExecutorActivity"\r\n             android:label="@string/app_name" >\r\n\r\n         </activity>\r\n         <activity\r\n             android:name="com.example.app.FuturesAndCallablesActivity"\r\n             android:label="@string/app_name" >\r\n\r\n         </activity>\r\n         <activity\r\n             android:name="com.example.app.ConcurrencySynchronization"\r\n             android:label="@string/app_name" >\r\n             <intent-filter>\r\n                 <action android:name="android.intent.action.MAIN" />\r\n\r\n                 <category android:name="android.intent.category.LAUNCHER" />\r\n             </intent-filter>\r\n\r\n         </activity>\r\n\r\n\r\n// XML\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.app.MainActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n    <LinearLayout\r\n        android:orientation="vertical"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        android:layout_gravity="center_horizontal|top">\r\n\r\n        <TextView\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:textAppearance="?android:attr/textAppearanceSmall"\r\n            android:text="This app contains 3 threading techniques.ConcurrencySynchronization,Futures and Callables, and Thread Pool Executor."\r\n            android:id="@+id/textView"\r\n            android:layout_gravity="center_horizontal" />\r\n    </LinearLayout>\r\n</FrameLayout>\r\n\r\n\r\n// JAVA\r\n\r\npublic class ConcurrencySynchronization extends Activity {\r\n\r\n    /**\r\n     * http://www.vogella.com/tutorials/JavaConcurrency/article.html#threads\r\n     *\r\n     */\r\n\r\n    /**\r\n      Locks and thread synchronization\r\n     Java provides locks to protect certain parts of the code to be executed by several threads at the same time.\r\n     The simplest way of locking a certain method or Java class is to define the method or class with the synchronized keyword.\r\n     The synchronized keyword in Java ensures:\r\n     that only a single thread can execute a block of code at the same time\r\n     that each thread entering a synchronized block of code sees the effects of all previous modifications that were guarded by the same lock\r\n     Synchronization is necessary for mutually exclusive access to blocks of and for reliable communication between threads.\r\n     You can use the synchronized keyword for the definition of a method. This would ensure that only one thread can enter this method at the same time.\r\n     Another threads which is calling this method would wait until the first threads leaves this method.\r\n\r\n     public synchronized void critial() {\r\n        // some thread critical stuff\r\n        // here\r\n     }\r\n\r\n     You can also use the synchronized keyword to protect blocks of code within a method. This block is guarded by a key, which can be either a string or an object.\r\n     This key is called the lock. All code which is protected by the same lock can only be executed by one thread at the same time\r\n     For example the following datastructure will ensure that only one thread can access the inner block of the add() and next() methods.\r\n\r\n     */\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        CrawledSites crawled = new CrawledSites();\r\n        crawled.add("http://www.forteworks.com");\r\n        crawled.next();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// JAVA\r\n\r\n\r\npublic class CrawledSites {\r\n    private List<String> crawledSites = new ArrayList<String>();\r\n    private List<String> linkedSites = new ArrayList<String>();\r\n\r\n    public void add(String site) {\r\n        synchronized (this) {\r\n            if (!crawledSites.contains(site)) {\r\n                linkedSites.add(site);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Get next site to crawl. Can return null (if nothing to crawl)\r\n     */\r\n\r\n    public String next() {\r\n        if (linkedSites.size() == 0) {\r\n            return null;\r\n        }\r\n        synchronized (this) {\r\n            // Need to check again if size has changed\r\n            if (linkedSites.size() > 0) {\r\n                String s = linkedSites.get(0);\r\n                linkedSites.remove(0);\r\n                crawledSites.add(s);\r\n                Log.d("DEBUG",">crawled through: "+ s);\r\n\r\n                return s;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n// JAVA\r\n\r\npublic class FuturesAndCallablesActivity extends Activity {\r\n\r\n\r\n    private static final int NTHREDS = 10;\r\n\r\n    /**\r\n     * Futures and Callables\r\n     The code examples for this section are created in a Java project called de.vogella.concurrency.callables.\r\n     The executor framework presented in the last chapter works with Runnables. Runnable do not return result.\r\n     In case you expect your threads to return a computed result you can use java.util.concurrent.Callable. The Callable object allows to return values after completion.\r\n     The Callable object uses generics to define the type of object which is returned.\r\n     If you submit a Callable object to an Executor the framework returns an object of type java.util.concurrent.Future.\r\n     This Future object can be used to check the status of a Callable and to retrieve the result from the Callable.\r\n     On the Executor you can use the method submit to submit a Callable and to get a future. To retrieve the result of the future use the get() method.\r\n     *\r\n     */\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n       // LEFT OFF HERE ----\r\n        ExecutorService executor = Executors.newFixedThreadPool(NTHREDS);\r\n        List<Future<Long>> list = new ArrayList<Future<Long>>();\r\n        for (int i = 0; i < 20000; i++) {\r\n            Callable<Long> worker = new MyCallable();\r\n            Future<Long> submit = executor.submit(worker);\r\n            list.add(submit);\r\n        }\r\n        long sum = 0;\r\n        System.out.println(list.size());\r\n        // now retrieve the result\r\n        for (Future<Long> future : list) {\r\n            try {\r\n                sum += future.get();\r\n                Log.d("DEBUG","sum :"+ sum + " future.get():"+ future.get());\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            } catch (ExecutionException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        System.out.println(sum);\r\n        executor.shutdown();\r\n\r\n    }\r\n\r\n\r\n    public class MyCallable implements Callable<Long> {\r\n        @Override\r\n        public Long call() throws Exception {\r\n            long sum = 0;\r\n            for (long i = 0; i <= 100; i++) {\r\n                sum += i;\r\n            }\r\n            return sum;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//JAVA\r\n\r\npublic class ThreadPoolExecutorActivity extends Activity {\r\n\r\n\r\n    /**\r\n     Threads pools with the Executor Framework\r\n     You find this examples in the source section in Java project called de.vogella.concurrency.threadpools.\r\n     Thread pools manage a pool of worker threads. The thread pools contains a work queue which holds tasks waiting to get executed.\r\n     A thread pool can be described as a collection of Runnable objects (work queue) and a connections of running threads.\r\n     These threads are constantly running and are checking the work query for new work.\r\n     If there is new work to be done they execute this Runnable.\r\n     The Thread class itself provides a method, e.g. execute(Runnable r) to add a new Runnable object to the work queue.\r\n     The Executor framework provides example implementation of the java.util.concurrent.Executor interface,\r\n     e.g. Executors.newFixedThreadPool(int n) which will create n worker threads.\r\n     The ExecutorService adds life cycle methods to the Executor,\r\n     which allows to shutdown the Executor and to wait for termination.\r\n     */\r\n\r\n    private static final int NTHREDS = 10;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n\r\n        ExecutorService executor = Executors.newFixedThreadPool(NTHREDS);\r\n        for (int i = 0; i < 500; i++) {\r\n            Runnable worker = new ThreadPoolRunnable(10000000L + i);\r\n            executor.execute(worker);\r\n        }\r\n        // This will make the executor accept no new threads\r\n        // and finish all existing threads in the queue\r\n        executor.shutdown();\r\n        // Wait until all threads are finish\r\n        //----->PROBLEM HERE:  executor.awaitTermination();\r\n        System.out.println("Finished all threads");\r\n        Log.d("DEBUG","Finished ALl Threads, maybe");\r\n\r\n\r\n    }\r\n\r\n    public class ThreadPoolRunnable  implements Runnable {\r\n        private final long countUntil;\r\n\r\n        ThreadPoolRunnable(long countUntil) {\r\n            this.countUntil = countUntil;\r\n        }\r\n\r\n        @Override\r\n        public void run() {\r\n            long sum = 0;\r\n            for (long i = 1; i < countUntil; i++) {\r\n                sum += i;\r\n            }\r\n            System.out.println(sum);\r\n            Log.d("DEBUG","sum:"+ sum);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n', '2014-03-03 16:18:58'),
(71, ' android', 'VideoX', '\r\n\r\n// manifest\r\n <!-- This app records A/V content from camera and stores it to disk -->\r\n    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />\r\n    <uses-permission android:name="android.permission.RECORD_VIDEO" />\r\n    <uses-permission android:name="android.permission.RECORD_AUDIO"/>\r\n    <uses-permission android:name="android.permission.CAMERA" />\r\n    <uses-feature android:name="android.hardware.camera" />\r\n\r\n\r\n\r\n    // XML\r\n    sample_main.xml\r\n    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n        xmlns:tools="http://schemas.android.com/tools"\r\n        android:layout_width="match_parent"\r\n        android:layout_height="match_parent"\r\n        android:paddingLeft="@dimen/activity_horizontal_margin"\r\n        android:paddingRight="@dimen/activity_horizontal_margin"\r\n        android:paddingTop="@dimen/activity_vertical_margin"\r\n        android:paddingBottom="@dimen/activity_vertical_margin"\r\n        android:orientation="vertical"\r\n        tools:context=".MainActivity">\r\n\r\n\r\n        <LinearLayout\r\n            android:orientation="horizontal"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:layout_marginTop = "20dp"\r\n            android:layout_gravity="center_horizontal"\r\n            >\r\n        <TextureView\r\n            android:layout_width="200dp"\r\n            android:layout_height="200dp"\r\n            android:id="@+id/surface_view"\r\n            android:layout_gravity="center_horizontal"\r\n             />\r\n\r\n        <VideoView\r\n            android:layout_width="110dp"\r\n            android:layout_height="110dp"\r\n            android:layout_marginTop = "10dp"\r\n            android:layout_marginLeft = "10dp"\r\n            android:layout_gravity="center_horizontal"\r\n            android:id="@+id/videoView"\r\n             />\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:orientation="horizontal"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:layout_marginTop = "20dp"\r\n            android:layout_gravity="center_horizontal|bottom"\r\n            >\r\n            <Button\r\n                android:layout_width="100dp"\r\n                android:layout_height="wrap_content"\r\n                android:id="@+id/button_capture"\r\n                android:layout_gravity="left"\r\n                android:onClick="onCaptureClick"\r\n                android:text="capture"/>\r\n            <Button\r\n                android:layout_width="174dp"\r\n                android:layout_height="wrap_content"\r\n                android:id="@+id/button_play"\r\n                android:layout_gravity="right"\r\n                android:onClick="onPlayClick"\r\n                android:text="play"/>\r\n            </LinearLayout>\r\n    </LinearLayout>\r\n\r\n\r\n\r\n// JAVA\r\n\r\npublic class CameraHelper {\r\n\r\n    public static final int MEDIA_TYPE_IMAGE = 1;\r\n    public static final int MEDIA_TYPE_VIDEO = 2;\r\n\r\n    /**\r\n     * Iterate over supported camera preview sizes to see which one best fits the\r\n     * dimensions of the given view while maintaining the aspect ratio. If none can,\r\n     * be lenient with the aspect ratio.\r\n     *\r\n     * @param sizes Supported camera preview sizes.\r\n     * @param w The width of the view.\r\n     * @param h The height of the view.\r\n     * @return Best match camera preview size to fit in the view.\r\n     */\r\n    public static  Camera.Size getOptimalPreviewSize(List<Camera.Size> sizes, int w, int h) {\r\n        // Use a very small tolerance because we want an exact match.\r\n        final double ASPECT_TOLERANCE = 0.1;\r\n        double targetRatio = (double) w / h;\r\n        if (sizes == null)\r\n            return null;\r\n\r\n        Camera.Size optimalSize = null;\r\n\r\n        // Start with max value and refine as we iterate over available preview sizes. This is the\r\n        // minimum difference between view and camera height.\r\n        double minDiff = Double.MAX_VALUE;\r\n\r\n        // Target view height\r\n        int targetHeight = h;\r\n\r\n        // Try to find a preview size that matches aspect ratio and the target view size.\r\n        // Iterate over all available sizes and pick the largest size that can fit in the view and\r\n        // still maintain the aspect ratio.\r\n        for (Camera.Size size : sizes) {\r\n            double ratio = (double) size.width / size.height;\r\n            if (Math.abs(ratio - targetRatio) > ASPECT_TOLERANCE)\r\n                continue;\r\n            if (Math.abs(size.height - targetHeight) < minDiff) {\r\n                optimalSize = size;\r\n                minDiff = Math.abs(size.height - targetHeight);\r\n            }\r\n        }\r\n\r\n        // Cannot find preview size that matches the aspect ratio, ignore the requirement\r\n        if (optimalSize == null) {\r\n            minDiff = Double.MAX_VALUE;\r\n            for (Camera.Size size : sizes) {\r\n                if (Math.abs(size.height - targetHeight) < minDiff) {\r\n                    optimalSize = size;\r\n                    minDiff = Math.abs(size.height - targetHeight);\r\n                }\r\n            }\r\n        }\r\n        return optimalSize;\r\n    }\r\n\r\n    /**\r\n     * @return the default camera on the device. Return null if there is no camera on the device.\r\n     */\r\n    public static Camera getDefaultCameraInstance() {\r\n        return Camera.open();\r\n    }\r\n\r\n\r\n    /**\r\n     * @return the default rear/back facing camera on the device. Returns null if camera is not\r\n     * available.\r\n     */\r\n    public static Camera getDefaultBackFacingCameraInstance() {\r\n        return getDefaultCamera(Camera.CameraInfo.CAMERA_FACING_BACK);\r\n    }\r\n\r\n    /**\r\n     * @return the default front facing camera on the device. Returns null if camera is not\r\n     * available.\r\n     */\r\n    public static Camera getDefaultFrontFacingCameraInstance() {\r\n        return getDefaultCamera(Camera.CameraInfo.CAMERA_FACING_FRONT);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param position Physical position of the camera i.e Camera.CameraInfo.CAMERA_FACING_FRONT\r\n     *                 or Camera.CameraInfo.CAMERA_FACING_BACK.\r\n     * @return the default camera on the device. Returns null if camera is not available.\r\n     */\r\n    @TargetApi(Build.VERSION_CODES.GINGERBREAD)\r\n    private static Camera getDefaultCamera(int position) {\r\n        // Find the total number of cameras available\r\n        int  mNumberOfCameras = Camera.getNumberOfCameras();\r\n\r\n        // Find the ID of the back-facing ("default") camera\r\n        Camera.CameraInfo cameraInfo = new Camera.CameraInfo();\r\n        for (int i = 0; i < mNumberOfCameras; i++) {\r\n            Camera.getCameraInfo(i, cameraInfo);\r\n            if (cameraInfo.facing == position) {\r\n                return Camera.open(i);\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Creates a media file in the {@code Environment.DIRECTORY_PICTURES} directory. The directory\r\n     * is persistent and available to other applications like gallery.\r\n     *\r\n     * @param type Media type. Can be video or image.\r\n     * @return A file object pointing to the newly created file.\r\n     */\r\n    public  static File getOutputMediaFile(int type){\r\n        // To be safe, you should check that the SDCard is mounted\r\n        // using Environment.getExternalStorageState() before doing this.\r\n        if (!Environment.getExternalStorageState().equalsIgnoreCase(Environment.MEDIA_MOUNTED)) {\r\n            return  null;\r\n        }\r\n\r\n        File mediaStorageDir = new File(Environment.getExternalStoragePublicDirectory(\r\n                Environment.DIRECTORY_PICTURES), "CameraSample");\r\n        // This location works best if you want the created images to be shared\r\n        // between applications and persist after your app has been uninstalled.\r\n\r\n        // Create the storage directory if it does not exist\r\n        if (! mediaStorageDir.exists()){\r\n            if (! mediaStorageDir.mkdirs()) {\r\n                Log.d("CameraSample", "failed to create directory");\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Create a media file name\r\n        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());\r\n        File mediaFile;\r\n        if (type == MEDIA_TYPE_IMAGE){\r\n            mediaFile = new File(mediaStorageDir.getPath() + File.separator +\r\n                    "IMG_"+ timeStamp + ".jpg");\r\n        } else if(type == MEDIA_TYPE_VIDEO) {\r\n            mediaFile = new File(mediaStorageDir.getPath() + File.separator +\r\n                    "VID_"+ timeStamp + ".mp4");\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n        return mediaFile;\r\n    }\r\n\r\n}\r\n\r\n\r\n// JAVA\r\n\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n	private Camera mCamera;\r\n	private TextureView mPreview;\r\n	private MediaRecorder mMediaRecorder;\r\n\r\n	private boolean isRecording = false;\r\n	private static final String TAG = "Recorder";\r\n	private Button captureButton;\r\n\r\n	private String outputFile;\r\n\r\n	@Override\r\n	protected void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n        //\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n                WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\r\n        //\r\n\r\n		setContentView(R.layout.sample_main);\r\n\r\n		mPreview = (TextureView) findViewById(R.id.surface_view);\r\n		captureButton = (Button) findViewById(R.id.button_capture);\r\n	}\r\n\r\n	public void onCaptureClick(View view) {\r\n		if (isRecording) {\r\n			mMediaRecorder.stop();\r\n            //not here mMediaRecorder.setOrientationHint(90);\r\n            // change to this in manifest ? android:screenOrientation="landscape"\r\n			releaseMediaRecorder();\r\n			mCamera.lock(); // take camera access back from MediaRecorder\r\n			setCaptureButtonText("Capture");\r\n			isRecording = false;\r\n			releaseCamera();\r\n\r\n		} else {\r\n\r\n			new MediaPrepareTask().execute(null, null, null);\r\n\r\n		}\r\n	}\r\n\r\n	public void onPlayClick(View view) {\r\n		Uri uri = Uri.parse(outputFile);\r\n		VideoView mVideoView = (VideoView) findViewById(R.id.videoView);\r\n		mVideoView.setMediaController(new MediaController(this));\r\n		mVideoView.setVideoURI(uri);\r\n		mVideoView.requestFocus();\r\n		mVideoView.start();\r\n	}\r\n\r\n	private void setCaptureButtonText(String title) {\r\n		captureButton.setText(title);\r\n	}\r\n\r\n	@Override\r\n	protected void onPause() {\r\n		super.onPause();\r\n		releaseMediaRecorder();// if we are using MediaRecorder, release it first\r\n		releaseCamera();// release the camera immediately on pause event\r\n	}\r\n\r\n	private void releaseMediaRecorder() {\r\n		if (mMediaRecorder != null) {\r\n			mMediaRecorder.reset();\r\n			mMediaRecorder.release();\r\n			mMediaRecorder = null;\r\n			// Lock camera for later use i.e taking it back from MediaRecorder.\r\n			// MediaRecorder does not need it anymore and we will release it if the activity pauses.\r\n			mCamera.lock();\r\n		}\r\n	}\r\n\r\n	private void releaseCamera() {\r\n		if (mCamera != null) {\r\n			// release the camera for other applications\r\n			mCamera.release();\r\n			mCamera = null;\r\n		}\r\n	}\r\n\r\n	@TargetApi(Build.VERSION_CODES.HONEYCOMB)\r\n	private boolean prepareVideoRecorder() {\r\n		mCamera = CameraHelper.getDefaultCameraInstance();\r\n		// We need to make sure that our preview and recording video size are supported by the\r\n		// camera. Query camera to find all the sizes and choose the optimal size given the\r\n		// dimensions of our preview surface.\r\n		Camera.Parameters parameters = mCamera.getParameters();\r\n		List<Camera.Size> mSupportedPreviewSizes = parameters.getSupportedPreviewSizes();\r\n		Camera.Size optimalSize = CameraHelper.getOptimalPreviewSize(mSupportedPreviewSizes, mPreview.getWidth(), mPreview.getHeight());\r\n		// Use the same size for recording profile.\r\n		CamcorderProfile profile = CamcorderProfile.get(CamcorderProfile.QUALITY_HIGH);\r\n		profile.videoFrameWidth = optimalSize.width;\r\n		profile.videoFrameHeight = optimalSize.height;\r\n		// likewise for the camera object itself.\r\n		parameters.setPreviewSize(profile.videoFrameWidth, profile.videoFrameHeight);\r\n		mCamera.setParameters(parameters);\r\n		try {\r\n			mCamera.setPreviewTexture(mPreview.getSurfaceTexture());\r\n		}\r\n		catch (IOException e) {\r\n			Log.e(TAG, "Surface texture is unavailable or unsuitable" + e.getMessage());\r\n			return false;\r\n		}\r\n\r\n		mMediaRecorder = new MediaRecorder();\r\n		mCamera.unlock();\r\n       // causes a crash !? mCamera.setDisplayOrientation(90);\r\n\r\n		mMediaRecorder.setCamera(mCamera);\r\n\r\n        //NOT HERE->\r\n        //\r\n        //mMediaRecorder.setOrientationHint(90);\r\n		mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.DEFAULT);\r\n		mMediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);\r\n        //mMediaRecorder.setOrientationHint(90);\r\n\r\n		mMediaRecorder.setProfile(profile);\r\n		mMediaRecorder.setOutputFile(CameraHelper.getOutputMediaFile(CameraHelper.MEDIA_TYPE_VIDEO).toString());\r\n		Log.d("DEBUG: mMediaRecorder.setOutputFile ", CameraHelper.getOutputMediaFile(CameraHelper.MEDIA_TYPE_VIDEO).toString());\r\n		outputFile = CameraHelper.getOutputMediaFile(CameraHelper.MEDIA_TYPE_VIDEO).toString();\r\n		try {\r\n			mMediaRecorder.prepare();\r\n		}\r\n		catch (IllegalStateException e) {\r\n			Log.d(TAG, "IllegalStateException preparing MediaRecorder: " + e.getMessage());\r\n			releaseMediaRecorder();\r\n			return false;\r\n		}\r\n		catch (IOException e) {\r\n			Log.d(TAG, "IOException preparing MediaRecorder: " + e.getMessage());\r\n			releaseMediaRecorder();\r\n			return false;\r\n		}\r\n		return true;\r\n	}\r\n\r\n	/**\r\n	 * Asynchronous task for preparing the {@link android.media.MediaRecorder} since it is a long blocking operation.\r\n	 */\r\n	class MediaPrepareTask extends AsyncTask<Void, Void, Boolean> {\r\n		@Override\r\n		protected Boolean doInBackground(Void... voids) {\r\n			if (prepareVideoRecorder()) {\r\n				mMediaRecorder.start();\r\n                //NOT HERE mMediaRecorder.setOrientationHint(90);\r\n				isRecording = true;\r\n			} else {\r\n				releaseMediaRecorder();\r\n				return false;\r\n			}\r\n			return true;\r\n		}\r\n\r\n		@Override\r\n		protected void onPostExecute(Boolean result) {\r\n			if (!result) {\r\n				MainActivity.this.finish();\r\n			}\r\n			setCaptureButtonText("Stop");\r\n		}\r\n	}\r\n\r\n}\r\n\r\n', '2014-03-03 16:27:33'),
(72, ' android', 'PopUpX', ' //popupX\r\n\r\n//XML\r\n<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:id="@+id/container"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    tools:context="com.example.areyousurex.MainActivity"\r\n    tools:ignore="MergeRootFrame" >\r\n\r\n    <Button\r\n        android:layout_width="wrap_content"\r\n        android:layout_height="wrap_content"\r\n        android:text="Delete"\r\n        android:id="@+id/mBtnDelete"\r\n        android:layout_gravity="left|top" />\r\n</FrameLayout>\r\n\r\n\r\n// JAVA : main activity\r\n\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport utility.CancelOnClickListener;\r\n\r\npublic class MainActivity extends Activity implements View.OnClickListener {\r\n\r\n	Button mBtnDelete;\r\n\r\n	@Override\r\n	protected void onCreate(Bundle savedInstanceState) {\r\n		super.onCreate(savedInstanceState);\r\n		setContentView(R.layout.activity_main);\r\n		mBtnDelete = (Button) findViewById(R.id.mBtnDelete);\r\n		mBtnDelete.setOnClickListener((View.OnClickListener) this);\r\n\r\n	}\r\n\r\n	/**\r\n	 * This method is to confirm the users intention of deleting a record.\r\n	 */\r\n	public void areYouSureDialog() {\r\n		AlertDialog.Builder areYouSureDialog = new AlertDialog.Builder(MainActivity.this);\r\n		areYouSureDialog.setTitle("Delete Item");\r\n		areYouSureDialog.setMessage("Are you sure you want to delete this item?");\r\n		areYouSureDialog.setCancelable(true);\r\n		areYouSureDialog.setPositiveButton("Yes", new DialogInterface.OnClickListener() {\r\n			public void onClick(DialogInterface dialog, int which) {\r\n				deleteItem();\r\n			}\r\n		});\r\n		areYouSureDialog.setNegativeButton("No", new CancelOnClickListener(MainActivity.this));\r\n		areYouSureDialog.show();\r\n	}\r\n\r\n	public void deleteItem() {\r\n		Log.d("DEBUG", "There is nothing to delete");\r\n	}\r\n\r\n	@Override\r\n	public void onClick(View v) {\r\n		areYouSureDialog();\r\n	}\r\n}\r\n\r\n\r\n// JAVA : UTILITY CLASSES\r\n// JAVA AreYouSureDialog\r\n\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\n\r\nimport com.example.areyousurex.MainActivity;\r\n\r\n/**\r\n * Created by BForte on 2/6/14.\r\n */\r\npublic class AreYouSureDialog extends AlertDialog.Builder {\r\n\r\n    private Context context;\r\n    private AlertDialog.Builder areYouSureDialog;\r\n\r\n    public AreYouSureDialog(Context context) {\r\n        super(context);\r\n        areYouSureDialog = new AlertDialog.Builder(context);\r\n        areYouSureDialog.setTitle("Delete Item");\r\n        areYouSureDialog.setMessage("Are you sure you want to delete this item?");\r\n        areYouSureDialog.setCancelable(true);\r\n        areYouSureDialog.setPositiveButton("Yes", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                new MainActivity().deleteItem();\r\n            }\r\n        });\r\n        areYouSureDialog.setNegativeButton("No", new CancelOnClickListener(context));\r\n        areYouSureDialog.show();\r\n    }\r\n}\r\n\r\n\r\n// JAVA : CancelOnClickListener :\r\n\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.widget.Toast;\r\n\r\n/**\r\n * Created by BForte on 2/6/14.\r\n */\r\npublic class CancelOnClickListener implements DialogInterface.OnClickListener {\r\n	private Context context;\r\n	private String message;\r\n\r\n    public CancelOnClickListener(Context context) {\r\n        this.context = context;\r\n         this.message = "continue";\r\n    }\r\n\r\n	public CancelOnClickListener(Context context, String message) {\r\n		this.context = context;\r\n		this.message = message;\r\n	}\r\n\r\n	public void onClick(DialogInterface dialog, int which) {\r\n		Toast.makeText(context, message, Toast.LENGTH_LONG).show();\r\n	}\r\n}\r\n\r\n\r\n', '2014-03-03 16:30:40'),
(73, ' iOS', ' TwilioX', ' \r\n// Twilio\r\n\r\n// APP SET UP\r\n\r\n-Add the static libraries (files ending in .a) in the ${TWILIO_CLIENT_HOME}/Libraries/ folder to your project.\r\n-Add the ${TWILIO_CLIENT_HOME}/Headers/ folder to "Header Search Paths" in your target''s Build Settings.\r\n\r\nAdd the following iOS SDK frameworks to your project:\r\n-AudioToolbox.framework\r\n-AVFoundation.framework\r\n-CFNetwork.framework\r\n-SystemConfiguration.framework\r\n\r\nAdd -ObjC -all_load to "Other Linker Flags" in your target''s Build Settings.\r\n\r\n\r\n// appdelegate.h\r\n\r\n@class TwilioObject;\r\n\r\n@interface FBFAppDelegate : UIResponder <UIApplicationDelegate>\r\n{\r\n\r\n	TwilioObject *_twilioObject;\r\n}\r\n\r\n@property (nonatomic, retain) TwilioObject *twilioObject;\r\n\r\n@end\r\n\r\n\r\n// appdelegate.m\r\n#import "TwilioObject.h"\r\n\r\n@synthesize twilioObject = _twilioObject;\r\n\r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\r\n	self.twilioObject = [[TwilioObject alloc] init];\r\n	return YES;\r\n}\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import "AppDelegate.h"\r\n#import "TwilioObject.h"\r\n\r\n@interface ViewController : UIViewController\r\n{\r\n	UIButton *_dialButton;\r\n	UIButton *_hangupButton;\r\n	UITextField *_numberField;\r\n    NSString * _recordedFile;\r\n}\r\n\r\n@property (nonatomic, retain) IBOutlet UIButton *dialButton;\r\n@property (nonatomic, retain) IBOutlet UIButton *hangupButton;\r\n@property (nonatomic, retain) IBOutlet UITextField *numberField;\r\n@property (nonatomic, retain) IBOutlet NSString *recordedFile;\r\n\r\n- (IBAction)dialButtonPressed:(id)sender;\r\n- (IBAction)hangupButtonPressed:(id)sender;\r\n\r\n@end\r\n\r\n\r\n// VC.m\r\n\r\n#import "ViewController.h"\r\n\r\n@interface ViewController ()\r\n\r\n@end\r\n\r\n@implementation ViewController\r\n\r\n@synthesize dialButton = _dialButton;\r\n@synthesize hangupButton = _hangupButton;\r\n@synthesize numberField = _numberField;\r\n@synthesize recordedFile = _recordedFile;\r\n\r\n\r\n- (void)viewDidUnload {\r\n	self.dialButton = nil;\r\n	self.hangupButton = nil;\r\n	self.numberField = nil;\r\n    \r\n	[super viewDidUnload];\r\n}\r\n\r\n- (IBAction)dialButtonPressed:(id)sender {\r\n	FBFAppDelegate *appDelegate = (FBFAppDelegate *)[UIApplication sharedApplication].delegate;\r\n	TwilioObject *twilioObject = appDelegate.twilioObject;\r\n	// THIS WORKS:: [twilioObject connect:self.numberField.text];\r\n    [twilioObject ticket:self.numberField.text recordingFilePath:@"http://www.villagegeek.com/downloads/webwavs/affirmative.wav"];\r\n}\r\n\r\n- (IBAction)hangupButtonPressed:(id)sender {\r\n	FBFAppDelegate *appDelegate = (FBFAppDelegate *)[UIApplication sharedApplication].delegate;\r\n	TwilioObject *twilioObject = appDelegate.twilioObject;\r\n	[twilioObject disconnect];\r\n}\r\n\r\n\r\n@end\r\n\r\n\r\n// SERVER SIDE:\r\ngo to your downloaded twilio > Helper Libs > php > Services\r\ninstall Services direcory on your server\r\n\r\n\r\n// PHP auth.php\r\n<?php\r\n    \r\n    include "Services/Twilio/Capability.php";\r\n    \r\n    $accountSid = "AC287f34fb31874ee272ef858fa1636721";\r\n    //account SID\r\n    $authToken = "f9ce6a206bf5ba343e87051f846d4563";\r\n    // TOKEN\r\n    // The app outgoing connections will use:\r\n    $appSid = "AP0abf58d924997f07e4f34a02ead19bde";\r\n    // the app id created in twilio.\r\n    \r\n    // The client name for incoming connections:\r\n    $clientName = "monkey";\r\n    \r\n    $capability = new Services_Twilio_Capability($accountSid, $authToken);\r\n    \r\n    // This allows incoming connections as $clientName:\r\n    $capability -> allowClientIncoming($clientName);\r\n    \r\n    // This allows outgoing connections to $appSid with the "From"\r\n    // parameter being the value of $clientName\r\n    $capability -> allowClientOutgoing($appSid, array(), $clientName);\r\n    \r\n    // This returns a token to use with Twilio based on\r\n    // the account and capabilities defined above\r\n    $token = $capability -> generateToken();\r\n    echo $token;\r\n    ?>\r\n    \r\n\r\n// PHP hello-client-monkey-twiml.php\r\n<?php header(''Content-type: text/xml'');\r\n    // put a phone number you''ve verified with Twilio to use as a caller ID number:w\r\n    // the  Twilio  phone number associated with app\r\n    $callerId = "5022526231";\r\n    ?>\r\n\r\n<!-- DIAL NUMBER\r\n<Response>\r\n<Dial callerId="<?php echo $callerId ?>">\r\n<Number><?php echo $_REQUEST["PhoneNumber"]; ?></Number>\r\n</Dial>\r\n</Response>\r\n\r\n-->\r\n\r\n<!-- Say Zendesk Ticket Number -->\r\n<Response>\r\n<Say voice="woman" language="en-US">ZenDesk Ticket Number <?php echo $_REQUEST["TicketNumber"]; ?></Say>\r\n<Play><?php echo $_REQUEST["RecordedFile"]; ?></Play> <!-- -->\r\n</Response>\r\n\r\n\r\n\r\n//  GENERAL INFO\r\n\r\nMy Personal Twilio Trial Account\r\n\r\nhttps://www.twilio.com/user/account\r\n personal twilio info:\r\n account sid: AC287f34fb31874ee272ef858fa1636721\r\n token: f9ce6a206bf5ba343e87051f846d4563\r\n app sid: AP0abf58d924997f07e4f34a02ead19bde\r\n phone #: 502 252 6231\r\n', '2014-03-05 14:44:11');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(74, ' iOS', ' AudioX', ' AudioX\r\n\r\n// frameworks\r\nAVFoundation\r\nCoreAudio\r\nAudioToolbox\r\nQuRTZCORE?\r\n\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import <AVFoundation/AVFoundation.h>\r\n\r\n@interface FBFViewController : UIViewController<UIGestureRecognizerDelegate>\r\n{\r\nAVAudioPlayer *audioPlayer;\r\nAVAudioRecorder *audioRecorder;\r\nint recordEncoding;\r\nenum\r\n{\r\n    ENC_AAC = 1,\r\n    ENC_ALAC = 2,\r\n    ENC_IMA4 = 3,\r\n    ENC_ILBC = 4,\r\n    ENC_ULAW = 5,\r\n    ENC_PCM = 6,\r\n} encodingTypes;\r\n\r\nfloat Pitch;\r\nNSTimer *timerForPitch;\r\n}\r\n\r\n \r\n@property (weak, nonatomic) IBOutlet UIButton *touchbutton;\r\n@property (weak, nonatomic) IBOutlet UIView *viewForWave;\r\n\r\n@property (nonatomic) CFTimeInterval firstTimestamp;\r\n@property (nonatomic, strong) CAShapeLayer *shapeLayer;\r\n@property (nonatomic, strong) CADisplayLink *displayLink;\r\n@property (nonatomic, strong) IBOutlet UILabel *statusLabel;\r\n@property (nonatomic) NSUInteger loopCount;\r\n-(IBAction) startRecording;\r\n-(IBAction) stopRecording;\r\n-(IBAction) playRecording;\r\n-(IBAction) stopPlaying;\r\n@end\r\n\r\n\r\n// VC.m\r\n\r\n\r\n\r\n#import "FBFViewController.h"\r\n\r\n#import <ImageIO/ImageIO.h>\r\n#import <MobileCoreServices/MobileCoreServices.h>\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n    UILongPressGestureRecognizer *gesture = [[UILongPressGestureRecognizer alloc]\r\n                                             initWithTarget:self\r\n                                             action:@selector(myButtonLongPressed:)];\r\n    gesture.minimumPressDuration =0;\r\n    [self.touchbutton addGestureRecognizer:gesture];\r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n\r\n\r\n- (void)addShapeLayer\r\n{\r\n    self.shapeLayer = [CAShapeLayer layer];\r\n    self.shapeLayer.path = [[self pathAtInterval:2.0] CGPath];\r\n    self.shapeLayer.fillColor = [[UIColor redColor] CGColor];\r\n    self.shapeLayer.lineWidth = 1.0;\r\n    self.shapeLayer.strokeColor = [[UIColor whiteColor] CGColor];\r\n    [self.viewForWave.layer addSublayer:self.shapeLayer];\r\n}\r\n\r\n- (void)startDisplayLink\r\n{\r\n    self.displayLink = [CADisplayLink displayLinkWithTarget:self selector:@selector(handleDisplayLink:)];\r\n    [self.displayLink addToRunLoop:[NSRunLoop currentRunLoop] forMode:NSDefaultRunLoopMode];\r\n}\r\n\r\n- (void)stopDisplayLink\r\n{\r\n    [self.displayLink invalidate];\r\n    self.displayLink = nil;\r\n    \r\n}\r\n\r\n- (void)handleDisplayLink:(CADisplayLink *)displayLink\r\n{\r\n    if (!self.firstTimestamp)\r\n        self.firstTimestamp = displayLink.timestamp;\r\n    \r\n    self.loopCount++;\r\n    \r\n    NSTimeInterval elapsed = (displayLink.timestamp - self.firstTimestamp);\r\n    \r\n    self.shapeLayer.path = [[self pathAtInterval:elapsed] CGPath];\r\n    \r\n    //    if (elapsed >= kSeconds)\r\n    //    {\r\n    //       // [self stopDisplayLink];\r\n    //        self.shapeLayer.path = [[self pathAtInterval:0] CGPath];\r\n    //\r\n    //        self.statusLabel.text = [NSString stringWithFormat:@"loopCount = %.1f frames/sec", self.loopCount / kSeconds];\r\n    //    }\r\n}\r\n\r\n- (UIBezierPath *)pathAtInterval:(NSTimeInterval) interval\r\n{\r\n    UIBezierPath *path = [UIBezierPath bezierPath];\r\n    \r\n    [path moveToPoint:CGPointMake(0, self.viewForWave.bounds.size.height / 2.0)];\r\n    \r\n    CGFloat fractionOfSecond = interval - floor(interval);\r\n    \r\n    CGFloat yOffset = self.viewForWave.bounds.size.height * sin(fractionOfSecond * M_PI * Pitch*8);\r\n    \r\n    [path addCurveToPoint:CGPointMake(self.viewForWave.bounds.size.width, self.viewForWave.bounds.size.height / 2.0)\r\n            controlPoint1:CGPointMake(self.viewForWave.bounds.size.width / 2.0, self.viewForWave.bounds.size.height / 2.0 - yOffset)\r\n            controlPoint2:CGPointMake(self.viewForWave.bounds.size.width / 2.0, self.viewForWave.bounds.size.height / 2.0 + yOffset)];\r\n    \r\n    return path;\r\n}\r\n\r\n- (void) myButtonLongPressed:(UILongPressGestureRecognizer *)gesture\r\n{\r\n    if (gesture.state == UIGestureRecognizerStateBegan) {\r\n        NSLog(@"Touch down");\r\n        \r\n        [self.touchbutton setBackgroundImage:[UIImage imageNamed:@"listing_done_btn~iphone.png"] forState:UIControlStateNormal];\r\n        [self startRecording];\r\n        \r\n    }\r\n    if (gesture.state == UIGestureRecognizerStateEnded) {\r\n        \r\n        NSLog(@"Long press Ended");\r\n        [self stopRecording];\r\n        [self.touchbutton setBackgroundImage:[UIImage imageNamed:@""] forState:UIControlStateNormal];\r\n    }\r\n    \r\n}\r\n\r\n-(IBAction) startRecording\r\n{\r\n    self.viewForWave.hidden = NO;\r\n    [self addShapeLayer];\r\n    [self startDisplayLink];\r\n    // kSeconds = 150.0;\r\n    NSLog(@"startRecording");\r\n    audioRecorder = nil;\r\n    AVAudioSession *audioSession = [AVAudioSession sharedInstance];\r\n    [audioSession setCategory:AVAudioSessionCategoryRecord error:nil];\r\n    \r\n    \r\n    NSMutableDictionary *recordSettings = [[NSMutableDictionary alloc] initWithCapacity:10];\r\n    if(recordEncoding == ENC_PCM)\r\n    {\r\n        [recordSettings setObject:[NSNumber numberWithInt: kAudioFormatLinearPCM] forKey: AVFormatIDKey];\r\n        [recordSettings setObject:[NSNumber numberWithFloat:44100.0] forKey: AVSampleRateKey];\r\n        [recordSettings setObject:[NSNumber numberWithInt:2] forKey:AVNumberOfChannelsKey];\r\n        [recordSettings setObject:[NSNumber numberWithInt:16] forKey:AVLinearPCMBitDepthKey];\r\n        [recordSettings setObject:[NSNumber numberWithBool:NO] forKey:AVLinearPCMIsBigEndianKey];\r\n        [recordSettings setObject:[NSNumber numberWithBool:NO] forKey:AVLinearPCMIsFloatKey];\r\n    }\r\n    else\r\n    {\r\n        NSNumber *formatObject;\r\n        \r\n        switch (recordEncoding) {\r\n            case (ENC_AAC):\r\n                formatObject = [NSNumber numberWithInt: kAudioFormatMPEG4AAC];\r\n                break;\r\n            case (ENC_ALAC):\r\n                formatObject = [NSNumber numberWithInt: kAudioFormatAppleLossless];\r\n                break;\r\n            case (ENC_IMA4):\r\n                formatObject = [NSNumber numberWithInt: kAudioFormatAppleIMA4];\r\n                break;\r\n            case (ENC_ILBC):\r\n                formatObject = [NSNumber numberWithInt: kAudioFormatiLBC];\r\n                break;\r\n            case (ENC_ULAW):\r\n                formatObject = [NSNumber numberWithInt: kAudioFormatULaw];\r\n                break;\r\n            default:\r\n                formatObject = [NSNumber numberWithInt: kAudioFormatAppleIMA4];\r\n        }\r\n        \r\n        [recordSettings setObject:formatObject forKey: AVFormatIDKey];\r\n        [recordSettings setObject:[NSNumber numberWithFloat:44100.0] forKey: AVSampleRateKey];\r\n        [recordSettings setObject:[NSNumber numberWithInt:2] forKey:AVNumberOfChannelsKey];\r\n        [recordSettings setObject:[NSNumber numberWithInt:12800] forKey:AVEncoderBitRateKey];\r\n        [recordSettings setObject:[NSNumber numberWithInt:16] forKey:AVLinearPCMBitDepthKey];\r\n        [recordSettings setObject:[NSNumber numberWithInt: AVAudioQualityHigh] forKey: AVEncoderAudioQualityKey];\r\n    }\r\n    \r\n    //    NSURL *url = [NSURL fileURLWithPath:[NSString stringWithFormat:@"%@/recordTest.caf", [[NSBundle mainBundle] resourcePath]]];\r\n    NSArray *dirPaths = NSSearchPathForDirectoriesInDomains(\r\n                                                            NSDocumentDirectory, NSUserDomainMask, YES);\r\n    NSString *docsDir = [dirPaths objectAtIndex:0];\r\n    NSString *soundFilePath = [docsDir\r\n                               stringByAppendingPathComponent:@"recordTest.caf"];\r\n    \r\n    NSURL *url = [NSURL fileURLWithPath:soundFilePath];\r\n    \r\n    \r\n    NSError *error = nil;\r\n    audioRecorder = [[ AVAudioRecorder alloc] initWithURL:url settings:recordSettings error:&error];\r\n    audioRecorder.meteringEnabled = YES;\r\n    if ([audioRecorder prepareToRecord] == YES){\r\n        audioRecorder.meteringEnabled = YES;\r\n        [audioRecorder record];\r\n        timerForPitch =[NSTimer scheduledTimerWithTimeInterval: 0.01 target: self selector: @selector(levelTimerCallback:) userInfo: nil repeats: YES];\r\n    }else {\r\n        int errorCode = CFSwapInt32HostToBig ([error code]);\r\n        NSLog(@"Error: %@ [%4.4s])" , [error localizedDescription], (char*)&errorCode);\r\n        \r\n    }\r\n    \r\n}\r\n\r\n- (void)levelTimerCallback:(NSTimer *)timer {\r\n	[audioRecorder updateMeters];\r\n	NSLog(@"Average input: %f Peak input: %f", [audioRecorder averagePowerForChannel:0], [audioRecorder peakPowerForChannel:0]);\r\n    \r\n    float linear = pow (10, [audioRecorder peakPowerForChannel:0] / 20);\r\n    NSLog(@"linear===%f",linear);\r\n    float linear1 = pow (10, [audioRecorder averagePowerForChannel:0] / 20);\r\n    NSLog(@"linear1===%f",linear1);\r\n    if (linear1>0.03) {\r\n        \r\n        Pitch = linear1+.20;//pow (10, [audioRecorder averagePowerForChannel:0] / 20);//[audioRecorder peakPowerForChannel:0];\r\n    }\r\n    else {\r\n        \r\n        Pitch = 0.0;\r\n    }\r\n    //Pitch =linear1;\r\n    NSLog(@"Pitch==%f",Pitch);\r\n   // _customRangeBar.value = Pitch;//linear1+.30;\r\n    \r\n    float minutes = floor(audioRecorder.currentTime/60);\r\n    float seconds = audioRecorder.currentTime - (minutes * 60);\r\n    \r\n    NSString *time = [NSString stringWithFormat:@"%0.0f.%0.0f",minutes, seconds];\r\n    [self.statusLabel setText:[NSString stringWithFormat:@"%@ sec", time]];\r\n    NSLog(@"recording");\r\n    \r\n}\r\n-(IBAction) stopRecording\r\n{\r\n    NSLog(@"stopRecording");\r\n    // kSeconds = 0.0;\r\n    self.viewForWave.hidden = YES;\r\n    [audioRecorder stop];\r\n    NSLog(@"stopped");\r\n    [self stopDisplayLink];\r\n    self.shapeLayer.path = [[self pathAtInterval:0] CGPath];\r\n    [timerForPitch invalidate];\r\n    timerForPitch = nil;\r\n   // _customRangeBar.value = 0.0;\r\n}\r\n\r\n-(IBAction) playRecording\r\n{\r\n    NSLog(@"playRecording");\r\n    // Init audio with playback capability\r\n    AVAudioSession *audioSession = [AVAudioSession sharedInstance];\r\n    [audioSession setCategory:AVAudioSessionCategoryPlayback error:nil];\r\n    NSArray *dirPaths = NSSearchPathForDirectoriesInDomains(\r\n                                                            NSDocumentDirectory, NSUserDomainMask, YES);\r\n    NSString *docsDir = [dirPaths objectAtIndex:0];\r\n    NSString *soundFilePath = [docsDir\r\n                               stringByAppendingPathComponent:@"recordTest.caf"];\r\n    \r\n    NSURL *url = [NSURL fileURLWithPath:soundFilePath];\r\n    \r\n    // NSURL *url = [NSURL fileURLWithPath:[NSString stringWithFormat:@"%@/recordTest.caf", [[NSBundle mainBundle] resourcePath]]];\r\n    NSError *error;\r\n    audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:url error:&error];\r\n    audioPlayer.numberOfLoops = 0;\r\n    [audioPlayer play];\r\n    NSLog(@"playing");\r\n}\r\n\r\n-(IBAction) stopPlaying\r\n{\r\n    NSLog(@"stopPlaying");\r\n    [audioPlayer stop];\r\n    NSLog(@"stopped");\r\n    \r\n}\r\n\r\n\r\n\r\n@end\r\n', '2014-03-05 16:50:38'),
(75, ' iOS', ' APIX', ' // FRAMEWORKS\r\nSystemConfiguration\r\n\r\n\r\n// AsyncNetwork.h ( JSON )\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface AsyncNetwork : NSObject <NSURLConnectionDelegate, NSURLConnectionDataDelegate>\r\n\r\n\r\n- (void)load:(NSString *)baseURL withSearchTerm :(NSString *)searchTerm;\r\n- (NSMutableArray *)parseResponseData:(NSMutableData *)mutableResponseData;\r\n@end\r\n\r\n\r\n// AsyncNetwork.m ( JSON )\r\n\r\n\r\n#import "AsyncNetwork.h"\r\n#import "Constants.h"\r\n#import "MusicModel.h"\r\n\r\n@interface AsyncNetwork () {\r\n	NSURLConnection *connection;\r\n	NSMutableData *responseData;\r\n}\r\n\r\n@property (nonatomic, retain) NSMutableData *responseData;\r\n@property (nonatomic, retain) NSURLConnection *connection;\r\n@property (nonatomic) int spaceIndex;\r\n\r\n@end\r\n\r\n@implementation AsyncNetwork\r\n@synthesize connection, responseData, spaceIndex;\r\n\r\n- (void)load:(NSString *)baseURL withSearchTerm :(NSString *)searchTerm {\r\n	searchTerm = [searchTerm stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\r\n	searchTerm = [searchTerm stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];\r\n\r\n	NSURL *myURL = [NSURL URLWithString:[NSString stringWithFormat:baseURL, searchTerm]];\r\n	NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:myURL cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:60];\r\n	connection = [[NSURLConnection alloc] initWithRequest:request delegate:self];\r\n}\r\n\r\n#pragma mark - NSURL Delegate Methods\r\n\r\n- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response {\r\n	responseData = [[NSMutableData alloc] init];\r\n}\r\n\r\n- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {\r\n	[responseData appendData:data];\r\n}\r\n\r\n- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error {\r\n	[[NSNotificationCenter defaultCenter] postNotificationName:kNotifyFail object:nil];\r\n}\r\n\r\n- (void)connectionDidFinishLoading:(NSURLConnection *)connection {\r\n	if (responseData != nil) {\r\n		[self parseResponseData:responseData];\r\n	}\r\n	else {\r\n		[[NSNotificationCenter defaultCenter] postNotificationName:kNotifyFail object:nil];\r\n	}\r\n}\r\n\r\n#pragma mark - Parse Dictionary\r\n /**\r\n  This method parses the json response as NSMutableData, then creates and sends a dictionary\r\n  back with the notification if successful.\r\n  */\r\n\r\n- (NSMutableArray *)parseResponseData:(NSMutableData *)mutableResponseData {\r\n    //note: This method returns an array for the sake of a unit test.\r\n    NSMutableArray *localArrayOfMusicModels = [[NSMutableArray alloc] init];\r\n	@try {\r\n		NSError *e;\r\n		NSDictionary *dictionaryOfJsonFromResponseData =\r\n		    [NSJSONSerialization JSONObjectWithData:mutableResponseData\r\n		                                    options:NSJSONReadingMutableContainers\r\n		                                      error:&e];\r\n\r\n		NSMutableArray *arrayOfAlbums = dictionaryOfJsonFromResponseData[@"albums"];\r\n\r\n		\r\n\r\n		for (NSDictionary *dict in arrayOfAlbums) {\r\n			MusicModel *musicModel = [[MusicModel alloc] initWithJsonDictionary:dict];\r\n			[localArrayOfMusicModels addObject:musicModel];\r\n		}\r\n\r\n		NSDictionary *dictionaryOfMusicModels = @{ kArrayOfMusicModels : localArrayOfMusicModels };\r\n\r\n		[[NSNotificationCenter defaultCenter] postNotificationName:kNotifySuccess object:self userInfo:dictionaryOfMusicModels];\r\n	}\r\n	@catch (NSException *exception)\r\n	{\r\n		[[NSNotificationCenter defaultCenter] postNotificationName:kNotifyFail object:nil];\r\n	}\r\n    return localArrayOfMusicModels;\r\n}\r\n\r\n@end\r\n\r\n\r\n// AsyncXMLNetwork.h\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface AsyncXMLNetwork : NSObject <NSURLConnectionDelegate, NSURLConnectionDataDelegate>\r\n\r\n- (void)load:(NSString *)baseURL withSearchTerm :(NSString *)searchTerm;\r\n- (void)load:(NSString *)baseURL withParameters :(NSDictionary *)parameters;\r\n- (NSMutableArray *)parseResponseData:(NSMutableData *)mutableResponseData;\r\n@end\r\n\r\n\r\n// AsyncXMLNetwork.m\r\n\r\n#import "AsyncXMLNetwork.h"\r\n#import "Constants.h"\r\n#import "MusicModel.h"\r\n\r\n@interface AsyncXMLNetwork () {\r\n	NSURLConnection *connection;\r\n	NSMutableData *responseData;\r\n}\r\n\r\n@property (nonatomic, retain) NSMutableData *responseData;\r\n@property (nonatomic, retain) NSURLConnection *connection;\r\n@property (nonatomic) int spaceIndex;\r\n\r\n@end\r\n\r\n@implementation AsyncXMLNetwork\r\n@synthesize connection, responseData, spaceIndex;\r\n\r\n- (void)load:(NSString *)baseURL withSearchTerm :(NSString *)searchTerm {\r\n    \r\n    NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n",__FUNCTION__);\r\n    NSLog(@"%@",[NSString stringWithFormat:baseURL, searchTerm]);\r\n    \r\n	searchTerm = [searchTerm stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];\r\n	searchTerm = [searchTerm stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];\r\n    \r\n	NSURL *myURL = [NSURL URLWithString:[NSString stringWithFormat:baseURL, searchTerm]];\r\n	NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:myURL cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:60];\r\n	connection = [[NSURLConnection alloc] initWithRequest:request delegate:self];\r\n}\r\n- (void)load:(NSString *)baseURL withParameters :(NSDictionary *)parameters{\r\n     NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n",__FUNCTION__);\r\n    \r\n     NSLog(@"baseURL: %@", baseURL);\r\n    for(id key in parameters) {\r\n        NSString *keyAsString = (NSString *)key;\r\n        id value = [parameters objectForKey:key];\r\n        NSString *valueAsString = (NSString *)value;\r\n        NSLog(@"key: %@", keyAsString);\r\n        NSLog(@"value: %@", valueAsString);\r\n    }\r\n    \r\n    \r\n}\r\n#pragma mark - NSURL Delegate Methods\r\n\r\n- (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response {\r\n	responseData = [[NSMutableData alloc] init];\r\n}\r\n\r\n- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data {\r\n	[responseData appendData:data];\r\n}\r\n\r\n- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error {\r\n	[[NSNotificationCenter defaultCenter] postNotificationName:kNotifyFail object:nil];\r\n}\r\n\r\n- (void)connectionDidFinishLoading:(NSURLConnection *)connection {\r\n	if (responseData != nil) {\r\n		[self parseResponseData:responseData];\r\n	}\r\n	else {\r\n		[[NSNotificationCenter defaultCenter] postNotificationName:kNotifyFail object:nil];\r\n	}\r\n}\r\n\r\n#pragma mark - Parse Dictionary\r\n/**\r\n This method parses the json response as NSMutableData, then creates and sends a dictionary\r\n back with the notification if successful.\r\n */\r\n\r\n- (NSMutableArray *)parseResponseData:(NSMutableData *)mutableResponseData {\r\n    NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n",__FUNCTION__);\r\n    NSString* dataString = [[NSString alloc] initWithData:mutableResponseData\r\n                                                 encoding:NSUTF8StringEncoding];\r\n    \r\n    NSLog(@"%@",dataString);\r\n    //note: This method returns an array for the sake of a unit test.\r\n    NSMutableArray *localArrayOfMusicModels = [[NSMutableArray alloc] init];\r\n         return localArrayOfMusicModels;\r\n}\r\n\r\n@end\r\n\r\n\r\n// MusicModel.h\r\n\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n\r\n @interface MusicModel : NSObject\r\n\r\n@property (nonatomic, retain) NSString *album;\r\n@property (nonatomic, retain) NSString *artist;\r\n@property (nonatomic, retain) NSString *popularity;\r\n\r\n-(MusicModel *)initWithJsonDictionary:(NSDictionary *)dict;\r\n\r\n@end\r\n\r\n\r\n// MusicModel.m\r\n\r\n\r\n#import "MusicModel.h"\r\n\r\n@implementation MusicModel\r\n@synthesize album, artist, popularity;\r\n\r\n- (id)initWithJsonDictionary:(NSDictionary *)dict {\r\n	self = [super init];\r\n	if (self) {\r\n		 \r\n        self.album = dict[@"name"];\r\n		      \r\n        self.popularity = dict[@"popularity"];\r\n\r\n		NSArray *artists        = dict[@"artists"];\r\n		NSDictionary *artists0  = artists[0];\r\n		NSString *artistName = artists0[@"name"];\r\n		self.artist = artistName;\r\n	}\r\n\r\n	return self;\r\n}\r\n\r\n@end\r\n\r\n\r\n\r\n\r\n// VC.h\r\n\r\n#import "MusicModel.h"\r\n\r\n@implementation MusicModel\r\n@synthesize album, artist, popularity;\r\n\r\n- (id)initWithJsonDictionary:(NSDictionary *)dict {\r\n	self = [super init];\r\n	if (self) {\r\n		 \r\n        self.album = dict[@"name"];\r\n		      \r\n        self.popularity = dict[@"popularity"];\r\n\r\n		NSArray *artists        = dict[@"artists"];\r\n		NSDictionary *artists0  = artists[0];\r\n		NSString *artistName = artists0[@"name"];\r\n		self.artist = artistName;\r\n	}\r\n\r\n	return self;\r\n}\r\n\r\n@end\r\n\r\n\r\n\r\n// VC.m\r\n\r\n\r\n#import "FBFViewController.h"\r\n#import <SystemConfiguration/SystemConfiguration.h>\r\n#import "AsyncNetwork.h"\r\n#import "Constants.h"\r\n#import "AsyncXMLNetwork.h"\r\n\r\n\r\n@interface FBFViewController ()\r\n{\r\n	UIActivityIndicatorView *spinner;\r\n	AsyncNetwork *asyncNetwork;\r\n    AsyncXMLNetwork *asyncXMLNetwork;\r\n    \r\n}\r\n@property (nonatomic, retain) UIActivityIndicatorView *spinner;\r\n@property (nonatomic, assign) BOOL isJSON;\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n@synthesize   artistTableView, arrayOfArtistModels, enterButton, textInput, tap, spinner;\r\n@synthesize      reachability, isJSON;\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n    isJSON = true;\r\n	[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(afterAsyncThreadCompletes:) name:kNotifySuccess object:asyncNetwork];\r\n	[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(dataFailed) name:kNotifyFail object:nil];\r\n    \r\n	spinner = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];\r\n	textInput.delegate = self;\r\n	[enterButton resignFirstResponder];\r\n	tap = [[UITapGestureRecognizer alloc]\r\n	       initWithTarget:self\r\n           action:@selector(dismissKeyboard)];\r\n	[self.view addGestureRecognizer:tap];\r\n    \r\n	[textInput setText:@"rem"];\r\n}\r\n\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n}\r\n\r\n- (IBAction)process:(id)sender {\r\n	Reachability *networkReachability = [Reachability reachabilityForInternetConnection];\r\n	NetworkStatus networkStatus = [networkReachability currentReachabilityStatus];\r\n	if (networkStatus == NotReachable) {\r\n		NSString *msg = @"Please check your network";\r\n		UIAlertView *alertmsg = [[UIAlertView alloc] initWithTitle:@"Network" message:msg delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];\r\n        \r\n		[alertmsg show];\r\n	}\r\n	else {\r\n        \r\n        if( isJSON ){\r\n            spinner.center = CGPointMake(160, 70);\r\n            spinner.hidesWhenStopped = YES;\r\n            [self.view addSubview:spinner];\r\n            [spinner startAnimating];\r\n            [self dismissKeyboard];\r\n            NSString *baseURL = @"http://ws.spotify.com/search/1/album.json?q=%@";\r\n            asyncNetwork = [[AsyncNetwork alloc]init];\r\n            \r\n            [asyncNetwork load:baseURL withSearchTerm:textInput.text];\r\n        }else{\r\n            NSLog(@"XML testing....");\r\n            NSString *baseURL = @"http://api.geonames.org/postalCodeSearch?";\r\n            \r\n            // needs username and passsord\r\n            //hashMapQueryKeysAndValues.put("username", "indatustest");\r\n            //send a dictionary of parameters { "postalcode"= textInput.text, "username" = "indatustest" }\r\n            NSDictionary *dictionaryOfQueryParams = @{\r\n                                      @"postalcode": textInput.text,\r\n                                      @"username": @"indatustest"\r\n                                      };\r\n            \r\n            asyncXMLNetwork = [[AsyncXMLNetwork alloc]init];\r\n           // [asyncXMLNetwork load:baseURL withSearchTerm:textInput.text];\r\n            [asyncXMLNetwork load:baseURL withParameters:dictionaryOfQueryParams];\r\n            \r\n        }\r\n        \r\n		\r\n	}\r\n}\r\n\r\n-(IBAction)segmentedAction :(id)sender{\r\n    \r\n    UISegmentedControl *segmentedControl = (UISegmentedControl *) sender;\r\n    NSInteger selectedSegment = segmentedControl.selectedSegmentIndex;\r\n    \r\n    if (selectedSegment == 0) {\r\n        NSLog(@"JSON");\r\n         isJSON = true;\r\n        \r\n    }else{\r\n        NSLog(@"XML");\r\n         isJSON = false;\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\n- (void)dataFailed {\r\n	NSString *msg =  @"Failed to get data with space in search word.";\r\n	UIAlertView *alertmsg = [[UIAlertView alloc] initWithTitle:@"No Data" message:msg delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];\r\n    \r\n	[alertmsg show];\r\n	[spinner stopAnimating];\r\n}\r\n\r\n- (void)afterAsyncThreadCompletes:(NSNotification *)notification {\r\n	arrayOfArtistModels = [notification userInfo][kArrayOfMusicModels];\r\n	[self.artistTableView performSelectorOnMainThread:@selector(reloadData) withObject:nil waitUntilDone:YES];\r\n	[spinner stopAnimating];\r\n}\r\n\r\n#pragma mark - Table Delegate Methods\r\n\r\n- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {\r\n	return 1;\r\n}\r\n\r\n- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {\r\n	return [arrayOfArtistModels count];\r\n}\r\n\r\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\r\n	static NSString *CellIdentifier = @"Cell";\r\n	MusicCell *cell = (MusicCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];\r\n	if (cell == nil) {\r\n		cell = [[MusicCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];\r\n	}\r\n	MusicModel *musicModel = arrayOfArtistModels[indexPath.row];\r\n	cell.leftLabel.text = musicModel.artist;\r\n	cell.rightLabel.text = musicModel.album;\r\n    \r\n	return cell;\r\n}\r\n\r\n#pragma mark - TextField Delegate Methods\r\n- (BOOL)textFieldShouldReturn:(UITextField *)textField {\r\n	[textInput resignFirstResponder];\r\n	[enterButton resignFirstResponder];\r\n	[self process:nil];\r\n    \r\n	return YES;\r\n}\r\n\r\n- (void)dismissKeyboard {\r\n	[textInput resignFirstResponder];\r\n}\r\n@end\r\n\r\n\r\n\r\n\r\n', '2014-03-05 21:46:26'),
(76, ' iOS', ' ConstraintsX', ' \r\n\r\n\r\n// VC.m\r\n\r\n#import "FBFViewController.h"\r\n#import "ConstraintXView.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n\r\n- (void)loadView {\r\n    \r\n    self.view = [[ConstraintXView alloc] init];\r\n    \r\n}\r\n\r\n\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end\r\n\r\n\r\n\r\n\r\n\r\n\r\n// View.m\r\n\r\n#import "ConstraintXView.h"\r\n\r\n@interface ConstraintXView () {\r\n}\r\n\r\n@property (nonatomic, strong) UIView *centerView;\r\n\r\n@end\r\n\r\n@implementation ConstraintXView\r\n\r\n- (id)init {\r\n	return [self initWithFrame:CGRectZero];\r\n}\r\n\r\n- (id)initWithFrame:(CGRect)frame {\r\n	self = [super initWithFrame:frame];\r\n	if (self) {\r\n		// Initialization code\r\n		self.backgroundColor = [UIColor blueColor];\r\n		[self addSubview:self.centerView];\r\n		[self setupConstraints];\r\n	}\r\n	return self;\r\n}\r\n\r\n- (void)updateConstraints {\r\n	[super updateConstraints];\r\n}\r\n\r\n- (UIView *)centerView {\r\n	if (_centerView == nil) {\r\n		_centerView = [[UIView alloc] init];\r\n		[_centerView setTranslatesAutoresizingMaskIntoConstraints:NO];\r\n		_centerView.backgroundColor = [UIColor redColor];\r\n	}\r\n	return _centerView;\r\n}\r\n\r\n- (void)setupConstraints {\r\n	// Width constraint : NSLayoutAttributeWidth\r\n	[self addConstraint:[NSLayoutConstraint constraintWithItem:self.centerView\r\n	                                                 attribute:NSLayoutAttributeWidth\r\n	                                                 relatedBy:NSLayoutRelationEqual\r\n	                                                    toItem:self\r\n	                                                 attribute:NSLayoutAttributeWidth\r\n	                                                multiplier:0.5\r\n	                                                  constant:0]];\r\n\r\n	// Height constraint : NSLayoutAttributeHeight\r\n	[self addConstraint:[NSLayoutConstraint constraintWithItem:self.centerView\r\n	                                                 attribute:NSLayoutAttributeHeight\r\n	                                                 relatedBy:NSLayoutRelationEqual\r\n	                                                    toItem:self\r\n	                                                 attribute:NSLayoutAttributeHeight\r\n	                                                multiplier:0.5\r\n	                                                  constant:0]];\r\n\r\n	// Center horizontally : NSLayoutAttributeCenterX\r\n	[self addConstraint:[NSLayoutConstraint constraintWithItem:self.centerView\r\n	                                                 attribute:NSLayoutAttributeCenterX\r\n	                                                 relatedBy:NSLayoutRelationEqual\r\n	                                                    toItem:self\r\n	                                                 attribute:NSLayoutAttributeCenterX\r\n	                                                multiplier:1.0\r\n	                                                  constant:0.0]];\r\n\r\n	// Center vertically : NSLayoutAttributeCenterY\r\n	[self addConstraint:[NSLayoutConstraint constraintWithItem:self.centerView\r\n	                                                 attribute:NSLayoutAttributeCenterY\r\n	                                                 relatedBy:NSLayoutRelationEqual\r\n	                                                    toItem:self\r\n	                                                 attribute:NSLayoutAttributeCenterY\r\n	                                                multiplier:1.0\r\n	                                                  constant:0.0]];\r\n}\r\n\r\n@end\r\n', '2014-03-05 21:52:42'),
(77, ' iOS', ' FormX', ' \r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController <UITextFieldDelegate,UIGestureRecognizerDelegate>\r\n{\r\n    UITapGestureRecognizer *tap;\r\n    IBOutlet UILabel *field1;\r\n    IBOutlet UILabel *field2;\r\n}\r\n@property  (nonatomic,retain) UITapGestureRecognizer *tap;\r\n@property  (nonatomic,retain) IBOutlet UILabel *field1;\r\n@property  (nonatomic,retain) IBOutlet UILabel *field2;\r\n\r\n\r\n-(IBAction)submit:(id)sender;\r\n\r\n@end\r\n \r\n \r\n // VC.m\r\n \r\n \r\n#import "FBFViewController.h"\r\n\r\n@interface FBFViewController ()\r\n@property (nonatomic, retain) IBOutlet UIButton *submitButton;\r\n@property (nonatomic, retain) IBOutlet UITextField *textField1;\r\n@property (nonatomic, retain) IBOutlet UITextField *textField2;\r\n@end\r\n\r\n@implementation FBFViewController\r\n@synthesize submitButton, textField1, textField2, tap, field1, field2;\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n    textField1.delegate = self;\r\n    [textField1 setPlaceholder:@"AlphaNumeric"];\r\n    [textField1 setKeyboardType:UIKeyboardTypeDefault];\r\n    \r\n    textField2.delegate = self;\r\n    [textField2 setPlaceholder:@"Numeric"];\r\n    [textField2 setKeyboardType:UIKeyboardTypeNumberPad];\r\n    //many UIKeyboardTypes: decimal, email, websearch, etc...\r\n    \r\n    tap = [[UITapGestureRecognizer alloc]\r\n           initWithTarget:self\r\n           action:@selector(dismissKeyboard)];\r\n    [self.view addGestureRecognizer:tap];\r\n}\r\n-(IBAction)submit:(id)sender{\r\n    [self getFormSubmission];\r\n}\r\n-(void)getFormSubmission{\r\n    NSLog(@"%@",textField1.text);\r\n    NSLog(@"%@",textField2.text);\r\n    \r\n    [field1 setText:textField1.text];\r\n    [field2 setText:textField2.text];\r\n    \r\n    \r\n}\r\n// "Return Key" dismiss keyboard\r\n- (BOOL)textFieldShouldReturn:(UITextField *)textField {\r\n    [textField1 resignFirstResponder];\r\n    [textField2 resignFirstResponder];\r\n    \r\n    return YES;\r\n}\r\n// "Tap" dismiss keyboard\r\n-(void)dismissKeyboard {\r\n    [textField1 resignFirstResponder];\r\n    [textField2 resignFirstResponder];\r\n    \r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n}\r\n\r\n@end', '2014-03-05 21:55:50'),
(78, ' iOS', ' OperationX', ' \r\n//object.h\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface MyLengthyOperation : NSOperation\r\n\r\n@end\r\n\r\n//object.m\r\n\r\n#import "MyLengthyOperation.h"\r\n\r\n@implementation MyLengthyOperation\r\n- (void)main {\r\n    // a lengthy operation\r\n    @autoreleasepool {\r\n        for (int i = 0 ; i < 10000 ; i++) {\r\n            \r\n            // is this operation cancelled?\r\n            if (self.isCancelled){\r\n                NSLog(@"canceled the operation...");\r\n                break;\r\n            }\r\n            \r\n            NSLog(@" OP BLOCK: %f", sqrt(i));\r\n        }\r\n    }\r\n}\r\n@end\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController\r\n{\r\n    dispatch_queue_t mConcurrentQueue;\r\n}\r\n@end\r\n\r\n\r\n//VC.m\r\n\r\n\r\n#import "FBFViewController.h"\r\n#import "MyLengthyOperation.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@property (nonatomic, retain) NSOperationQueue *operationQueue;\r\n@property (nonatomic, retain) NSMutableArray *array;\r\n\r\n@end\r\n\r\nvoid (^tFunct1)(NSString *) = ^(NSString *src)\r\n{\r\n	//background thread work\r\n	NSLog(@"start operation");\r\n	MyLengthyOperation *my_lengthy_operation = [[MyLengthyOperation alloc] init];\r\n	[my_lengthy_operation start];\r\n	NSLog(@"finish? operation?");\r\n	// CAN ONLY INTERACT WITH UI ON MAIN THREAD\r\n	dispatch_async(dispatch_get_main_queue(), ^(void)\r\n	{\r\n	    NSLog(@"Label Done!");\r\n	}\r\n\r\n	               );\r\n};\r\n\r\n@implementation FBFViewController\r\n\r\n@synthesize operationQueue;\r\n@synthesize array;\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n	[self callOperationInAsyncBlock];\r\n	[self callOperation];\r\n}\r\n\r\n- (void)callOperationInAsyncBlock {\r\n	NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n", __FUNCTION__);\r\n	mConcurrentQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\r\n	dispatch_async(mConcurrentQueue, ^{ tFunct1(@"1 Go!");  });\r\n}\r\n\r\n- (void)cancelAnOperation {\r\n	MyLengthyOperation *my_lengthy_operation = [[MyLengthyOperation alloc] init];\r\n	[my_lengthy_operation cancel];\r\n}\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n}\r\n\r\n#pragma mark - NSOperationQueue\r\n- (void)callOperation {\r\n	NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n", __FUNCTION__);\r\n	operationQueue = [NSOperationQueue new];\r\n	NSInvocationOperation *operation = [[NSInvocationOperation alloc] initWithTarget:self\r\n	                                                                        selector:@selector(doOperation)\r\n	                                                                          object:nil];\r\n\r\n	NSInvocationOperation *operation2 = [[NSInvocationOperation alloc] initWithTarget:self\r\n	                                                                         selector:@selector(doOperation2)\r\n	                                                                           object:nil];\r\n\r\n	[operationQueue addOperation:operation];\r\n	[operationQueue addOperation:operation2];\r\n	//options\r\n	//operationQueue.MaxConcurrentOperationCount = 3;\r\n	NSArray *active_and_pending_operations = operationQueue.operations;\r\n	NSLog(@"array of operations: %@", active_and_pending_operations);\r\n	NSInteger count_of_operations = operationQueue.operationCount;\r\n	NSLog(@"count: %d", count_of_operations);\r\n}\r\n\r\n- (void)doOperation {\r\n	for (int i = 0; i < 1000; i++) {\r\n		NSLog(@" OP 1: %f", sqrt(i));\r\n	}\r\n	array = [[NSMutableArray alloc] initWithCapacity:10000];\r\n	[array addObject:@"1"];\r\n	[array addObject:@"2"];\r\n	[array addObject:@"3"];\r\n	[array addObject:@"4"];\r\n	[self performSelectorOnMainThread:@selector(fooBar) withObject:nil waitUntilDone:YES];\r\n	dispatch_async(dispatch_get_main_queue(), ^(void)\r\n	{\r\n	    NSLog(@"Another Way of Firing on the main queue.");\r\n	});\r\n}\r\n\r\n- (void)doOperation2 {\r\n	for (int i = 0; i < 1000; i++) {\r\n		NSLog(@" OP 2: %f", sqrt(i));\r\n	}\r\n	array = [[NSMutableArray alloc] initWithCapacity:10000];\r\n	[array addObject:@"A"];\r\n	[array addObject:@"B"];\r\n	[array addObject:@"C"];\r\n	[array addObject:@"D"];\r\n	[self performSelectorOnMainThread:@selector(fooBar) withObject:nil waitUntilDone:YES];\r\n	dispatch_async(dispatch_get_main_queue(), ^(void)\r\n	{\r\n	    NSLog(@"Another Way of Firing on the main queue.");\r\n	});\r\n}\r\n\r\n- (void)fooBar {\r\n	NSLog(@"%@", array);\r\n}\r\n\r\n@end\r\n', '2014-03-06 20:14:32'),
(79, ' iOS', 'BlockX', ' \r\n// object.h\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\ntypedef void (^MoviePlayerCallbackBlock)(NSString *);\r\n\r\n@interface MoviePlayer : NSObject {\r\n}\r\n\r\n@property (nonatomic, copy) MoviePlayerCallbackBlock callbackBlock;\r\n\r\n- (id)initWithCallback:(MoviePlayerCallbackBlock)block;\r\n- (void)playMovie:(NSString *)title;\r\n\r\n@end\r\n\r\n\r\n// object.m\r\n\r\n\r\n#import "MoviePlayer.h"\r\n\r\n@implementation MoviePlayer\r\n\r\n@synthesize callbackBlock;\r\n\r\n- (id)initWithCallback:(MoviePlayerCallbackBlock)block {\r\n	if (self = [super init]) {\r\n		self.callbackBlock = block;\r\n	}\r\n	return self;\r\n}\r\n\r\n- (void)playMovie:(NSString *)title {\r\n	// play the movie\r\n    NSLog(@"\\n now playing...%@", title);\r\n    NSLog(@"\\n now removing...%@ ...from the movieQueue array.", title);\r\n	self.callbackBlock(title);\r\n	\r\n}\r\n\r\n@end\r\n\r\n\r\n// VC.h\r\n\r\n\r\n//VC.m\r\n\r\n#import "FBFViewController.h"\r\n#import "MoviePlayer.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n\r\n    [self blockSortAnArrayWithNSComparator];\r\n	\r\n}\r\n\r\n-(void)blockSortAnArrayWithNSComparator{\r\n    NSArray *stringsArray = [NSArray arrayWithObjects:\r\n                             @"string 1",\r\n                             @"String 21",\r\n                             @"string 12",\r\n                             @"String 11",\r\n                             @"String 02", nil];\r\n    static NSStringCompareOptions comparisonOptions = NSCaseInsensitiveSearch | NSNumericSearch |\r\n    NSWidthInsensitiveSearch | NSForcedOrderingSearch;\r\n    NSLocale *currentLocale = [NSLocale currentLocale];\r\n    NSComparator finderSort = ^(id string1, id string2) {\r\n        NSRange string1Range = NSMakeRange(0, [string1 length]);\r\n        return [string1 compare:string2 options:comparisonOptions range:string1Range locale:currentLocale];\r\n    };\r\n    NSLog(@"finderSort: %@", [stringsArray sortedArrayUsingComparator:finderSort]);\r\n}\r\n\r\n\r\n-(void)blockMoviePlayerExample{\r\n    NSMutableArray *movieQueue =\r\n    [NSMutableArray arrayWithObjects:@"Inception",\r\n     @"The Book of Eli",\r\n     @"Iron Man 2",\r\n     nil];\r\n    // The goal of the block is to remove that movie title from the array after it gets played via the MoviePlayer object.\r\n	MoviePlayer *player = [[MoviePlayer alloc] initWithCallback: ^(NSString *title) { [movieQueue removeObject:title]; }];\r\n    \r\n	NSLog(@"COUNT BEFORE: %d", [movieQueue count]);\r\n	for (NSString *title in[NSArray arrayWithArray:movieQueue]) {\r\n		[player playMovie:title];\r\n		NSLog(@"COUNT DURING: %d", [movieQueue count]);\r\n	}\r\n	NSLog(@"COUNT AFTER: %d", [movieQueue count]);\r\n}\r\n\r\n\r\n-(void)blockAnimation{\r\n    /*\r\n     [UIView transitionWithView:containerView duration:0.2\r\n     options:UIViewAnimationOptionTransitionFlipFromLeft\r\n     animations:^{\r\n     [fromView removeFromSuperview];\r\n     [containerView addSubview:toView]\r\n     }\r\n     completion:NULL];\r\n     */\r\n}\r\n\r\n-(void)blockSubstring{\r\n    NSString *musician = @"Rolling Stones";\r\n    NSString *musicDates = [NSString stringWithContentsOfFile:\r\n                            @"/usr/share/calendar/calendar.music"\r\n                                                     encoding:NSASCIIStringEncoding error:NULL];\r\n    [musicDates enumerateSubstringsInRange:NSMakeRange(0, [musicDates length]-1)\r\n                                   options:NSStringEnumerationByLines\r\n                                usingBlock:^(NSString *substring, NSRange substringRange, NSRange enclosingRange, BOOL *stop) {\r\n                                    NSRange found = [substring rangeOfString:musician];\r\n                                    if (found.location != NSNotFound) {\r\n                                        NSLog(@"%@", substring);\r\n                                    }\r\n                                }];\r\n}\r\n\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n}\r\n\r\n@end', '2014-03-06 20:20:02'),
(80, ' iOS', ' ParseCRUDX', ' \r\n\r\n#pragma mark - CRUD with parse\r\n\r\n-(void) queryCreate{\r\n    PFObject *testObject = [PFObject objectWithClassName:@"TestObject"];\r\n    testObject[@"jack"] = @"sixpack";\r\n    testObject[@"foo"] = @"monkey";\r\n    [testObject saveInBackground];\r\n}\r\n\r\n-(void) queryReadAll{\r\n    PFQuery *queryTraining = [PFQuery queryWithClassName:@"training"];\r\n    [queryTraining findObjectsInBackgroundWithBlock:^(NSArray *trainingObject, NSError *error) {\r\n        if (!error) {\r\n            //NSLog(@"Objects:%@",trainingObject);\r\n            for(PFObject * obj in trainingObject){\r\n                //NSLog(@"obj title:%@ id:%@",obj[@"title"], obj[@"id"]);\r\n                NSLog(@"object:%@",obj);\r\n            }\r\n        };\r\n    }];\r\n   }\r\n\r\n-(void)queryUpdate{\r\n    PFQuery *query = [PFQuery queryWithClassName:@"training"];\r\n    [query whereKey:@"title" equalTo:@"Mack"];\r\n    [query getFirstObjectInBackgroundWithBlock:^(PFObject * training, NSError *error) {\r\n        \r\n        if (!error) {\r\n            [training setObject:@"Marvin" forKey:@"title"];\r\n            [training saveInBackground];\r\n        } else {\r\n            NSLog(@"Error: %@", error);\r\n        }\r\n    }];\r\n}\r\n\r\n-(void)queryDelete{\r\n    //trick is getting the objectId\r\n    PFObject *object = [PFObject objectWithoutDataWithClassName:@"training"\r\n                                                       objectId:@"1EskOEl5eq"];\r\n    [object deleteEventually];\r\n}\r\n\r\n-(void)queryDeleteAll{\r\n    PFQuery *queryTraining = [PFQuery queryWithClassName:@"training"];\r\n    [queryTraining findObjectsInBackgroundWithBlock:^(NSArray *trainingObject, NSError *error) {\r\n        if (!error) {\r\n            for(PFObject * obj in trainingObject){\r\n                [obj deleteEventually];\r\n            }\r\n        };\r\n    }];\r\n}\r\n', '2014-03-09 14:25:10'),
(81, ' iOS', ' ParseCRUDWithModel', ' \r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n    \r\n    // CRUD\r\n    //create your PFQuery and your PFObject\r\n    PFQuery *training_PFQuery = [PFQuery queryWithClassName:@"training"];\r\n    PFObject *training_Object = [PFObject objectWithClassName:@"training"];\r\n    //create your DataModel\r\n    TaskModel *taskModel = [[TaskModel alloc]init];\r\n    taskModel.title = @"STD iOS model";\r\n    taskModel.description =@"pass object as parameter";\r\n    \r\n    //CREATE\r\n     [self queryCreateForModel:taskModel withPFObject:training_Object];\r\n    //READ\r\n    [self queryReadAllFromPFQuery:training_PFQuery];\r\n    //UPDATE\r\n    [self queryUpdate];\r\n    \r\n    \r\n    //READ ALL\r\n    [self queryReadAllFromPFQuery:training_PFQuery];\r\n}\r\n\r\n\r\n#pragma mark - CRUD with parse\r\n\r\n-(void)queryCreateForModel:(TaskModel*)model withPFObject:(PFObject*)pfObject{\r\n    pfObject[@"title"] = model.title;\r\n    pfObject[@"description"] = model.description;\r\n    [pfObject saveInBackground];\r\n}\r\n\r\n\r\n-(void) queryReadAllFromPFQuery:(PFQuery*)pfQuery{\r\n    //PFQuery *queryTraining = [PFQuery queryWithClassName:@"training"];\r\n    [pfQuery findObjectsInBackgroundWithBlock:^(NSArray *trainingObject, NSError *error) {\r\n        if (!error) {\r\n            \r\n            for(PFObject * obj in trainingObject){\r\n                TaskModel *taskModel = [[TaskModel alloc]init];\r\n                taskModel.objectId = obj.objectId;\r\n                taskModel.createdAt = obj.createdAt;\r\n                taskModel.updatedAt = obj.updatedAt;\r\n                taskModel.title = obj[@"title"];\r\n                taskModel.description = obj[@"description"];\r\n                NSLog(@"\\n taskModel.objectId:%@",taskModel.objectId);\r\n                NSLog(@"\\n taskModel.title:%@",taskModel.title);\r\n            }\r\n        };\r\n    }];\r\n   }\r\n\r\n-(void)queryUpdate{\r\n    PFQuery *query = [PFQuery queryWithClassName:@"training"];\r\n    [query whereKey:@"title" equalTo:@"STD iOS model"];\r\n    [query getFirstObjectInBackgroundWithBlock:^(PFObject * training, NSError *error) {\r\n        \r\n        if (!error) {\r\n            [training setObject:@"Marvin" forKey:@"title"];\r\n            [training saveInBackground];\r\n        } else {\r\n            NSLog(@"Error: %@", error);\r\n        }\r\n    }];\r\n}\r\n\r\n-(void)queryDeleteModel:(TaskModel*)model{\r\n    PFObject *object = [PFObject objectWithoutDataWithClassName:@"training"\r\n                                                       objectId:model.objectId];\r\n    [object deleteEventually];\r\n}\r\n\r\n-(void)queryDeleteAllInPFQuery:(PFQuery*)pfQuery{\r\n    [pfQuery findObjectsInBackgroundWithBlock:^(NSArray *pfObject, NSError *error) {\r\n        if (!error) {\r\n            for(PFObject * obj in pfObject){\r\n                [obj deleteEventually];\r\n            }\r\n        };\r\n    }];\r\n}\r\n', '2014-03-09 20:00:28'),
(82, ' any', ' Design Patterns', ' Design Patterns:\r\n——————————————————\r\nMain Seven Patterns:\r\n-Strategy\r\n-Observer\r\n-Decorator\r\n-Singleton\r\n-State\r\nCollections\r\n-Factory\r\n\r\n——————————————————\r\nCreation Patterns:\r\n	Singleton\r\n	Factory\r\nStructural Patterns:\r\n	Decorator \r\nBehavioral Patterns:\r\n	Strategy\r\n	State\r\n	Observer\r\nConcurrency Patterns:\r\n——————————————————\r\nCREATION Patterns:\r\n	Singleton \r\n		- Ensures that a class only has one instance , and provides a global point of access.\r\n	Factory \r\n		- Define an interface for creating a single object, but let subclasses decide which class to instantiate.\r\n		Factory Method lets a class defer instantiation to a subclass.(Dependency Injection)\r\n	Abstract Factory \r\n		- The Abstract Factory pattern provides an interface for creating families of related or dependent objects \r\n		without specifying their concrete classes.\r\nSTRUCTURAL Patterns:\r\n	Decorator  \r\n		 - The Decorator pattern attaches additional responsibilities to an object dynamically.\r\n                    Decorators provide a flexible alternative to subclassing for extended functionality.\r\n\r\nBEHAVIORAL Patterns:\r\n	Strategy \r\n		- the Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable.\r\n		Strategy lets the algorithm vary independently from the clients that use it.\r\n	State \r\n		- Allow an object to alter it’s behavior when it’s internal state changes. The object will appear to change it’s class.\r\n	Observer\r\n		- The observer pattern defines a one-to-many dependency between objects so that when one object changes state,\r\n		all of its dependents are notified and updated automatically.\r\n\r\n——————————————————\r\nDesign Principles:\r\n	1. identify code that changes, and separate it.( Encapsulate what Varies)\r\n	2. Program to an interface, not an implementation	\r\n	3. Favor Composition over inheritance\r\n	4. Classes should be open for extension, but closed for modification.\r\n	5. Depend upon abstractions. Do not depend upon concrete classes.\r\n	6. Strive for loosely coupled designs between objects that interact.\r\n\r\nExcellent Reference: https://www.dropbox.com/sh/b8b8x17kp8scnz1/_-siU-tCdZ/Head_First_Design_Patterns.pdf\r\n\r\nFactory: 		Pizza store example\r\nObserver: 		Posting message to subscribers \r\nStrategy: 		Football Example\r\nState: 			Seasons example\r\nSingleton:		already know\r\nDecorator: 		Icecream example\r\n\r\n\r\n', '2014-03-13 15:04:01');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(83, ' iOS', 'DP Observer', ' \r\n//ObserverPattern\r\n\r\n// VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController\r\n\r\n@end\r\n\r\n\r\n//VC.m\r\n\r\n#import "FBFViewController.h"\r\n\r\n\r\n#import "Subject.h"\r\n#import "Observer.h"\r\n#import "ObserverX.h"\r\n\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n    \r\n    Subject *sub = [[Subject alloc]init];\r\n    Observer *obs = [[Observer alloc]init];\r\n    ObserverX *obsX = [[ObserverX alloc]init];\r\n    \r\n    [sub attach:obs];\r\n    [sub attach:obsX];\r\n    \r\n    [sub postMessage:@"foo"];\r\n    [sub postMessage:@"gone"];\r\n    // DUPLICATE ARE PREVENTED: [sub attach:obsX];\r\n    // Works[sub remove:obsX];\r\n    [sub postMessage:@"wild"];\r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n}\r\n\r\n@end\r\n\r\n// Subject.h\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface Subject : NSObject\r\n\r\n@property (nonatomic, retain) NSMutableArray *observers;\r\n\r\n- (void)postMessage:(NSString *)message;\r\n- (void)attach:(id)sender;\r\n- (void)remove:(id)sender;\r\n\r\n@end\r\n\r\n\r\n//Subject.m\r\n\r\n#import "Subject.h"\r\n#import "ObserverInterface.h"\r\n\r\n@implementation Subject\r\n@synthesize observers;\r\n- (id)init\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        observers = [[NSMutableArray alloc]init];\r\n    }\r\n    return self;\r\n}\r\n-(void)attach:(id)sender{\r\n     ObserverInterface *obi = (ObserverInterface*)sender;\r\n    if(![observers containsObject:obi])\r\n    {\r\n    [observers addObject:obi];\r\n     NSLog(@"\\n ATTACHING observer named: %@",obi.name);\r\n    }else{\r\n        NSLog(@"ALREADY AN OBSERVER");\r\n    }\r\n}\r\n-(void)remove:(id)sender{\r\n    ObserverInterface *obi = (ObserverInterface*)sender;\r\n    [observers removeObject:obi];\r\n}\r\n-(void)postMessage:(NSString *)message{\r\n     for(ObserverInterface * obi in observers){\r\n         [obi update:message];\r\n    }\r\n}\r\n\r\n@end\r\n\r\n\r\n//ObserverInterface.h\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface ObserverInterface : NSObject\r\n{\r\n	NSString *name;\r\n}\r\n\r\n@property (nonatomic, retain) NSString *name;\r\n\r\n- (void)update:(NSString *)message;\r\n@end\r\n\r\n\r\n//ObserverInterface.m\r\n#import "ObserverInterface.h"\r\n\r\n@implementation ObserverInterface\r\n@synthesize name;\r\n- (id)init\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        self.name = @"unnamed";\r\n    }\r\n    return self;\r\n}\r\n-(void)update:(NSString *)message{\r\n    \r\n    NSLog(@"updated %@ with message %@",self.name,message);\r\n}\r\n@end\r\n\r\n// BasicObserver.h\r\n#import <Foundation/Foundation.h>\r\n#import "ObserverInterface.h"\r\n\r\n@interface Observer : ObserverInterface\r\n\r\n@end\r\n\r\n\r\n//BasicObserver.m\r\n#import "Observer.h"\r\n\r\n@implementation Observer\r\n- (id)init\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n         self.name=@"Generic Observer 1";\r\n    }\r\n    return self;\r\n}\r\n\r\n@end\r\n\r\n\r\n\r\n\r\n\r\n', '2014-03-12 16:22:20'),
(84, ' iOS', ' DP State', ' \r\n// State Design Pattern\r\n//VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController\r\n\r\n@end\r\n\r\n//VC.m\r\n\r\n#import "FBFViewController.h"\r\n#import "SeasonContext.h"\r\n\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n   \r\n    [super viewDidLoad];\r\n    /*\r\n     * State - Allow an object to alter it’s behavior when it’s internal state changes. The object will appear to change it’s class.\r\n     */\r\n    \r\n    /*\r\n     * SeasonContext, a class that contains a "Season" class and has a constructor that accepts a "Season" as a parameter. It can "set" the season and\r\n     * describe the season.\r\n     *\r\n     * Season, is an INTERFACE that accepts a context as a parameter.\r\n     *\r\n     * All the various seasons implement the Season constructor, and using its context, sets the next season after declaring itself the season in text.\r\n     */\r\n    \r\n    SeasonContext *seasonContext = [[SeasonContext alloc]init];\r\n    [seasonContext whatIsTheSeason];\r\n    [seasonContext whatIsTheSeason];\r\n    [seasonContext whatIsTheSeason];\r\n    [seasonContext whatIsTheSeason];\r\n    \r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n    // Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end\r\n\r\n\r\n//SeasonContext.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "Season.h"\r\n@class Season;\r\n\r\n@interface SeasonContext : NSObject\r\n{\r\n    Season *season;\r\n}\r\n@property (nonatomic, retain) Season *season;\r\n-(void) whatIsTheSeason;\r\n\r\n@end\r\n\r\n\r\n// SeasonContext.m\r\n\r\n#import "SeasonContext.h"\r\n#import "Winter.h"\r\n\r\n@implementation SeasonContext\r\n\r\n@synthesize season = _season;\r\n\r\n- (id)init\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        self.season = [[Winter alloc]init];\r\n    }\r\n    return self;\r\n}\r\n-(void)setSeason:(Season *)seasonToSet{\r\n    _season = seasonToSet;\r\n}\r\n\r\n-(void) whatIsTheSeason{\r\n    [_season theSeason:self];\r\n     \r\n    //NSLog(@"The season is your face.");\r\n    \r\n    \r\n}\r\n@end\r\n\r\n\r\n//Season.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "SeasonContext.h"\r\n@class SeasonContext;\r\n\r\n@interface Season : NSObject\r\n{\r\n    SeasonContext *context;\r\n}\r\n@property (nonatomic, retain) SeasonContext *context;\r\n-(void) theSeason:(SeasonContext *)ctx;\r\n@end\r\n\r\n\r\n//Season.m\r\n#import "Season.h"\r\n\r\n\r\n@implementation Season\r\n@synthesize context;\r\n\r\n- (id)initWith:(SeasonContext *)ctx\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        self.context = ctx;\r\n    }\r\n    return self;\r\n}\r\n\r\n-(void) theSeason:(SeasonContext *)ctx{\r\n    self.context = ctx;\r\n}\r\n\r\n@end\r\n\r\n\r\n//Winter.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "Season.h"\r\n\r\n@interface Winter : Season\r\n-(void)theSeason:(SeasonContext *)context;\r\n@end\r\n\r\n\r\n//Winter.m\r\n\r\n#import "Winter.h"\r\n#import "Spring.h"\r\n@class Spring;\r\n\r\n@implementation Winter\r\n-(void)theSeason:(SeasonContext *)context{\r\n    NSLog(@"SEASON: is Winter");\r\n    [context setSeason:[[Spring alloc]init]];\r\n}\r\n@end\r\n\r\n\r\n//Spring.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "Season.h"\r\n\r\n@interface Spring : Season\r\n-(void)theSeason:(SeasonContext *)context;\r\n@end\r\n\r\n\r\n\r\n//Spring.m\r\n\r\n#import "Spring.h"\r\n#import "Summer.h"\r\n@class Summer;\r\n\r\n@implementation Spring\r\n\r\n-(void)theSeason:(SeasonContext *)context{\r\n    NSLog(@"SEASON: is Spring");\r\n    [context setSeason:[[Summer alloc]init]];\r\n}\r\n\r\n@end\r\n\r\n\r\n// etc etc etc.....\r\n\r\n\r\n', '2014-03-12 17:37:54'),
(85, ' iOS', ' DP Strategy', ' \r\n\r\n//VC.h\r\n\r\n#import <UIKit/UIKit.h>\r\n#import "TacticContext.h"\r\n#import "FootballStrategy.h"\r\n\r\n@interface FBFViewController : UIViewController\r\n{\r\n    NSString *team1;\r\n    NSString *team2;\r\n    TacticContext *tacticContext;\r\n}\r\n@property (nonatomic,retain) NSString *team1;\r\n@property (nonatomic,retain) NSString *team2;\r\n@property (nonatomic,retain) TacticContext *tacticContext;\r\n\r\n@end\r\n\r\n\r\n//VC.m\r\n\r\n#import "FBFViewController.h"\r\n#import "AttackTactic.h"\r\n#import "DefenceTactic.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n@synthesize  team1, team2, tacticContext;\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n\r\n	team1 = @"Barcelona";\r\n	team2 = @"Real Madrid";\r\n\r\n	tacticContext = [[TacticContext alloc] init];\r\n\r\n	AttackTactic *offense = [[AttackTactic alloc]init];\r\n	[tacticContext setStrategy:offense];\r\n	[tacticContext selectTacticForTeam:(team1)];\r\n\r\n	DefenceTactic *defence = [[DefenceTactic alloc]init];\r\n	[tacticContext setStrategy:defence];\r\n	[tacticContext selectTacticForTeam:(team2)];\r\n}\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n}\r\n\r\n@end\r\n\r\n//TacticContext.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "FootballStrategy.h"\r\n\r\n@class FootballStrategy;\r\n\r\n@interface TacticContext : NSObject{\r\n    FootballStrategy *strategy;\r\n}\r\n@property (nonatomic, retain) FootballStrategy *strategy;\r\n\r\n-(void) selectTacticForTeam:(NSString *)team;\r\n-(FootballStrategy *) getStrategy;\r\n-(void) setStrategy:(FootballStrategy *)strategy;\r\n\r\n@end\r\n\r\n\r\n//TacticContext.m\r\n\r\n#import "TacticContext.h"\r\n\r\n@implementation TacticContext\r\n@synthesize strategy;\r\n\r\n-(void) selectTacticForTeam:(NSString *)team{\r\n    [strategy adhereTacticToTeam:team ];\r\n}\r\n-(FootballStrategy *) getStrategy{\r\n    return strategy;\r\n}\r\n-(void)setStrategy:(FootballStrategy *)strgy{\r\n    strategy = strgy;\r\n}\r\n\r\n@end\r\n\r\n\r\n//FootballStrategy.h\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface FootballStrategy : NSObject\r\n-(void) adhereTacticToTeam: (NSString *)team;\r\n@end\r\n\r\n\r\n//FootballStrategy.m\r\n\r\n#import "FootballStrategy.h"\r\n\r\n@implementation FootballStrategy\r\n-(void) adhereTacticToTeam: (NSString *)team{\r\n    NSLog(@"Strategy: %@ will be using GENERIC strategy? ",team);\r\n}\r\n@end\r\n\r\n\r\n//AttackStrategy.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "FootballStrategy.h"\r\n\r\n@interface AttackTactic : FootballStrategy\r\n- (void)adhereTacticToTeam:(NSString *)team;\r\n@end\r\n\r\n\r\n//AttackStrategy.m\r\n\r\n#import "AttackTactic.h"\r\n\r\n@implementation AttackTactic\r\n\r\n- (void)adhereTacticToTeam:(NSString *)team {\r\n	NSLog(@"Strategy: %@ will be playing offense", team);\r\n}\r\n\r\n@end\r\n\r\n\r\n//DefenceStrategy.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "FootballStrategy.h"\r\n\r\n@interface DefenceTactic : FootballStrategy\r\n- (void)adhereTacticToTeam:(NSString *)team;\r\n@end\r\n\r\n\r\n//DefenceStrategy.m\r\n\r\n#import "DefenceTactic.h"\r\n\r\n@implementation DefenceTactic\r\n\r\n- (void)adhereTacticToTeam:(NSString *)team {\r\n	NSLog(@"Strategy: %@ will be playing defense", team);\r\n}\r\n\r\n@end\r\n\r\n\r\n\r\n', '2014-03-12 18:22:16'),
(86, ' iOS', ' DP Decorator', ' Design Pattern: Decorator\r\n\r\n\r\n//VC.h\r\n\r\n//VC.m\r\n\r\n#import "FBFViewController.h"\r\n\r\n#import "Icecream.h"\r\n#import "SimpleIcecream.h"\r\n#import "NuttyDecorator.h"\r\n#import "HoneyDecorator.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n    /*\r\n     \r\n     Icecream is an interface that declares a method makeIceCream that returns a string.\r\n     SimpleIcecream implements Icecream and overrides uses the makeIcecream method to retuen a string describing itself.\r\n     \r\n     IcecreamDecorator is the "head decorator" that implements Icecream and in addition to implementing Icecream methods, it has a constructor\r\n     that accepts an Icecream object and stores it as a property.\r\n     \r\n     NuttyDecorator extends IcecreamDecorator and overrides its makeIcecream method and adds additional functionality via more custom methods.\r\n     And the HoneyDecorator does the same thing that the NUtyDecorator does.\r\n     \r\n     When the ultimate icecream is created below, it displays the results from inner parenthesis outward.\r\n     */\r\n    \r\n    Icecream *icecream = [[ HoneyDecorator alloc] initWithIcecream: [[NuttyDecorator alloc]initWithIcecream:[[SimpleIcecream alloc]init]]];\r\n    \r\n    \r\n    \r\n    NSLog(@"%@",icecream.makeIcecream);\r\n }\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n\r\n}\r\n\r\n@end\r\n\r\n//Icecream.h\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n@interface Icecream : NSObject\r\n-(NSString *) makeIcecream;\r\n@end\r\n\r\n\r\n//Icecream.m\r\n\r\n#import "Icecream.h"\r\n\r\n@implementation Icecream\r\n-(NSString *) makeIcecream{\r\n    return @"nothing";\r\n}\r\n@end\r\n\r\n\r\n\r\n//SimpleIcecream.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "Icecream.h"\r\n\r\n@interface SimpleIcecream : Icecream\r\n \r\n\r\n@end\r\n\r\n\r\n// SimpleIcecream.m\r\n\r\n#import "SimpleIcecream.h"\r\n\r\n@implementation SimpleIcecream\r\n-(NSString *) makeIcecream{\r\n    return @"Simple Icecream";\r\n}\r\n@end\r\n\r\n\r\n\r\n//IcecreamDecorator.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "Icecream.h"\r\n\r\n// should be an abstract class ?\r\n@interface IcecreamDecorator : Icecream\r\n{\r\n    Icecream *specialIcecream;\r\n}\r\n@property (nonatomic, retain) Icecream *specialIcecream;\r\n@end\r\n\r\n\r\n//IcecreamDecorator.m\r\n\r\n#import "IcecreamDecorator.h"\r\n\r\n@implementation IcecreamDecorator\r\n@synthesize specialIcecream;\r\n- (id)initWithIcecream:(Icecream *)icecream\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        self.specialIcecream =icecream;\r\n    }\r\n    return self;\r\n}\r\n-(NSString *)makeIcecream{\r\n    return [specialIcecream makeIcecream];\r\n}\r\n@end\r\n\r\n\r\n//HoneyDecorator.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "IcecreamDecorator.h"\r\n#import "Icecream.h"\r\n\r\n@interface HoneyDecorator : IcecreamDecorator\r\n- (id)initWithIcecream:(Icecream *)icecream;\r\n@end\r\n\r\n//HoneyDecorator.m\r\n\r\n#import "HoneyDecorator.h"\r\n\r\n@implementation HoneyDecorator\r\n- (id)initWithIcecream:(Icecream *)icecream\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        super.specialIcecream = icecream;\r\n    }\r\n    return self;\r\n}\r\n\r\n-(NSString *)makeIcecream{\r\n    NSString *givenIcecream = [specialIcecream makeIcecream];\r\n    NSString *changedIcecream = [self addHoney];\r\n    NSString *processedIcecream = [NSString stringWithFormat:@"%@ %@",givenIcecream, changedIcecream];\r\n    return processedIcecream;\r\n}\r\n\r\n-(NSString *)addHoney{\r\n    return @" + HONEY";\r\n}\r\n@end\r\n\r\n\r\n//NutsDecorator.h\r\n\r\n#import <Foundation/Foundation.h>\r\n#import "IcecreamDecorator.h"\r\n#import "Icecream.h"\r\n\r\n@interface NuttyDecorator : IcecreamDecorator\r\n- (id)initWithIcecream:(Icecream *)icecream;\r\n@end\r\n\r\n\r\n//NutsDecorator.m\r\n\r\n#import "NuttyDecorator.h"\r\n\r\n@implementation NuttyDecorator\r\n- (id)initWithIcecream:(Icecream *)icecream\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        super.specialIcecream = icecream;\r\n    }\r\n    return self;\r\n}\r\n\r\n-(NSString *)makeIcecream{\r\n    NSString *givenIcecream = [specialIcecream makeIcecream];\r\n    NSString *changedIcecream = [self addNuts];\r\n    NSString *processedIcecream = [NSString stringWithFormat:@"%@ %@",givenIcecream, changedIcecream];\r\n    return processedIcecream;\r\n}\r\n\r\n-(NSString *)addNuts{\r\n    return @" + NUTS";\r\n}\r\n@end\r\n', '2014-03-12 19:03:26'),
(87, ' iOS', ' DP Factory', ' // Design Pattern : Factory\r\n\r\n//VC.h\r\n\r\n\r\n//VC.m\r\n\r\n#import "FBFViewController.h"\r\n#import "LaughFactory.h"\r\n\r\n@interface FBFViewController ()\r\n\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n- (void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n    LaughFactory *laugh = [[LaughFactory alloc]initWithLaughter:3];\r\n    [laugh laugh];\r\n}\r\n\r\n- (void)didReceiveMemoryWarning\r\n{\r\n    [super didReceiveMemoryWarning];\r\n}\r\n\r\n@end\r\n\r\n\r\n//LaughFactory.h\r\n\r\n#import <Foundation/Foundation.h>\r\n\r\n#define kLaughWithGuffaw  1\r\n#define kLaughWithGiggle  2\r\n#define kLaughWithSnicker  3\r\n\r\n@interface LaughFactory : NSObject\r\n\r\n- (LaughFactory *) initWithLaughter:(NSUInteger) laughterType;\r\n\r\n- (void) laugh;\r\n\r\n@end\r\n\r\n\r\n//LaughFactory.m\r\n\r\n#import "LaughFactory.h"\r\n\r\n@interface Guffaws : LaughFactory {}\r\n- (void)laugh;\r\n@end\r\n\r\n@interface Giggles : LaughFactory {}\r\n- (void)laugh;\r\n@end\r\n\r\n@interface Snicker : LaughFactory {}\r\n- (void)laugh;\r\n@end\r\n\r\n@implementation LaughFactory\r\n\r\n- (LaughFactory *)initWithLaughter:(NSUInteger)laughterType {\r\n	id instanceReturn = nil;\r\n\r\n	if (laughterType == kLaughWithGuffaw)\r\n		instanceReturn = [[Guffaws alloc]init];\r\n	else if (laughterType == kLaughWithGiggle)\r\n		instanceReturn = [[Giggles alloc]init];\r\n    else if (laughterType == kLaughWithSnicker)\r\n		instanceReturn = [[Snicker alloc]init];\r\n	else\r\n		; // deal with this\r\n	return instanceReturn;\r\n}\r\n\r\n- (void)laugh {\r\n	NSLog(@"Humbug");\r\n}\r\n\r\n@end\r\n\r\n\r\n@implementation Guffaws\r\n- (void)laugh {\r\n	NSLog(@"OH HA HA HOWAH HA HA HA");\r\n}\r\n\r\n@end\r\n\r\n@implementation Giggles\r\n- (void)laugh {\r\n	NSLog(@"Tee hee");\r\n}\r\n@end\r\n\r\n@implementation Snicker\r\n- (void)laugh {\r\n	NSLog(@"ttttttssssssssss");\r\n}\r\n\r\n@end\r\n', '2014-03-12 19:38:17'),
(88, ' any', ' SOLID GRASP', 'SOLID\r\nSingle responsibility, \r\nOpen-closed, \r\nLiskov substitution, \r\nInterface segregation and \r\nDependency inversion\r\n\r\nS-SRP-Single responsibility principle\r\na class should have only a single responsibility (i.e. only one potential change in the software-s specification should be able to affect the specification of the class)\r\n\r\nO-OCP-Open/closed principle\r\n“software entities … should be open for extension, but closed for modification.”\r\nIn other words you don’t touch the existing modules thereby not disturbing the existing functionality, instead you extend the modules to implement the new requirement. So your code is less rigid and fragile and also extensible.\r\n\r\n\r\nL-LSP-Liskov substitution principle\r\n“objects in a program should be replaceable with instances of their subtypes without altering the correctness of that program.” See alsodesign by contract.\r\n\r\nI-ISP-Interface segregation principle\r\n“many client-specific interfaces are better than one general-purpose interface.”[4]\r\n\r\nD-DIP-Dependency inversion principle\r\none should “Depend upon Abstractions. Do not depend upon concretions.”[4]\r\nDependency injection is one method of following this principle.\r\n	1.	High-level modules should not depend on low-level modules. Both should depend on abstractions.\r\n	2.	Abstractions should not depend upon details. Details should depend upon abstractions.\r\n	 \r\n\r\n\r\n====================================================================================================\r\nGRASP: ==========================================================================================\r\nGeneral Responsibility Assignment Software Patterns\r\n\r\nController, \r\nCreator, \r\nIndirection, \r\nInformation Expert, \r\nHigh Cohesion, \r\nLow Coupling,\r\nPolymorphism, \r\nProtected Variations, and \r\nPure Fabrication\r\n\r\n\r\nController\r\n\r\nThe Controller pattern assigns the responsibility of dealing with system events to a non-UI class that represents the overall system or a use case scenario. A Controller object is a non-user interface object responsible for receiving or handling a system event.\r\nA use case controller should be used to deal with all system events of a use case, and may be used for more than one use case (for instance, for use cases Create User and Delete User, one can have a single UserController, instead of two separate use case controllers).\r\nIt is defined as the first object beyond the UI layer that receives and coordinates ("controls") a system operation. The controller should delegate the work that needs to be done to other objects; it coordinates or controls the activity. It should not do much work itself. The GRASP Controller can be thought of as being a part of the Application/Service layer (assuming that the application has made an explicit distinction between the application/service layer and the domain layer) in an object-oriented system with Common layers in an information system logical architecture.\r\n\r\nCreator\r\nSee also: Factory pattern\r\nCreation of objects is one of the most common activities in an object-oriented system. Which class is responsible for creating objects is a fundamental property of the relationship between objects of particular classes. Simply, "Creator pattern is responsible for creating an object of class".\r\nIn general, a class B should be responsible for creating instances of class A if one, or preferably more, of the following apply:\r\n	•	Instances of B contain or compositely aggregate instances of A\r\n	•	Instances of B record instances of A\r\n	•	Instances of B closely use instances of A\r\n	•	Instances of B have the initializing information for instances of A and pass it on creation.\r\n\r\n\r\nHigh Cohesion\r\nHigh Cohesion is an evaluative pattern that attempts to keep objects appropriately focused, manageable and understandable. High cohesion is generally used in support of Low Coupling. High cohesion means that the responsibilities of a given element are strongly related and highly focused. Breaking programs into classes and subsystems is an example of activities that increase the cohesive properties of a system. Alternatively, low cohesion is a situation in which a given element has too many unrelated responsibilities. Elements with low cohesion often suffer from being hard to comprehend, hard to reuse, hard to maintain and averse to change.\r\n\r\n\r\nIndirection\r\nSee also: Delegation pattern\r\nThe Indirection pattern supports low coupling (and reuse potential) between two elements by assigning the responsibility of mediation between them to an intermediate object. An example of this is the introduction of a controller component for mediation between data (model) and its representation (view) in the Model-view-controller pattern.\r\n\r\nInformation Expert\r\nSee also: Information hiding\r\nInformation Expert (also Expert or the Expert Principle) is a principle used to determine where to delegate responsibilities. These responsibilities include methods, computed fields, and so on.\r\nUsing the principle of Information Expert, a general approach to assigning responsibilities is to look at a given responsibility, determine the information needed to fulfill it, and then determine where that information is stored.\r\nInformation Expert will lead to placing the responsibility on the class with the most information required to fulfill it.\r\n\r\nLow Coupling\r\nMain article: Loose coupling\r\nLow Coupling is an evaluative pattern, which dictates how to assign responsibilities to support:\r\n	•	lower dependency between the classes,\r\n	•	change in one class having lower impact on other classes,\r\n	•	higher reuse potential.\r\n\r\n\r\nPolymorphism\r\nAccording to Polymorphism, responsibility of defining the variation of behaviors based on type is assigned to the types for which this variation happens. This is achieved using polymorphic operations.\r\n\r\nProtected Variations\r\nThe Protected Variations pattern protects elements from the variations on other elements (objects, systems, subsystems) by wrapping the focus of instability with an interface and using polymorphism to create various implementations of this interface.\r\n\r\nPure Fabrication\r\nA Pure Fabrication is a class that does not represent a concept in the problem domain, specially made up to achieve low coupling, high cohesion, and the reuse potential thereof derived (when a solution presented by the Information Expert pattern does not). This kind of class is called "Service" in Domain-driven design.', '2014-03-20 18:50:34'),
(102, ' web', ' RWD', ' RWD\r\n\r\n\r\n\r\n<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">\r\n\r\n\r\n\r\n<html>\r\n\r\n<head>\r\n\r\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n\r\n<script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"></script>\r\n\r\n 	<link rel="stylesheet" type="text/css" href="./css/RWD_layout.css">\r\n\r\n</head>\r\n\r\n\r\n\r\n\r\n\r\n// CSS\r\n\r\n/*------------------DESKTOP----------------*/\r\n\r\n @media screen and (max-width:5000px) {\r\n\r\n}\r\n\r\n/*------------------TABLET----------------*/\r\n @media screen and (max-width:1024px) {\r\n\r\n}\r\n\r\n/*------------------iPhone----------------*/\r\n @media screen and (max-width:480px) {\r\n\r\n}\r\n', '2014-03-20 19:09:47'),
(103, ' iOS', ' terminal cheat sheet', ' Terminal Cheatsheet for Mac ( basics )\r\n\r\nSHORTCUTS\r\n\r\nKey/Command	Description\r\nTab	Auto-complete files and folder names\r\nCtrl + A	Go to the beginning of the line you are currently typing on\r\nCtrl + E	Go to the end of the line you are currently typing on\r\nCtrl + U	Clear the line before the cursor\r\nCtrl + K	Clear the line after the cursor\r\nCtrl + W	Delete the word before the cursor\r\nCtrl + T	Swap the last two characters before the cursor\r\nEsc + T	Swap the last two words before the cursor\r\nCtrl + R	Lets you search through previously used commands\r\nCtrl + L or Command + K	Clears the Screen\r\nCtrl + C	Kill whatever you are running\r\nCtrl + D	Exit the current shell\r\nCORE COMMANDS\r\n\r\ncd	Home directory\r\ncd [folder]	Change directory\r\ncd ~	Home directory, e.g. ‘cd ~/folder/’\r\ncd /	Root of drive\r\nls	Short listing\r\nls -l	Long listing\r\nls -a	Listing incl. hidden files\r\nls -lh	Long listing with Human readable file sizes\r\nls -R	Entire content of folder recursively\r\nsudo [command]	Run command with the security privileges of the superuser (Super User DO)\r\nopen [file]	Opens a file\r\nopen .	Opens the directory\r\ntop	Displays active processes. Press q to quit\r\nnano [file]	Opens the Terminal it’s editor\r\npico	[file]	Opens the Terminal it’s editor\r\nq	Exit\r\nclear	Clear screen\r\nCOMMAND HISTORY\r\n\r\nhistory n	Shows the stuff typed – add a number to limit the last n items\r\nctrl-r	Interactively search through previously typed commands\r\n![value]	Execute the last command typed that starts with ‘value’\r\n!!	Execute the last command typed\r\nFILE MANAGEMENT\r\n\r\ntouch [file]	Create new file\r\npwd	Full path to working directory\r\n..	Parent/enclosing directory, e.g.\r\nls -l ..	Long listing of parent directory\r\ncd ../../	Move 2 levels up\r\n.	Current folder\r\ncat	Concatenate to screen\r\nrm [file]	Remove a file, e.g. rm [file] [file]\r\nrm -i [file]	Remove with confirmation\r\nrm -r [dir]	Remove a directory and contents\r\nrm -f [file]	Force removal without confirmation\r\nrm -i [file]	Will display prompt before\r\ncp [file] [newfile]	Copy file to file\r\ncp [file] [dir]	Copy file to directory\r\nmv [file] [new filename]	Move/Rename, e.g. mv -v [file] [dir]\r\nDIRECTORY MANAGEMENT\r\n\r\nmkdir [dir]	Create new directory\r\nmkdir -p [dir]/[dir]	Create nested directories\r\nrmdir [dir]	Remove directory ( only operates on empty directories )\r\nrm -R [dir]	Remove directory and contents\r\nPIPES – Allows to combine multiple commands that generate output\r\n\r\nmore	Output content delivered in screensize chunks\r\n> [file]	Push output to file, keep in mind it will get overwritten\r\n>> [file]	Append output to existing file\r\n<	Tell command to read content from a fi\r\nHELP\r\n\r\n[command] -h	Offers help\r\n[command] —help	Offers help\r\n[command] help	Offers help\r\nreset	Resets the terminal display\r\nman [command]	Show the help for ‘command’\r\nwhatis [command]	Gives a one-line description of ‘command’', '2014-03-20 19:44:43'),
(104, ' any', ' oo comparison', '————————————————————————————————————OBJECT————————————————————————————————————\r\n>>>>>>>>>>  obj-c\r\n\r\n.h\r\n@interface Solution : NSObject\r\n\r\n-(void) changeEmail:(User *)user;\r\n\r\n@end\r\n\r\n.m\r\n@implementation Solution\r\n-(void) changeEmail:(User *)user{\r\n    if([SolutionPart2 checkAccess:user])\r\n    {\r\n        //grant permission\r\n    }\r\n}\r\n@end\r\n\r\njava\r\npublic class Robot implements Workable{\r\n    @Override\r\n    public void work() {\r\n        Log.d("DEBUG", "robot is working");\r\n    }\r\n}\r\n\r\n>>>>>>>>>>  php\r\n<?php\r\nclass User {\r\n\r\n    private $username;\r\n    private $password;\r\n\r\n    public function __construct() {\r\n\r\n    }\r\n\r\n    public function setUsername($username) {\r\n        $this -> username = $username;\r\n    }\r\n\r\n    public function getUsername() {\r\n        return $this -> username;\r\n    }\r\n\r\n    public function setPassword($password) {\r\n        $this -> password = $password;\r\n    }\r\n\r\n    public function getPassword() {\r\n        echo("<br>get password!!!");\r\n        return $this -> password;\r\n    }\r\n\r\n}\r\n?>\r\n>>>>>>>>>>  javascript\r\n<script>\r\n	alert("js: Basic Object");\r\n	function Person(gender) {\r\n		this.gender = gender;\r\n	}\r\n\r\n\r\n	Person.prototype.gender = '''';\r\n\r\n	Person.prototype.sayHello = function() {\r\n		alert(''hello'');\r\n		alert(this.gender);\r\n	};\r\n\r\n	var person1 = new Person(''Male'');\r\n	var person2 = new Person(''Female'');\r\n\r\n	// call the Person sayHello method.\r\n	person1.sayHello();\r\n	// hello\r\n</script>\r\n\r\n————————————————————————————————————INTERFACE————————————————————————————————————\r\n>>>>>>>>>>  obj-c\r\n\r\n.h\r\n       @protocol WorkableDelegate <NSObject>\r\n	-(void)work;\r\n	@end\r\n\r\n	@interface Workable : NSObject\r\n\r\n	@end\r\n\r\n	implementing class.\r\n	.h\r\n	#import "Workable.h"\r\n	@interface Worker : NSObject <WorkableDelegate>\r\n		@end\r\n		.m\r\n		@implementation Worker\r\n		#pragma mark - WORKABLE DELEGATE METHODS\r\n		//@override\r\n		-(void)work{\r\n		    NSLog(@"\\n worker working : \\n" );\r\n		}\r\n		@end\r\n\r\n		java\r\n		public interface Workable {\r\n		    public void work();\r\n		}\r\n    public class Worker implements Workable,Feedable{\r\n    @Override\r\n    public void feed() {\r\n        Log.d("DEBUG","worker is working");\r\n    }\r\n\r\n    @Override\r\n    public void work() {\r\n        Log.d("DEBUG","worker is feeding");\r\n    }\r\n    }\r\n\r\n\r\n>>>>>>>>>>  php\r\n\r\n<?php\r\n        interface InterfaceOne {\r\n            function getNameOne();\r\n            function setNameOne($nameIn);\r\n        }\r\n\r\n        class ImplementorOfInterface implements InterfaceOne {\r\n            private $instanceNameOne;\r\n            //@override\r\n            public function getNameOne() {\r\n                return $this -> instanceNameOne;\r\n            }\r\n\r\n            public function setNameOne($nameIn) {\r\n                $this -> instanceNameOne = $nameIn;\r\n            }\r\n\r\n        }\r\n\r\n       \r\n?>\r\n\r\n>>>>>>>>>>  javascript\r\n		//javascript does not really support interfaces so you have to mock them.\r\n     <script>\r\n			\r\n			alert("js: Basic INTERFACE");\r\n\r\n			function MyObject() {\r\n			}\r\n\r\n\r\n			MyObject.prototype.sayHello = function() {\r\n				alert(''hello'');\r\n			};\r\n\r\n			var myObject = new MyObject();\r\n\r\n			\r\n			MyObject.prototype.can = function(methodName) {\r\n				return (( typeof this[methodName]) == "function");\r\n			};\r\n\r\n			if (myObject.can("sayHello")) {\r\n				myObject.sayHello();\r\n			}\r\n			if (myObject.can("sayHiYall")) {\r\n				myObject.sayHiYall();\r\n			} else {\r\n				alert(''myObject: you cant do that'');\r\n			}\r\n			\r\n			\r\n			//ANOTHER WAY\r\n			workerWorkable = new Workable();\r\n            workerFeedable = new Feedable();\r\n    \r\n            worker = new Worker(workerWorkable,workerFeedable);\r\n            worker.work();\r\n            worker.feed();\r\n\r\n    </script>\r\n\r\n————————————————————————————————————INHERITENCE————————————————————————————————————\r\n\r\n>>>>>>>>>>  obj-c\r\n    .h\r\n		@interface Crow : Bird\r\n		-(void)fly;\r\n		@end\r\n    .m\r\n		@implementation Crow\r\n		- (id)init\r\n		{\r\n		    self = [super init];\r\n		    if (self) {\r\n		       self.name = @"Crow";\r\n		    }\r\n		    return self;\r\n		}\r\n		-(void)fly{\r\n		    \r\n		    NSLog(@"\\n %@ flying : \\n",self.name );\r\n		}\r\n		@end\r\n\r\n>>>>>>>>>>  java\r\n		public class Crow extends Bird\r\n		{\r\n		    private String name;\r\n\r\n		    public Crow(){\r\n		        this.name = "Crow";\r\n		    }\r\n\r\n		    public void fly(){\r\n		        Log.d("DEBUG", this.name + " is flying....!");\r\n		    }\r\n		}\r\n\r\n>>>>>>>>>>  php\r\n    <?php\r\n        class ParentClass {\r\n\r\n            public $parentVar = "parent var";\r\n            public function getColor() {\r\n                return ''RED'';\r\n            }\r\n\r\n        }\r\n\r\n        class ChildClass extends ParentClass {\r\n            //@override\r\n            public function getColor() {\r\n\r\n                return ''BLUE'';\r\n            }\r\n\r\n            //access the super\r\n            public function getParentColor() {\r\n                return parent::getColor();\r\n            }\r\n\r\n        }\r\n\r\n       \r\n    ?>\r\n\r\n>>>>>>>>>>  javascript\r\n    <script>\r\n			 \r\n			alert("js: Basic INHERITENCE");\r\n			// define the Person Class\r\n			function Person() {\r\n			}\r\n\r\n\r\n			Person.prototype.walk = function() {\r\n				alert(''I am walking!'');\r\n			};\r\n			Person.prototype.sayHello = function() {\r\n				alert(''hello'');\r\n			};\r\n\r\n			// define the Student class\r\n			function Student() {\r\n				// Call SUPER constuctor\r\n				Person.call(this);\r\n			};\r\n			// inherit Person\r\n			Student.prototype = new Person();\r\n			// !!!!! correct the constructor pointer because it points to Person !!!!!\r\n			Student.prototype.constructor = Student;\r\n			//@override  replace the sayHello method\r\n			Student.prototype.sayHello = function() {\r\n				alert(''hi, I am a student'');\r\n			};\r\n			// add sayGoodBye method\r\n			Student.prototype.sayGoodBye = function() {\r\n				alert(''goodBye'');\r\n			};\r\n\r\n			\r\n    </script>\r\n\r\n————————————————————————————————————ABSTRACT————————————————————————————————————\r\n>>>>>>>>>>  obj-c\r\n\r\n>>>>>>>>>>  java\r\n\r\n>>>>>>>>>>  php\r\n    <?php\r\n        abstract class AbstractClass {\r\n            abstract public function getName();\r\n            abstract public function setName($nameIn);\r\n        }\r\n\r\n        class AbstractImplementor extends AbstractClass {\r\n            private $instanceName;\r\n            //OOPHPAbstractClass  DELEGATE METHODS\r\n            public function getName() {\r\n                return $this -> instanceName;\r\n            }\r\n\r\n            public function setName($nameIn) {\r\n                $this -> instanceName = $nameIn;\r\n            }\r\n\r\n        }\r\n\r\n        $abstracto = new AbstractImplementor();\r\n        $abstracto -> setName(" >Abstracted Harold");\r\n        echo("\\n <TEST ABSTRACT>");\r\n        echo $abstracto -> getName();\r\n    ?>\r\n\r\n>>>>>>>>>>  javascript\r\n            // does javascript have an abstract...?\r\n            \r\n\r\n————————————————————————————————————STATIC————————————————————————————————————\r\n>>>>>>>>>>  obj-c\r\n            +(void) myStaticMethod;\r\n>>>>>>>>>>  java\r\n\r\n>>>>>>>>>>  php\r\n    <?php\r\n        class StaticClass {\r\n            //a static variable,\r\n            static $red = ''RED'';\r\n            public function getStaticVarRed() {\r\n                return self::$red;\r\n            }\r\n\r\n            public static function staticGetStaticVarRed() {\r\n                return self::$red;\r\n            }\r\n\r\n        }\r\n\r\n        $statico = new StaticClass();\r\n        echo("\\n <TEST STATIC>");\r\n        echo '' >red: '' . $statico -> getStaticVarRed();\r\n        echo '' >test  - show the static var using a static function'';\r\n        echo '' >red: '' . StaticClass::staticGetStaticVarRed();\r\n    ?>\r\n\r\n>>>>>>>>>>  javascript\r\n		\r\n		  Does javascript have static ????\r\n		  \r\n		  ', '2014-03-21 13:11:25'),
(89, ' any', ' Top 10 IT skills', ' Top 10 IT Skills:\r\n\r\nWindows Power Shell\r\nServer Virtualization\r\nFailover Clustering\r\nSAN Management\r\nCompliance\r\nRecovery Techniques\r\nTraffic Management\r\nIPv6\r\nConferencing\r\nMobiile Computing', '2014-03-14 12:21:27'),
(90, 'js', 'oo cheatsheet', ' <?php /**/ ?>\r\n\r\n<script>\r\n/* ///////////////////// BASIC OBJECT //////////////////////////// */\r\nalert("js: Basic Object");\r\n    function Person(gender) {\r\n        this.gender = gender;\r\n    }\r\n\r\n    Person.prototype.gender = '''';\r\n\r\n    Person.prototype.sayHello = function() {\r\n        alert(''hello'');\r\n        alert(this.gender);\r\n    };\r\n\r\n    var person1 = new Person(''Male'');\r\n    var person2 = new Person(''Female'');\r\n\r\n    // call the Person sayHello method.\r\n    person1.sayHello();\r\n    // hello\r\n</script>\r\n\r\n\r\n<script>\r\n/* ///////////////////// BASIC EXTENDS //////////////////////////// */\r\nalert("js: Basic Extends");\r\n    var extend = function(OBJ, extendsOBJ) {\r\n        for (var property in extendsOBJ) {\r\n            if (OBJ[property] && ( typeof (OBJ[property]) == ''object'') && (OBJ[property].toString() == ''[object Object]'') && extendsOBJ[property])\r\n                extend(OBJ[property], extendsOBJ[property]);\r\n            else\r\n                OBJ[property] = extendsOBJ[property];\r\n        }\r\n        return OBJ;\r\n    }\r\n    \r\n    var child = {\r\n        child : ''test''\r\n    };\r\n     \r\n    var parent = {\r\n        newFoo : function() {\r\n            alert(''hi how do you like the genes I gave you?'');\r\n        }\r\n    };\r\n    \r\n    // the addition\r\n    extend(child, parent);\r\n    // extend it\r\n    child.newFoo(); \r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\n/* ///////////////////// BASIC INHERITENCE //////////////////////////// */\r\nalert("js: Basic INHERITENCE");\r\n    // define the Person Class\r\n    function Person() {\r\n    }\r\n    Person.prototype.walk = function() {\r\n        alert(''I am walking!'');\r\n    };\r\n    Person.prototype.sayHello = function() {\r\n        alert(''hello'');\r\n    };\r\n\r\n    // define the Student class\r\n    function Student() {\r\n        // Call SUPER constuctor\r\n        Person.call(this);\r\n    };\r\n    // inherit Person\r\n    Student.prototype = new Person();\r\n    // !!!!! correct the constructor pointer because it points to Person !!!!!\r\n    Student.prototype.constructor = Student;\r\n    //@override  replace the sayHello method\r\n    Student.prototype.sayHello = function() {\r\n        alert(''hi, I am a student'');\r\n    };\r\n    // add sayGoodBye method\r\n    Student.prototype.sayGoodBye = function() {\r\n        alert(''goodBye'');\r\n    };\r\n\r\n\r\n// USAGE \r\n\r\n    var student1 = new Student();\r\n    student1.sayHello();\r\n    student1.walk();\r\n    student1.sayGoodBye();\r\n\r\n    // check inheritance\r\n    alert( student1 instanceof Person);\r\n    // true\r\n    alert( student1 instanceof Student);\r\n    // true\r\n    \r\n    //Using Object.create the inheritance line would instead be:\r\n    //Student.prototype = Object.create(Person.prototype);\r\n</script>\r\n\r\n<script>\r\n    /* ///////////////////// BASIC INTERFACE //////////////////////////// */\r\n    alert("js: Basic INTERFACE");\r\n    \r\n     function MyObject() {\r\n    }\r\n\r\n    MyObject.prototype.sayHello = function() {\r\n        alert(''hello'');\r\n    };\r\n\r\n    var myObject = new MyObject();\r\n  \r\n /* this IS necessary ?*/\r\n     MyObject.prototype.can = function(methodName) {\r\n        return (( typeof this[methodName]) == "function");\r\n    };\r\n    \r\n\r\n    if (myObject.can("sayHello")) {\r\n        myObject.sayHello();\r\n    }\r\n    if(myObject.can("sayHiYall")) {\r\n        myObject.sayHiYall();\r\n    }else{\r\n        alert(''myObject: you cant do that'');\r\n    }\r\n\r\n</script>', '2014-03-19 20:28:34'),
(91, ' php', ' oo cheatsheet', ' <?php\r\n////////INTERFACE//////////////////////////////////////\r\ninterface InterfaceOne {\r\n    function getNameOne();\r\n    function setNameOne($nameIn);\r\n}\r\nclass ImplementorOfInterface implements InterfaceOne {\r\n    private $instanceNameOne;\r\n    //@override  \r\n    public function getNameOne() {\r\n        return $this -> instanceNameOne;\r\n    }\r\n    public function setNameOne($nameIn) {\r\n        $this -> instanceNameOne = $nameIn;\r\n    }\r\n\r\n}\r\n/////////TEST INTERFACE/////////////////////////////////\r\necho("\\n <TEST INTERFACE>");\r\n$interfacer = new ImplementorOfInterface();\r\n$interfacer -> setNameOne("Harold");\r\necho ''Name One: '' . $interfacer -> getNameOne();\r\n////////INHERITENCE//////////////////////////////////////\r\nclass ParentClass {\r\n    \r\n    public $parentVar = "parent var";\r\npublic function __construct(){\r\n\r\n}\r\n    public function getColor() {\r\n        return ''RED'';\r\n    }\r\n}\r\nclass ChildClass extends ParentClass {\r\n\r\npublic function __construct(){\r\n\r\n    parent::__construct(){\r\n}\r\n    //@override \r\n    public function getColor() {\r\n     \r\n        return ''BLUE'';\r\n    }\r\n    //access the super\r\n    public function getParentColor() {\r\n        return parent::getColor();\r\n    }\r\n\r\n}\r\n/////////TEST INHERITENCE//////////////////////////////\r\necho("\\n <TEST INHERITENCE>");\r\n$inheritor = new ChildClass();\r\necho '' >test 1 - show the child color'' ;\r\necho $inheritor -> getColor();\r\necho '' >test 1 - show the parent color'' ;\r\necho $inheritor -> getParentColor();\r\n//////////////ABSTRACT/////////////////////////////\r\nabstract class AbstractClass {\r\n    abstract public function getName();\r\n    abstract public function setName($nameIn);\r\n}\r\nclass AbstractImplementor extends AbstractClass {\r\n    private $instanceName;\r\n    //OOPHPAbstractClass  DELEGATE METHODS\r\n    public function getName() {\r\n        return $this -> instanceName;\r\n    }\r\n    public function setName($nameIn) {\r\n        $this -> instanceName = $nameIn;\r\n    }\r\n}\r\n/////////TEST ABSTRACT//////////////////////\r\n$abstracto = new AbstractImplementor();\r\n$abstracto -> setName(" >Abstracted Harold");\r\necho("\\n <TEST ABSTRACT>");\r\necho $abstracto -> getName();\r\n//////////////STATIC/////////////////////////////\r\nclass StaticClass {\r\n    //a static variable,\r\n    static $red = ''RED'';\r\n    public function getStaticVarRed() {\r\n        return self::$red;\r\n    }\r\n    public static function staticGetStaticVarRed() {\r\n        return self::$red;\r\n    }\r\n}\r\n/////////TEST STATIC//////////////////////////\r\n$statico = new StaticClass();\r\necho("\\n <TEST STATIC>");\r\necho '' >red: '' . $statico -> getStaticVarRed();\r\necho '' >test  - show the static var using a static function'';\r\necho '' >red: '' . StaticClass::staticGetStaticVarRed();\r\n\r\n?>', '2014-06-01 20:23:27'),
(92, ' js', ' SOLID SRP', ' <?php\r\n?>\r\n<script>\r\n	alert("SOLID: js : SRP");\r\n	function User(username, password) {\r\n		this.username = username;\r\n		this.password = password;\r\n	}\r\n\r\n\r\n	User.prototype.username = "";\r\n	User.prototype.password = "";\r\n\r\n	function AccessChecker() {\r\n		this.username = "test";\r\n		this.password = "1234";\r\n	}\r\n\r\n\r\n	AccessChecker.prototype.username = "";\r\n	AccessChecker.prototype.password = "";\r\n	AccessChecker.prototype.checkAccess = function(user) {\r\n		var result = false;\r\n		if ((user.username == this.username) && (this.password == user.password)) {\r\n			result = true;\r\n		}\r\n		return result;\r\n	}\r\n	function EmailChanger(accessChecker) {\r\n		this.accessChecker = accessChecker;\r\n	}\r\n\r\n\r\n	EmailChanger.prototype.accessChecker = "";\r\n	EmailChanger.prototype.changeEmail = function(user) {\r\n		if (this.accessChecker.checkAccess(user)) {\r\n			alert("Grant Email Change");\r\n		} else {\r\n			alert("Reject Email Change");\r\n		}\r\n	}\r\n	user = new User("test", "1234");\r\n	accessChecker = new AccessChecker();\r\n	emailChanger = new EmailChanger(accessChecker);\r\n	emailChanger.changeEmail(user);\r\n\r\n</script>', '2014-03-20 17:41:28'),
(93, ' js', ' SOLID OCP', ' <?php ?>\r\n<script>\r\n	alert("SOLID: js : OCP");\r\n	function Validator() {\r\n	}\r\n\r\n\r\n	Validator.prototype.isValid = function(credentials) {\r\n		alert("creds:" + credentials);\r\n		var result = false;\r\n		if (credentials == "good") {\r\n			result = true;\r\n		}\r\n		return result;\r\n	};\r\n\r\n	function CarLoanValidator() {\r\n		// @super\r\n		Validator.call(this);\r\n	};\r\n	CarLoanValidator.prototype = new Validator();\r\n	CarLoanValidator.prototype.constructor = CarLoanValidator;\r\n	//@override\r\n	CarLoanValidator.prototype.isValid = function(credentials) {\r\n		alert(''Car creds:'' + credentials);\r\n		var result = false;\r\n		if (credentials == "GoodCarCredentials") {\r\n			result = true;\r\n		}\r\n		return result;\r\n	};\r\n\r\n	function PersonalLoanValidator() {\r\n		// @super\r\n		Validator.call(this);\r\n	};\r\n	PersonalLoanValidator.prototype = new Validator();\r\n	PersonalLoanValidator.prototype.constructor = PersonalLoanValidator;\r\n	//@override\r\n	PersonalLoanValidator.prototype.isValid = function(credentials) {\r\n		alert(''Personal creds:'' + credentials);\r\n		var result = false;\r\n		if (credentials == "GoodPersonalCredentials") {\r\n			result = true;\r\n		}\r\n		return result;\r\n	};\r\n\r\n	function LoanApprovalHandler(carLoanValidator, personalLoanValidator) {\r\n		this.carLoanValidator = carLoanValidator;\r\n		this.personalLoanValidator = personalLoanValidator;\r\n\r\n	}\r\n\r\n\r\n	LoanApprovalHandler.prototype.getValidationWithLoanTypeAndCredentials = function(loanType, credentials) {\r\n		var result = false;\r\n		if (loanType == "car") {\r\n			result = this.carLoanValidator.isValid(credentials);\r\n		}\r\n		if (loanType == "personal") {\r\n			result = this.personalLoanValidator.isValid(credentials);\r\n		}\r\n		return result;\r\n	}\r\n	////////////////  IMPLEMENTATION\r\n	clv = new CarLoanValidator();\r\n	plv = new PersonalLoanValidator();\r\n\r\n	lah = new LoanApprovalHandler(clv, plv);\r\n	result = lah.getValidationWithLoanTypeAndCredentials("personal", "GoodPersonalCredentials");\r\n\r\n	if (result) {\r\n		alert("Approved");\r\n	} else {\r\n		alert("Rejected");\r\n	}\r\n	\r\n\r\n</script>', '2014-03-20 17:42:29'),
(94, ' js', ' SOLID LSP', ' <?php\r\n\r\n?>\r\n<script>\r\n	alert("SOLID: js : LSP");\r\n	//Use inheritence for the substitution, NOT extends.\r\n\r\n	function Bird() {\r\n	}\r\n\r\n	Bird.prototype.fly = function() {\r\n		alert(''hello Im a bird'');\r\n	};\r\n\r\n	function Crow() {\r\n		// @super\r\n		Bird.call(this);\r\n	};\r\n	Crow.prototype = new Bird();\r\n	Crow.prototype.constructor = Crow;\r\n	//@override\r\n	Crow.prototype.fly = function() {\r\n		alert(''...as the crow flies.'');\r\n	};\r\n	\r\n	function Ostrich() {\r\n        // @super\r\n        Bird.call(this);\r\n    };\r\n    Ostrich.prototype = new Bird();\r\n    Ostrich.prototype.constructor = Ostrich;\r\n    //@override\r\n    Ostrich.prototype.fly = function() {\r\n        alert(''...as the ostrich...flies?'');\r\n    };\r\n\r\n	// USAGE///////////////////////////////////////\r\n	var crow = new Crow();\r\n	var ostrich = new Ostrich();\r\n    \r\n    /////  SUBSTITUTION\r\n    var arrayOfBirds = [crow,ostrich];\r\n    \r\n    for(x in arrayOfBirds){\r\n       var thisBird = arrayOfBirds[x];\r\n       thisBird.fly();\r\n    }\r\n    \r\n    \r\n    \r\n\r\n</script>', '2014-03-20 17:43:08');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(95, ' js', ' SOLID ISP', ' <?php /**/ ?>\r\n\r\n<script>\r\n	///////////////////// Interface Segregation Principle ////////////////////////////\r\n	alert("SOLID: js : ISP");\r\n\r\n	///////////////////// Interfaces ////////////////////////////\r\n	/////////-----Workable\r\n	function Workable() {\r\n		//constructor\r\n	}\r\n\r\n	Workable.prototype.work = function() {\r\n		alert(''working'');\r\n	};\r\n\r\n	Workable.prototype.can = function(methodName) {\r\n		return (( typeof this[methodName]) == "function");\r\n	};\r\n\r\n	/////////-----Feedable\r\n	function Feedable() {\r\n		//constructor\r\n	}\r\n\r\n\r\n	Feedable.prototype.feed = function() {\r\n		alert(''eating'');\r\n	};\r\n\r\n	Feedable.prototype.can = function(methodName) {\r\n		return (( typeof this[methodName]) == "function");\r\n	};\r\n\r\n	///////////////////// Objects ////////////////////////////\r\n	/////////-----Manager\r\n    function Manager(worker,robot){\r\n        this.worker = worker;\r\n        this.robot = robot;\r\n    }\r\n	Manager.prototype.worker = "";\r\n	Manager.prototype.robot = "";\r\n	\r\n	Manager.prototype.manageWorker = function(){\r\n	    alert("manager has ...");\r\n	    this.worker.work();\r\n	    this.worker.feed();\r\n	}\r\n	Manager.prototype.manageRobot = function(){\r\n        alert("manager has ...");\r\n        this.robot.work();\r\n    }\r\n\r\n	/////////-----Robot\r\n	 function Robot(workable){\r\n        this.workable = workable;\r\n       \r\n    }\r\n    //properties:\r\n    Robot.prototype.workable = "";\r\n    Robot.prototype.work = function(){\r\n        alert("robot ...");\r\n        this.workable.work();\r\n    }\r\n     \r\n	/////////-----Worker\r\n    function Worker(workable,feedable){\r\n        this.workable = workable;\r\n        this.feedable = feedable;\r\n    }\r\n    //properties:\r\n    Worker.prototype.workable = "";\r\n    Worker.prototype.feedable = "";\r\n    \r\n    Worker.prototype.work = function(){\r\n        alert("worker ...");\r\n        this.workable.work();\r\n    }\r\n     Worker.prototype.feed = function(){\r\n          alert("worker...");\r\n        this.feedable.feed();\r\n    }\r\n	///////////////////// Implementation ////////////////////////////\r\n	\r\n	workerWorkable = new Workable();\r\n	workerFeedable = new Feedable();\r\n	\r\n	worker = new Worker(workerWorkable,workerFeedable);\r\n	worker.work();\r\n	worker.feed();\r\n	\r\n	robotWorkable = new Workable();\r\n	robot = new Robot(robotWorkable);\r\n	robot.work();\r\n	\r\n	manager = new Manager(worker,robot);\r\n	manager.manageWorker();\r\n	manager.manageRobot();\r\n	\r\n</script>', '2014-03-20 17:43:50'),
(96, ' js', ' SOLID DIP', ' <?php\r\n\r\n?>\r\n<script>\r\n	\r\n	/* /////////////////////  INTERFACE //////////////////////////// */\r\n	alert("js: DIP INTERFACE");\r\n\r\n	function StoreWarehouseInterface() {\r\n\r\n	this.locationX = "nowhere";\r\n	}\r\n\r\n	StoreWarehouseInterface.prototype.callWarehouse = function(locationX) {\r\n	locationX;\r\n	alert(''call warehouse'' + locationX);\r\n	var result = this.isClosest(locationX);\r\n\r\n	//should return name of closest warehouse\r\n	return result;\r\n	};\r\n\r\n	StoreWarehouseInterface.prototype.isClosest = function(locationX) {\r\n\r\n	alert(''isclosest ? : '' + locationX);\r\n\r\n	var warehouseE = new WarehouseE();\r\n	var distanceE = warehouseE.distanceTo(locationX);\r\n	resultE = new Object();\r\n	resultE.name = "Warehouse E";\r\n	resultE.distance = distanceE;\r\n\r\n	var warehouseF = new WarehouseF();\r\n	var distanceF = warehouseF.distanceTo(locationX);\r\n	resultF = new Object();\r\n	resultF.name = "Warehouse F";\r\n	resultF.distance = distanceF;\r\n\r\n	var warehouseG = new WarehouseG();\r\n	var distanceG = warehouseG.distanceTo(locationX);\r\n	resultG = new Object();\r\n	resultG.name = "Warehouse G";\r\n	resultG.distance = distanceG;\r\n	//create an associative array or dictionary of the distances and their warehouseNames\r\n\r\n	alert("Warehouse E:"+ resultE.distance);\r\n	alert("Warehouse F:"+ resultF.distance);\r\n	alert("Warehouse G:"+ resultG.distance);\r\n\r\n	/////////////////////////////////////\r\n	//get the min\r\n	var resultsArray = [{\r\n	Name : resultE.name,\r\n	Distance : resultE.distance\r\n	}, {\r\n	Name : resultF.name,\r\n	Distance : resultF.distance\r\n	}, {\r\n	Name : resultG.name,\r\n	Distance : resultG.distance\r\n	}];\r\n\r\n	var min = Math.min.apply(null, resultsArray.map(function(a) {\r\n\r\n	return a.Distance;\r\n	}))\r\n	/*\r\n	* , max = Math.max.apply(null, resultsArray.map(function(a) {\r\n	return a.Distance;\r\n	}))\r\n\r\n	*/\r\n\r\n	alert(''min:'' + min);\r\n	//alert(''max:'' + max);\r\n	//see who the min belongs to:\r\n	if(min == resultE.distance){\r\n	return resultE.name\r\n	}\r\n	if(min == resultF.distance){\r\n	return resultF.name\r\n	}\r\n	if(min == resultG.distance){\r\n	return resultG.name\r\n	}\r\n\r\n	//return the min\r\n	return "Still Need to Know";\r\n	/**/\r\n\r\n	};\r\n\r\n	//In javascript it appears that the interface and the implementor of that interface, are one and the same.\r\n	//There are just a few additional components. 1) The "Object.prototype.can..." and the "condition checks".\r\n\r\n	//Object.prototype.can\r\n	StoreWarehouseInterface.prototype.can = function(methodName) {\r\n	return (( typeof this[methodName]) == "function");\r\n	};\r\n\r\n	/////////////////////  END INTERFACE ////////////////////////////\r\n\r\n	///////////////////// LOCATION ////////////////////////////\r\n	function LocationX(implementor, locationName) {\r\n\r\n	this.name = locationName;\r\n	this.implementor = implementor;\r\n	}\r\n\r\n	//Location Properties:\r\n\r\n	//Location Methods:\r\n	LocationX.prototype.whatIsTheClosestWarehouseToLocation = function(locationX) {\r\n	alert("Location object calls the Concrete Interface for stores and warehouses");\r\n\r\n	var closest = "not using interface properly";\r\n	//<<<<<<<<<<<<<<<<<<<     INTERFACE CONDITION CHECK:      >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n	if (this.implementor.can("callWarehouse")) {\r\n	closest = this.implementor.callWarehouse(locationX);\r\n	}\r\n	//<<<<<<<<<<<<<<<<<<<     INTERFACE CONDITION CHECK:      >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n	//closest = this.implementor.callWarehouse(locationX);\r\n	alert("The closest is..._____ " + closest);\r\n	};\r\n\r\n	///////////////////// WAREHOUSE E ////////////////////////////\r\n	function WarehouseE() {\r\n	this.name = "Warehouse E!";\r\n	}\r\n	//PROPERTIES:\r\n	WarehouseE.prototype.name = '''';\r\n	//WAREHOUSE E Methods:\r\n	WarehouseE.prototype.distanceTo = function(locationX) {\r\n	var distance = 0;\r\n	if (locationX == "target") {\r\n	distance = 3.5;\r\n	}\r\n	if (locationX == "walmart") {\r\n	distance = 7.2;\r\n	}\r\n	return distance;\r\n\r\n	};\r\n	///////////////////// WAREHOUSE F ////////////////////////////\r\n	function WarehouseF() {\r\n	this.name = "Warehouse F!";\r\n	}\r\n	//PROPERTIES:\r\n	WarehouseF.prototype.name = '''';\r\n	//WAREHOUSE E Methods:\r\n	WarehouseF.prototype.distanceTo = function(locationX) {\r\n	var distance = 0;\r\n	if (locationX == "target") {\r\n	distance = 10.5;\r\n	}\r\n	if (locationX == "walmart") {\r\n	distance = 2.2;\r\n	}\r\n	return distance;\r\n\r\n	};\r\n	///////////////////// WAREHOUSE G ////////////////////////////\r\n	function WarehouseG() {\r\n	this.name = "Warehouse G!";\r\n	}\r\n	//PROPERTIES:\r\n	WarehouseG.prototype.name = '''';\r\n	//WAREHOUSE G Methods:\r\n	WarehouseG.prototype.distanceTo = function(locationX) {\r\n	var distance = 0;\r\n	if (locationX == "target") {\r\n	distance = 1.8;\r\n	}\r\n	if (locationX == "walmart") {\r\n	distance = 11.3;\r\n	}\r\n	return distance;\r\n\r\n	};\r\n\r\n	/**/\r\n	///////////////////// IMPLEMENTATION ////////////////////////////\r\n\r\n	var implementor = new StoreWarehouseInterface();\r\n	var walmart = "walmart";\r\n	var target = "target";\r\n	var locationName = walmart;\r\n	var locationX = new LocationX(implementor, locationName);\r\n\r\n	locationX.whatIsTheClosestWarehouseToLocation(locationX.name);\r\n\r\n	/*\r\n	//condition checks\r\n	if (implementor.can("callWarehouse")) {\r\n	//implementor.callWarehouse("6th Street");\r\n	}\r\n\r\n	if (implementor.can("isClosest")) {\r\n	//implementor.isClosest("3rd Ave");\r\n	}\r\n	*/</script>\r\n', '2014-03-20 17:44:22'),
(97, ' php', ' SOLID SRP', ' <?php\r\n\r\nclass User {\r\n\r\n    private $username;\r\n    private $password;\r\n\r\n    public function __construct() {\r\n\r\n    }\r\n\r\n    public function setUsername($username) {\r\n        $this -> username = $username;\r\n    }\r\n\r\n    public function getUsername() {\r\n        return $this -> username;\r\n    }\r\n\r\n    public function setPassword($password) {\r\n        $this -> password = $password;\r\n    }\r\n\r\n    public function getPassword() {\r\n        echo("<br>get password!!!");\r\n        return $this -> password;\r\n    }\r\n\r\n}\r\n\r\nclass EmailChanger {\r\n\r\n    private $accessChecker;\r\n\r\n    public function __construct($accessChecker) {\r\n        $this -> accessChecker = $accessChecker;\r\n    }\r\n\r\n    // Single Responsibility Principle: one class one responsibility\r\n    public function changeEmail($user) {\r\n        if ($this -> accessChecker -> checkAccess($user)) {\r\n            //grant permission\r\n            echo("<br>success");\r\n        } else {\r\n            echo("<br>fail");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass AccessChecker {\r\n    public function __construct() {\r\n        echo("<br>AccessChecker constructed...");\r\n    }\r\n\r\n    // Single Responsibility Principle: one class one responsibility\r\n    public function checkAccess($user) {\r\n\r\n        $bool_result = false;\r\n        // code to verify if user is valid.\r\n        if ($user -> getPassword() == "1234") {\r\n            $bool_result = true;\r\n        }\r\n\r\n        return $bool_result;\r\n    }\r\n\r\n}\r\n\r\n$user = new User();\r\n$user -> setUsername("Joe");\r\n$user -> setPassword("1234");\r\necho("<br>User:" . $user -> getUsername() . ":" . $user -> getPassword() . "!");\r\n\r\n$accessChecker = new AccessChecker();\r\n$emailChanger = new EmailChanger($accessChecker);\r\n\r\n$emailChanger -> changeEmail($user);\r\n?>', '2014-03-20 18:33:31'),
(98, ' php', ' SOLID OCP', ' <?php\r\ninterface Validator {\r\n\r\n      public function isValid($credentials);\r\n}\r\n\r\n\r\nclass CarLoanValidator implements Validator {\r\n\r\n    private $bool_result;\r\n\r\n    public function __construct() {\r\n\r\n    }\r\n\r\n    public function isValid($credentials) {\r\n        $bool_result = false;\r\n        echo("<br>Here is the custom validation code for CAR Loans with credentials:" . $credentials);\r\n        if ($credentials == "carLoanPlease") {\r\n            $bool_result = true;\r\n        }\r\n        return $bool_result;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nclass PersonalLoanValidator implements Validator {\r\n\r\n    private $bool_result;\r\n\r\n    public function __construct() {\r\n\r\n    }\r\n\r\n    public function isValid($credentials) {\r\n        $bool_result = false;\r\n        echo("<br>Here is the custom validation code for Personal Loans with credentials:" . $credentials);\r\n        if ($credentials == "personalLoanPlease") {\r\n            $bool_result = true;\r\n        }\r\n        return $bool_result;\r\n    }\r\n\r\n}\r\n\r\nclass LoanApprovalHandler {\r\n\r\n    private $result;\r\n\r\n    public function __construct() {\r\n        $this -> result = false;\r\n    }\r\n\r\n    public function getValidationForLoanTypeAndCredentials($loanType, $credentials) {\r\n        if ($loanType == "car") {\r\n            $CLV = new CarLoanValidator();\r\n            $result = $CLV -> isValid($credentials);\r\n        }\r\n        if ($loanType == "personal") {\r\n            $PLV = new PersonalLoanValidator();\r\n            $result = $PLV -> isValid($credentials);\r\n        }\r\n        return $result;\r\n    }\r\n\r\n}\r\n\r\n\r\necho("<br>OCP: Open/Closed Principle<br>");\r\n\r\n$lah = new LoanApprovalHandler();\r\n\r\n$result =  $lah -> getValidationForLoanTypeAndCredentials("car","carLoanPlease");\r\n \r\nif($result){\r\n    echo("Validation COMPLETE and ACCEPTED");\r\n}else{\r\n    echo("Validation COMPLETE and REJECTED");\r\n}\r\n\r\n\r\n?>', '2014-03-20 18:34:02'),
(99, ' php', ' SOLID LSP', ' <?php\r\nclass Bird {\r\n    \r\n     private $name;\r\n\r\n     public function __construct() {\r\n     $this -> name = "Bird";\r\n     }\r\n     \r\n    public function fly() {\r\n        echo("fly method");\r\n    }\r\n\r\n    public function eat() {\r\n        echo("eat method");\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Crow extends Bird {\r\n\r\n    public function __construct() {\r\n        $this -> name = "Crow";\r\n    }\r\n\r\n    //@override\r\n    public function fly() {\r\n        echo("<br>...as the crow flies...." . $this -> name . "");\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Ostrich extends Bird {\r\n\r\n    public function __construct() {\r\n        $this -> name = "Ostrich";\r\n    }\r\n\r\n    //@override\r\n    public function fly() {\r\n        echo("<br>...I''ll just walk, thanks...." . $this -> name . "");\r\n    }\r\n\r\n}\r\n\r\necho("<br>LSP: Liskov Substitution Principle<br>");\r\n$crow = new Crow();\r\n$ostrich = new Ostrich();\r\n\r\n$array = array($crow, $ostrich);\r\n\r\nforeach ($array as $bird) {\r\n\r\n    $bird -> fly();\r\n}\r\n\r\n?>', '2014-03-20 18:34:37'),
(100, ' php', ' SOLID ISP', ' <?php \r\n\r\ninterface Feedable extends Workable{\r\n    public function feed();\r\n}\r\n\r\ninterface Workable {\r\n    public function work();\r\n}\r\n\r\n\r\n\r\nclass Manager {\r\n    private $worker;\r\n    private $robot;\r\n\r\n    public function __construct() {\r\n        // allocate your stuff\r\n        //PHP doesn''t support multiple constructors.\r\n        //workaround is public static functions\r\n        /*\r\n         * public static function withRobot($robot){\r\n         * $instance = new self();\r\n         * $instance->constructWithRobot($robot);\r\n         * return $instance;\r\n         * }\r\n         *\r\n         * //usage:\r\n         * $manager = Manager::withRobot($robot);\r\n         */\r\n    }\r\n\r\n    public static function withWorker($worker) {\r\n        $instance = new self();\r\n        $instance -> constructWithWorker($worker);\r\n        return $instance;\r\n    }\r\n\r\n    public static function withRobot($robot) {\r\n        $instance = new self();\r\n        $instance -> constructWithRobot($robot);\r\n        return $instance;\r\n    }\r\n\r\n    public function constructWithWorker($worker) {\r\n        $this -> worker = $worker;\r\n    }\r\n\r\n    public function constructWithRobot($robot) {\r\n        $this -> robot = $robot;\r\n    }\r\n\r\n    public function manageWorker() {\r\n        $this -> worker -> work();\r\n        $this -> worker -> feed();\r\n    }\r\n\r\n    public function manageRobot() {\r\n        $this -> robot -> work();\r\n    }\r\n\r\n}\r\n\r\n\r\n \r\n \r\nclass Robot implements Workable{\r\n    \r\n    public function work(){\r\n        echo("<br>Robot working...no need to implement the ''feedable'' interface for robot.");   \r\n    }\r\n     \r\n}\r\n\r\n\r\n \r\nclass Worker implements Workable, Feedable{\r\n    \r\n    public function work(){\r\n        echo("<br>Worker working...");  \r\n    }\r\n    \r\n    public function feed(){\r\n        echo("<br>Worker feeding...");  \r\n    }\r\n}\r\n\r\necho("SOLID: ISP : Interface Segregation Principle");\r\n\r\n\r\n$worker = new Worker();\r\n$robot = new Robot();\r\n\r\n$manager = Manager::withWorker($worker);\r\n$manager -> manageWorker();\r\n\r\n$managerOfRobot = Manager::withRobot($robot);\r\n$managerOfRobot -> manageRobot();\r\n?>', '2014-03-20 18:35:02'),
(101, ' php', ' SOLID DIP', ' <?php\r\n////////INTERFACE//////////////////////////////////////\r\ninterface StoreInterface {\r\n\r\n    function callWarehouse($location);\r\n}\r\n\r\ninterface WarehouseInterface {\r\n\r\n    function isClosest($location);\r\n\r\n}\r\n\r\nclass ImplementorOfInterface implements StoreInterface , WarehouseInterface {\r\n    //@override Store Methods\r\n    public function callWarehouse($location) {\r\n        $result = $this -> isClosest($location);\r\n        return $result;\r\n    }\r\n\r\n    //@override Warehouse Methods\r\n    function isClosest($location) {\r\n        $warehouseE = new WarehouseE();\r\n        $distanceE = $warehouseE -> distanceTo($location);\r\n\r\n        $warehouseF = new WarehouseF();\r\n        $distanceF = $warehouseF -> distanceTo($location);\r\n\r\n        $warehouseG = new WarehouseG();\r\n        $distanceG = $warehouseG -> distanceTo($location);\r\n\r\n        $warehouses = array("warehouse e" => $distanceE, "warehouse f" => $distanceF, "warehouse g" => $distanceG);\r\n        $closest = array_keys($warehouses, min($warehouses));\r\n       \r\n        return $closest[0];\r\n        \r\n    }\r\n\r\n}\r\n\r\nclass Location {\r\n    public $name;\r\n    public $implementor;\r\n    public function __construct($implementor, $name) {\r\n        $this -> name = $name;\r\n        $this -> implementor = $implementor;\r\n    }\r\n\r\n    public function whatIsTheClosestWarehouseToLocation($location) {\r\n        echo("\\nLocation object calls the Concrete Interface for stores and warehouses");\r\n        $closest = $this -> implementor -> callWarehouse($location);\r\n        echo("\\n The closest is: ''" . $closest . "''");\r\n    }\r\n\r\n}\r\n\r\nclass WarehouseE {\r\n    public function distanceTo($location) {\r\n        if ($location == "myStoreLocation") {\r\n            $distance = 3.5;\r\n        }\r\n        if ($location == "target") {\r\n            $distance = 1.7;\r\n        }\r\n        return $distance;\r\n    }\r\n\r\n}\r\n\r\nclass WarehouseF {\r\n    public function distanceTo($location) {\r\n        if ($location == "myStoreLocation") {\r\n            $distance = 1.5;\r\n        }\r\n        if ($location == "target") {\r\n            $distance = 4.7;\r\n        }\r\n        return $distance;\r\n    }\r\n\r\n}\r\n\r\nclass WarehouseG {\r\n    public function distanceTo($location) {\r\n        if ($location == "myStoreLocation") {\r\n            $distance = 18.6;\r\n        }\r\n        if ($location == "target") {\r\n            $distance = 23.7;\r\n        }\r\n        return $distance;\r\n    }\r\n\r\n}\r\n\r\n$implementor = new ImplementorOfInterface();\r\n$myStoreLocation = "myStoreLocation";\r\n$target = "target";\r\n$location = new Location($implementor,$target);\r\n$location -> whatIsTheClosestWarehouseToLocation($location->name);\r\n?>', '2014-03-20 18:35:29'),
(105, 'php', ' code to html', '<?php  \r\nclass CodeToHtml{\r\n	 public static function viewCode($page){\r\n	 	$code =  htmlspecialchars(file_get_contents($page));\r\n		echo("<style> .codeViewClass{\r\n									background:black;\r\n									color:green;\r\n									height:400px;\r\n									overflow-y:scroll;\r\n									} </style>");\r\n		echo ("<div class=''codeViewClass''><pre>".$code."</pre></div>");\r\n	 } \r\n}\r\n?>', '2014-06-18 20:01:32'),
(106, ' web', ' Geocode', ' //HTML\r\n<!DOCTYPE html>\r\n<html>\r\n	<head>\r\n		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">\r\n		<meta charset="utf-8">\r\n		<title>GEOCODE</title>\r\n		<link rel="stylesheet" type="text/css" href="style.css">\r\n		<script src="geocodeX.js"></script>\r\n		<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>\r\n		\r\n		<script>\r\n		// this script has to be on html page.\r\n			var geocoder;\r\n			var map2;\r\n			function initialize() {\r\n				geocoder = new google.maps.Geocoder();\r\n				var mapOptions2 = {\r\n					zoom : 14,\r\n					center : new google.maps.LatLng(38.2555539, -85.750606),\r\n					mapTypeId : google.maps.MapTypeId.SATELLITE\r\n				};\r\n				map2 = new google.maps.Map(document.getElementById(''map-canvas2''), mapOptions2);\r\n			}\r\n			google.maps.event.addDomListener(window, ''load'', initialize);\r\n\r\n		</script>\r\n	</head>\r\n	<body>\r\n		<div id="map-canvas2"></div>\r\n		<div>\r\n			Address:\r\n			<input type="text" id="addressElementId" style=" width:200px" title="Address to Geocode" />\r\n		</div>\r\n		<div>\r\n			118 e main louisville ky 40202\r\n		</div>\r\n		<div>\r\n			<input type="button" onclick="codeAddress(''addressElementId'')" id="inputButtonGeocode" style="width:150px" title="Click to Geocode" value="Click to Geocode" />\r\n		</div>\r\n	</body>\r\n</html>\r\n\r\n// CSS\r\nhtml, body {\r\n	height: 100%;\r\n	margin: 0px;\r\n	padding: 0px\r\n}\r\n\r\n#map-canvas2 {\r\n	height: 200px;\r\n	margin: 0px;\r\n	padding: 50px\r\n}\r\n\r\n// JAVASCRIPT\r\n\r\nfunction codeAddress(addressElementId) {\r\n	var sAddress = document.getElementById(addressElementId).value;\r\n	geocoder.geocode({\r\n		''address'' : sAddress\r\n	}, function(results, status) {\r\n\r\n		if (status == google.maps.GeocoderStatus.OK) {\r\n			alert(results[0].geometry.location);\r\n\r\n			map2.setCenter(results[0].geometry.location);\r\n			var marker = new google.maps.Marker({\r\n				map : map2,\r\n				position : results[0].geometry.location\r\n			});\r\n\r\n		} else {\r\n			alert("Geocode was not successful for the following reason: " + status);\r\n		}\r\n	});\r\n}\r\n', '2014-04-01 16:18:11'),
(107, ' android', ' internal website', ' // JAVA\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        WebView   myWebView = (WebView) findViewById(R.id.webview);\r\n        WebSettings webSettings = myWebView.getSettings();\r\n        webSettings.setJavaScriptEnabled(true);\r\n        myWebView.loadUrl("file:///android_asset/index.html");\r\n    }\r\n\r\n\r\n}\r\n\r\n// XML\r\n <WebView  xmlns:android="http://schemas.android.com/apk/res/android"\r\n        android:id="@+id/webview"\r\n        android:layout_width="fill_parent"\r\n        android:layout_height="fill_parent"\r\n        />\r\n\r\n\r\n\r\n\r\n// mkdir "assets" on the same level as "java" and "res".\r\n\r\n//insert web files there\r\n\r\n//HTML\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">\r\n    <meta charset="utf-8">\r\n    <title>GEOCODE</title>\r\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n\r\n    <script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"></script>\r\n\r\n    <link rel="stylesheet" type="text/css" href="style.css">\r\n    <script src="geocodeX.js"></script>\r\n    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>\r\n\r\n    <script>\r\n		// this script has to be on html page.\r\n			var geocoder;\r\n			var map2;\r\n			function initialize() {\r\n				geocoder = new google.maps.Geocoder();\r\n				var mapOptions2 = {\r\n					zoom : 14,\r\n					center : new google.maps.LatLng(38.2555539, -85.750606),\r\n					mapTypeId : google.maps.MapTypeId.SATELLITE\r\n				};\r\n				map2 = new google.maps.Map(document.getElementById(''map-canvas2''), mapOptions2);\r\n			}\r\n			google.maps.event.addDomListener(window, ''load'', initialize);\r\n\r\n		</script>\r\n</head>\r\n<body>\r\n<div id="map-canvas2"></div>\r\n<div>\r\n    Address:\r\n    <input type="text" id="addressElementId" style=" width:200px" title="Address to Geocode" />\r\n</div>\r\n<div>\r\n    118 e main louisville ky 40202\r\n</div>\r\n<div>\r\n    <input type="button" onclick="codeAddress(''addressElementId'')" id="inputButtonGeocode" style="width:150px" title="Click to Geocode" value="Click to Geocode" />\r\n</div>\r\n</body>\r\n</html>\r\n\r\n// js\r\nfunction codeAddress(addressElementId) {\r\n	var sAddress = document.getElementById(addressElementId).value;\r\n	geocoder.geocode({\r\n		''address'' : sAddress\r\n	}, function(results, status) {\r\n\r\n		if (status == google.maps.GeocoderStatus.OK) {\r\n			alert(results[0].geometry.location);\r\n\r\n			map2.setCenter(results[0].geometry.location);\r\n			var marker = new google.maps.Marker({\r\n				map : map2,\r\n				position : results[0].geometry.location\r\n			});\r\n\r\n		} else {\r\n			alert("Geocode was not successful for the following reason: " + status);\r\n		}\r\n	});\r\n}\r\n\r\n\r\n// CSS\r\nhtml, body {\r\n	height: 100%;\r\n	margin: 0px;\r\n	padding: 0px\r\n}\r\n\r\n#map-canvas2 {\r\n	height: 200px;\r\n	margin: 0px;\r\n	padding: 50px\r\n}\r\n/*------------------DESKTOP----------------*/\r\n\r\n @media screen and (max-width:5000px) {\r\n\r\n}\r\n\r\n/*------------------TABLET----------------*/\r\n @media screen and (max-width:1024px) {\r\n\r\n}\r\n\r\n/*------------------iPhone----------------*/\r\n @media screen and (max-width:480px) {\r\n\r\n}', '2014-04-01 17:49:11'),
(114, ' ios', ' video streaming', ' HTTP LIVE STREAMING\r\n------------------------------------------------------------\r\n\r\nPREPARATION:\r\n	1) download Apple Media Tools\r\n	2)The Media File Segmenter (mediafilesegmenter) divides a .mov, .mp4, .m4v, .m4a, or .mp3 file into small media segments and creates an index file.\r\n\r\n            On the command line, type something like this: mediafilesegmenter movie.mp4.\r\n\r\n	3) configure MIME types in apache''s httpd.conf\r\n    \r\n    4) install on server\r\n    \r\n    5) code to receive on the web\r\n    \r\n    6) code to receive on device\r\n------------------------------------------------------------\r\n *example of mediafilesegmenter result in terminal.\r\n\r\nBayon-Forte:00_movies BForte$ mediafilesegmenter -t 10 stream1polarBear.ts\r\nApr  9 2014 17:05:01.251: Using floating point is not backward compatible to iOS 4.1 or earlier devices\r\nApr  9 2014 17:05:01.252: Processing file /Users/BForte/Desktop/00_movies/stream1polarBear.ts\r\nApr  9 2014 17:05:01.279: Invalid media type, track 1\r\nApr  9 2014 17:05:01.294: Finalized fileSequence0.mp3\r\nApr  9 2014 17:05:01.294: segment bitrate 191.76 kbits/sec is new max\r\nApr  9 2014 17:05:01.310: Finalized fileSequence1.mp3\r\nApr  9 2014 17:05:01.310: segment bitrate 192.06 kbits/sec is new max\r\nApr  9 2014 17:05:01.325: Finalized fileSequence2.mp3\r\nApr  9 2014 17:05:01.327: Finalized fileSequence3.mp3\r\nApr  9 2014 17:05:01.327: segment bitrate 192.49 kbits/sec is new max\r\nApr  9 2014 17:05:01.327: average bit rate is 299.30 kbits/sec - max file bit rate is 192.49 kbits/sec\r\nBayon-Forte:00_movies BForte$\r\n\r\n\r\n*MIME TYPES TO CONFIGURE:\r\neither/or   apache/httpd.conf  or .htaccess\r\n\r\n# For HTTP LIVE STREAMING\r\nAddType application/x-mpegURL .m3u8\r\nAddType video/MP2T .ts\r\nAddType audio/MPEG3 .mp3\r\nAddType audio/aac .aac\r\nAddType audio/mpeg4 .m4a\r\nAddType video/mpeg4 .m4v, .mp4\r\n------------------------------------------------------------\r\n\r\n\r\n// WEBSERVER:\r\n1) load all your .ts file sequences\r\n2) load your prog_index.m3u8 file\r\n\r\n------------------------------------------------------------\r\n\r\n// WEB DIGESTION:\r\n\r\n<video width="320" height="240" controls>\r\n  <source src="http://172.16.100.100/VideoStreaming/attempt2/prog_index.m3u8" type="video/mp4">\r\n  \r\n  Your browser does not support the video tag.\r\n</video>\r\n\r\n/*\r\n   HTTP LIVE STREAMING NOTES:\r\n   /////////      FIREFOX/ CHROME  ??? ///////////\r\n    forteworks to firefox: NO\r\n    forteworks to chrome: NO\r\n    localhost to chrome: NO\r\n    localhost to Firefox: NO\r\n   /////////      FIREFOX/ CHROME  ??? ///////////\r\n*/\r\n------------------------------------------------------------\r\n\r\n// OBJECTIVE-C DIGESTION:\r\n.h\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface FBFViewController : UIViewController\r\n\r\n- (void)moviePlayBackDidFinish:(NSNotification *)notification;\r\n- (void)movieScalingModeDidFinish:(NSNotification *)notification;\r\n@end\r\n\r\n.m\r\n\r\n#import "FBFViewController.h"\r\n#import <MediaPlayer/MediaPlayer.h>\r\n@interface FBFViewController ()\r\n@property (strong, nonatomic) MPMoviePlayerController *streamPlayer;\r\n@end\r\n\r\n@implementation FBFViewController\r\n\r\n\r\n- (void)viewDidLoad {\r\n	[super viewDidLoad];\r\n\r\n	NSLog(@"\\n F I L E -> F U N C T I O N : \\n %s \\n", __FUNCTION__);\r\n	NSString *pathWorkMacLocal = @"http://172.16.100.100/VideoStreaming/attempt2/prog_index.m3u8";\r\n	NSString *pathForteworks = @"http://www.forteworks.com/vid_stream/prog_index.m3u8";\r\n\r\n	NSString *path = pathWorkMacLocal;\r\n\r\n	// Do any additional setup after loading the view, typically from a nib.\r\n	NSURL *streamURL = [NSURL URLWithString:path];\r\n\r\n	_streamPlayer = [[MPMoviePlayerController alloc] initWithContentURL:streamURL];\r\n\r\n	// depending on your implementation your view may not have it''s bounds set here\r\n	// in that case consider calling the following 4 msgs later\r\n	[self.streamPlayer.view setFrame:self.view.bounds];\r\n\r\n	self.streamPlayer.controlStyle = MPMovieControlStyleEmbedded;\r\n\r\n	[self.view addSubview:self.streamPlayer.view];\r\n\r\n	[self.streamPlayer play];\r\n}\r\n\r\n- (void)moviePlayBackDidFinish:(NSNotification *)notification {\r\n}\r\n\r\n- (void)movieScalingModeDidFinish:(NSNotification *)notification {\r\n}\r\n\r\n- (void)didReceiveMemoryWarning {\r\n	[super didReceiveMemoryWarning];\r\n	// Dispose of any resources that can be recreated.\r\n}\r\n\r\n@end\r\n\r\n\r\n\r\n\r\n', '2014-04-10 14:50:55'),
(115, ' php', ' zend framework', ' Zend Framework Quickstart:\r\n( check the version you have against the directions)\r\n\r\nquick start zf commands:\r\nzf create project quickstart\r\nzf enable layout\r\n\r\nBOOTSTRAP.PHP\r\n\r\nclass Bootstrap extends Zend_Application_Bootstrap_Bootstrap\r\n{\r\n    protected function _initDoctype()\r\n    {\r\n        $this->bootstrap(''view'');\r\n        $view = $this->getResource(''view'');\r\n        $view->doctype(''XHTML1_STRICT'');\r\n    }\r\n}\r\n\r\nAPPLICATION.INI\r\n; application/configs/application.ini\r\n; Add to [production] section:\r\nresources.view[] =\r\n\r\n\r\n// SET UP THE 3 ENVIRONMENTS:\r\nzf configure db-adapter  ''adapter=PDO_SQLITE&dbname=APPLICATION_PATH "/../data/db/guestbook.db"''  production\r\nzf configure db-adapter  ''adapter=PDO_SQLITE&dbname=APPLICATION_PATH "/../data/db/guestbook-testing.db"''  testing\r\nzf configure db-adapter  ''adapter=PDO_SQLITE&dbname=APPLICATION_PATH "/../data/db/guestbook-dev.db"''  development\r\n\r\n// make the data/db directory world-writable\r\nmkdir -p data/db; chmod -R a+rwX data\r\n\r\n//see scripts\r\nschema.sqlite.sql\r\ndata.sqlite.sql\r\nload.sqlite.php\r\n\r\n// run the php script\r\nphp load.sqlite.php -w\r\n\r\nzf create db-table Guestbook guestbook\r\n// application/models/DbTable/Guestbook.php\r\n\r\nzf create model GuestbookMapper\r\n// application/models/GuestbookMapper.php\r\n\r\nzf create model Guestbook\r\n// application/models/Guestbook.php\r\n\r\n\r\nzf create controller Guestbook\r\n// application/controllers/GuestbookController.php\r\n<!-- application/views/scripts/guestbook/index.phtml -->\r\n\r\nzf create form Guestbook\r\n// application/forms/Guestbook.php\r\n\r\n\r\nzf create action sign Guestbook\r\n// application/controllers/GuestbookController.php { adds the sign method to the controller}\r\n<!-- application/views/scripts/guestbook/sign.phtml -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==========================================================\r\nlink library of app to main zend library:\r\n# Symlink:\r\n% cd library; ln -s path/to/ZendFramework/library/Zend .\r\n \r\n# Copy:\r\n% cd library; cp -r path/to/ZendFramework/library/Zend .\r\n\r\n\r\n//=== = = = = = = \r\napache >> httpd.conf  >> vhosts\r\n<VirtualHost *:80>\r\n    ServerName quickstart.local\r\n    DocumentRoot /path/to/quickstart/public\r\n \r\n    SetEnv APPLICATION_ENV "development"\r\n \r\n    <Directory /path/to/quickstart/public>\r\n        DirectoryIndex index.php\r\n        AllowOverride All\r\n        Order allow,deny\r\n        Allow from all\r\n    </Directory>\r\n</VirtualHost>\r\n\r\n$ >> sudo /etc/hosts\r\n127.0.0.1 quickstart.local\r\n\r\n\r\n\r\n\r\n\r\n127.0.0.1 quickstart.local', '2014-05-14 18:20:12');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(112, ' android', ' GCM Client', ' \r\n// GRADLE  ------------------------------------------------------------------------------\r\napply plugin: ''android''\r\n\r\nandroid {\r\n    compileSdkVersion 19\r\n    buildToolsVersion "19.0.0"\r\n\r\n    defaultConfig {\r\n        minSdkVersion 14\r\n        targetSdkVersion 19\r\n        versionCode 1\r\n        versionName "1.0"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            runProguard false\r\n            proguardFiles getDefaultProguardFile(''proguard-android.txt''), ''proguard-rules.txt''\r\n        }\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    compile ''com.google.android.gms:play-services:4.0.30''\r\n    compile ''com.android.support:support-v4:19.0.1+''\r\n}\r\n\r\n\r\n\r\n// MANIFEST  ------------------------------------------------------------------------------\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<manifest xmlns:android="http://schemas.android.com/apk/res/android"\r\n    package="com.example.gcmandroidclient" >\r\n\r\n\r\n    <uses-permission android:name="android.permission.INTERNET" />\r\n    <uses-permission android:name="android.permission.GET_ACCOUNTS" />\r\n\r\n    <uses-permission android:name="android.permission.WAKE_LOCK" />\r\n\r\n    <permission\r\n        android:name="com.example.gcmandroidclient.permission.C2D_MESSAGE"\r\n        android:protectionLevel="signature" />\r\n\r\n    <uses-permission android:name="com.example.gcmandroidclient.permission.C2D_MESSAGE" />\r\n    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />\r\n    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\r\n    <uses-permission android:name="android.permission.VIBRATE" />\r\n\r\n\r\n\r\n    <application\r\n        android:allowBackup="true"\r\n        android:icon="@drawable/ic_launcher"\r\n        android:label="@string/app_name"\r\n        android:theme="@style/AppTheme" >\r\n        <activity\r\n            android:name="com.example.gcmandroidclient.MainActivity"\r\n            android:configChanges="orientation|keyboardHidden"\r\n            android:label="@string/app_name" >\r\n\r\n        </activity>\r\n        <activity\r\n            android:name=".RegisterActivity"\r\n            android:label="@string/app_name" >\r\n            <intent-filter>\r\n                <action android:name="android.intent.action.MAIN" />\r\n\r\n                <category android:name="android.intent.category.LAUNCHER" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <receiver\r\n            android:name=".GcmBroadcastReceiver"\r\n            android:permission="com.google.android.c2dm.permission.SEND" >\r\n            <intent-filter>\r\n                <action android:name="com.google.android.c2dm.intent.RECEIVE" />\r\n                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />\r\n\r\n                <category android:name="com.example.gcmandroidclient" />\r\n            </intent-filter>\r\n        </receiver>\r\n\r\n        <service android:name=".GCMNotificationIntentService" />\r\n\r\n    </application>\r\n\r\n</manifest>\r\n\r\n\r\n\r\n// XML LAYOUT\r\nactivity_register.xml\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:orientation="vertical" android:background="#ffffff">\r\n\r\n    <ImageView\r\n            android:src="@drawable/gcm_logo"\r\n            android:layout_width="wrap_content"\r\n            android:layout_height="wrap_content"\r\n            android:layout_gravity="center"\r\n            android:layout_marginTop="10px"\r\n            android:layout_marginBottom="20dip"/>\r\n\r\n         <Button android:id="@+id/btnGCMRegister"\r\n         android:layout_width="fill_parent"\r\n         android:layout_height="wrap_content"\r\n         android:text="Register with Google GCM Server"\r\n         android:layout_margin="10dip"/>\r\n\r\n\r\n     <Button android:id="@+id/btnAppShare"\r\n         android:layout_width="fill_parent"\r\n         android:layout_height="wrap_content"\r\n         android:text="Share GCM-RegId with App Server"\r\n         android:layout_margin="10dip"/>\r\n\r\n</LinearLayout>\r\n\r\n\r\n{ note: without all the drawables , you''ll have headaches...}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//JAVA ------------------------------------------------------------------------------\r\nconfig.java\r\npackage com.example.gcmandroidclient;\r\n\r\n/**\r\n * Created by BForte on 4/3/14.\r\n */\r\npublic interface Config {\r\n\r\n	// ---  PHP ----------------------------------------------------\r\n\r\n	// used to share GCM regId with application server - using php app server\r\n	// <original>\r\n	//static final String APP_SERVER_URL = "http://192.168.1.17/gcm/gcm.php?shareRegId=1";\r\n\r\n	static final String APP_SERVER_URL = "http://172.16.100.100/gcmserver1/gcm.php?shareRegId=1";\r\n\r\n	// ---  JAVA ----------------------------------------------------\r\n	// GCM server using java\r\n	// static final String APP_SERVER_URL =\r\n	// "http://192.168.1.17:8080/GCM-App-Server/GCMNotification?shareRegId=1";\r\n\r\n	// ---  GOOGLE ----------------------------------------------------\r\n\r\n	// Google Project Number\r\n	static final String GOOGLE_PROJECT_ID = "382927379955";\r\n	static final String MESSAGE_KEY = "messageKey";\r\n\r\n	// ---  PERSONAL ----------------------------------------------------\r\n	/*\r\n	 * // personal info: //172.16.100.100 or 172.16.103.255 // 127.0.0.1 //gcmserver1/index.php\r\n	 * Project ID: axial-camp-538\r\n	 * Project Number: 382927379955\r\n	 * Server API Key: AIzaSyCD-5JCBrJ8zpO0cw9XCCo5fgdpR_pKGA8\r\n	 * Browser API Key: AIzaSyDJtNVZ6FrQHfxH9mwAWuqovZ0utp5v6o\r\n	 */\r\n\r\n}\r\n\r\n\r\n// GcmBroadcastReceiver.java\r\n\r\npackage com.example.gcmandroidclient;\r\n\r\n/**\r\n * Created by BForte on 4/3/14.\r\n */\r\n\r\nimport android.app.Activity;\r\nimport android.content.ComponentName;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.support.v4.content.WakefulBroadcastReceiver;\r\nimport android.util.Log;\r\n\r\npublic class GcmBroadcastReceiver extends WakefulBroadcastReceiver {\r\n\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n        Log.d("DEBUG","receiver on receive");\r\n        ComponentName comp = new ComponentName(context.getPackageName(),\r\n                GCMNotificationIntentService.class.getName());\r\n        startWakefulService(context, (intent.setComponent(comp)));\r\n        setResultCode(Activity.RESULT_OK);\r\n    }\r\n}\r\n\r\n\r\n// JAVA\r\nGCMNotificationIntentService.java\r\n\r\npackage com.example.gcmandroidclient;\r\n\r\n/**\r\n * Created by BForte on 4/3/14.\r\n */\r\n\r\nimport android.app.IntentService;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.SystemClock;\r\nimport android.support.v4.app.NotificationCompat;\r\nimport android.util.Log;\r\n\r\nimport com.google.android.gms.gcm.GoogleCloudMessaging;\r\n\r\npublic class GCMNotificationIntentService extends IntentService {\r\n\r\n    public static final int NOTIFICATION_ID = 1;\r\n    private NotificationManager mNotificationManager;\r\n    NotificationCompat.Builder builder;\r\n\r\n    public GCMNotificationIntentService() {\r\n        super("GcmIntentService");\r\n    }\r\n\r\n    public static final String TAG = "GCMNotificationIntentService";\r\n\r\n    @Override\r\n    protected void onHandleIntent(Intent intent) {\r\n        Bundle extras = intent.getExtras();\r\n        GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(this);\r\n\r\n        String messageType = gcm.getMessageType(intent);\r\n\r\n        if (!extras.isEmpty()) {\r\n            if (GoogleCloudMessaging.MESSAGE_TYPE_SEND_ERROR\r\n                    .equals(messageType)) {\r\n                sendNotification("Send error: " + extras.toString());\r\n            } else if (GoogleCloudMessaging.MESSAGE_TYPE_DELETED\r\n                    .equals(messageType)) {\r\n                sendNotification("Deleted messages on server: "\r\n                        + extras.toString());\r\n            } else if (GoogleCloudMessaging.MESSAGE_TYPE_MESSAGE\r\n                    .equals(messageType)) {\r\n\r\n                for (int i = 0; i < 3; i++) {\r\n                    Log.i(TAG,\r\n                            "Working... " + (i + 1) + "/5 @ "\r\n                                    + SystemClock.elapsedRealtime());\r\n                    try {\r\n                        Thread.sleep(5000);\r\n                    } catch (InterruptedException e) {\r\n                    }\r\n\r\n                }\r\n                Log.i(TAG, "Completed work @ " + SystemClock.elapsedRealtime());\r\n\r\n                sendNotification("Message Received from Google GCM Server: "\r\n                        + extras.get(Config.MESSAGE_KEY));\r\n                Log.i(TAG, "Received: " + extras.toString());\r\n            }\r\n        }\r\n        GcmBroadcastReceiver.completeWakefulIntent(intent);\r\n    }\r\n\r\n    private void sendNotification(String msg) {\r\n        Log.d(TAG, "Preparing to send notification...: " + msg);\r\n        mNotificationManager = (NotificationManager) this\r\n                .getSystemService(Context.NOTIFICATION_SERVICE);\r\n\r\n        PendingIntent contentIntent = PendingIntent.getActivity(this, 0,\r\n                new Intent(this, MainActivity.class), 0);\r\n\r\n        NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(\r\n                this).setSmallIcon(R.drawable.gcm_cloud)\r\n                .setContentTitle("GCM Notification")\r\n                .setStyle(new NotificationCompat.BigTextStyle().bigText(msg))\r\n                .setContentText(msg);\r\n\r\n        mBuilder.setContentIntent(contentIntent);\r\n        mNotificationManager.notify(NOTIFICATION_ID, mBuilder.build());\r\n        Log.d(TAG, "Notification sent successfully.");\r\n    }\r\n}\r\n\r\n\r\n// MainActivity.java\r\npackage com.example.gcmandroidclient;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n    ShareExternalServer appUtil;\r\n    String regId;\r\n    AsyncTask<Void, Void, String> shareRegidTask;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        appUtil = new ShareExternalServer();\r\n\r\n        regId = getIntent().getStringExtra("regId");\r\n        Log.d("MainActivity", "regId: " + regId);\r\n\r\n        final Context context = this;\r\n        shareRegidTask = new AsyncTask<Void, Void, String>() {\r\n            @Override\r\n            protected String doInBackground(Void... params) {\r\n                String result = appUtil.shareRegIdWithAppServer(context, regId);\r\n                return result;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute(String result) {\r\n                shareRegidTask = null;\r\n                Toast.makeText(getApplicationContext(), result,\r\n                        Toast.LENGTH_LONG).show();\r\n            }\r\n\r\n        };\r\n        shareRegidTask.execute(null, null, null);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//RegisterActivity.java\r\n\r\npackage com.example.gcmandroidclient;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager.NameNotFoundException;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.gcm.GoogleCloudMessaging;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class RegisterActivity extends Activity {\r\n\r\n    Button btnGCMRegister;\r\n    Button btnAppShare;\r\n    GoogleCloudMessaging gcm;\r\n    Context context;\r\n    String regId;\r\n\r\n    public static final String REG_ID = "regId";\r\n    private static final String APP_VERSION = "appVersion";\r\n\r\n    static final String TAG = "Register Activity";\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register);\r\n/*\r\n        String urlString = "localhost";\r\n\r\n        try {\r\n            InetAddress x = InetAddress.getByName(urlString);\r\n            Log.d("DEBUG getByName:", "Success");\r\n        } catch (UnknownHostException e) {\r\n            Log.d("DEBUG :", "FAIL: UnknownHostException");\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n        InetAddress address = null;\r\n        try {\r\n            address = InetAddress.getByName(new URL(urlString).getHost());\r\n            Log.d("DEBUG address:", String.valueOf(address));\r\n        } catch (UnknownHostException e) {\r\n            Log.d("DEBUG :", "FAIL: UnknownHostException");\r\n            e.printStackTrace();\r\n        } catch (MalformedURLException e) {\r\n            Log.d("DEBUG :", "FAIL: MalformedURLException");\r\n            e.printStackTrace();\r\n        }\r\n        String ip = address.getHostAddress();\r\n        Log.d("DEBUG id:", ip);\r\n*/\r\n        context = getApplicationContext();\r\n\r\n        btnGCMRegister = (Button) findViewById(R.id.btnGCMRegister);\r\n        btnGCMRegister.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View arg0) {\r\n                if (TextUtils.isEmpty(regId)) {\r\n                    regId = registerGCM();\r\n                    Log.d("RegisterActivity", "GCM RegId: " + regId);\r\n                } else {\r\n                    Toast.makeText(getApplicationContext(),\r\n                            "Already Registered with GCM Server!",\r\n                            Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        btnAppShare = (Button) findViewById(R.id.btnAppShare);\r\n        btnAppShare.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View arg0) {\r\n                if (TextUtils.isEmpty(regId)) {\r\n                    Toast.makeText(getApplicationContext(), "RegId is empty!",\r\n                            Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent i = new Intent(getApplicationContext(),\r\n                            MainActivity.class);\r\n                    i.putExtra("regId", regId);\r\n                    Log.d("RegisterActivity",\r\n                            "onClick of Share: Before starting main activity.");\r\n                    startActivity(i);\r\n                    finish();\r\n                    Log.d("RegisterActivity", "onClick of Share: After finish.");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public String registerGCM() {\r\n\r\n        gcm = GoogleCloudMessaging.getInstance(this);\r\n        regId = getRegistrationId(context);\r\n\r\n        if (TextUtils.isEmpty(regId)) {\r\n\r\n            registerInBackground();\r\n\r\n            Log.d("RegisterActivity",\r\n                    "registerGCM - successfully registered with GCM server - regId: "\r\n                            + regId);\r\n        } else {\r\n            Toast.makeText(getApplicationContext(),\r\n                    "RegId already available. RegId: " + regId,\r\n                    Toast.LENGTH_LONG).show();\r\n        }\r\n        return regId;\r\n    }\r\n\r\n    private String getRegistrationId(Context context) {\r\n        final SharedPreferences prefs = getSharedPreferences(\r\n                MainActivity.class.getSimpleName(), Context.MODE_PRIVATE);\r\n        String registrationId = prefs.getString(REG_ID, "");\r\n        if (registrationId.isEmpty()) {\r\n            Log.i(TAG, "Registration not found.");\r\n            return "";\r\n        }\r\n        int registeredVersion = prefs.getInt(APP_VERSION, Integer.MIN_VALUE);\r\n        int currentVersion = getAppVersion(context);\r\n        if (registeredVersion != currentVersion) {\r\n            Log.i(TAG, "App version changed.");\r\n            return "";\r\n        }\r\n        return registrationId;\r\n    }\r\n\r\n    private static int getAppVersion(Context context) {\r\n        try {\r\n            PackageInfo packageInfo = context.getPackageManager()\r\n                    .getPackageInfo(context.getPackageName(), 0);\r\n            return packageInfo.versionCode;\r\n        } catch (NameNotFoundException e) {\r\n            Log.d("RegisterActivity",\r\n                    "I never expected this! Going down, going down!" + e);\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    private void registerInBackground() {\r\n        new AsyncTask<Void, Void, String>() {\r\n            @Override\r\n            protected String doInBackground(Void... params) {\r\n                String msg = "";\r\n                try {\r\n                    if (gcm == null) {\r\n                        gcm = GoogleCloudMessaging.getInstance(context);\r\n                    }\r\n                    regId = gcm.register(Config.GOOGLE_PROJECT_ID);\r\n                    Log.d("RegisterActivity", "registerInBackground - regId: "\r\n                            + regId);\r\n                    msg = "Device registered, registration ID=" + regId;\r\n\r\n                    storeRegistrationId(context, regId);\r\n                } catch (IOException ex) {\r\n                    msg = "Error :" + ex.getMessage();\r\n                    Log.d("RegisterActivity", "Error: " + msg);\r\n                }\r\n                Log.d("RegisterActivity", "AsyncTask completed: " + msg);\r\n                return msg;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute(String msg) {\r\n                Toast.makeText(getApplicationContext(),\r\n                        "Registered with GCM Server." + msg, Toast.LENGTH_LONG)\r\n                        .show();\r\n            }\r\n        }.execute(null, null, null);\r\n    }\r\n\r\n    private void storeRegistrationId(Context context, String regId) {\r\n        final SharedPreferences prefs = getSharedPreferences(\r\n                MainActivity.class.getSimpleName(), Context.MODE_PRIVATE);\r\n        int appVersion = getAppVersion(context);\r\n        Log.i(TAG, "Saving regId on app version " + appVersion);\r\n        SharedPreferences.Editor editor = prefs.edit();\r\n        editor.putString(REG_ID, regId);\r\n        editor.putInt(APP_VERSION, appVersion);\r\n        editor.commit();\r\n    }\r\n}\r\n\r\n /*\r\n   * Checklist – Things that may go wrong:\r\n\r\nCheck if you have created the ‘Server Key’ there are different types of keys available in Google credentials.\r\nCheck if you are using your public-IP address instead of local-ip, in the ‘Edit Allowed IPs’ in Google credentials.\r\nCheck if you are using the local-ip address instead of ‘localhost’ in connecting with the custom web application in the Android App.\r\nCheck if you have given the right Google project id in the Android app.\r\nCheck if you have added permission for Internet in Android manifest file.\r\nCheck if you have added/logged in using your Google account in AVD settings.\r\nGoogle-play-service-Lib project may not be added in the Android app project dependency.\r\nIf the GCM registration_id is wrong, following is the response sent from Google cloud messaging server to our web application.\r\n{"multicast_id":7048577678678825845,"success":0,"failure":1,"canonical_ids":0,"results":[{"error":"InvalidRegistration"}]}\r\nConnection to GCM server is ok and the server has responded. If the Google API key is wrong or the IP address of the server machine is not white listed at Google GCM server. Then we will get,\r\nUnauthorized Error 401\r\nIn this example, passed data must be a JSON array, check if the arguments are being sent in the expected format. We may get error,\r\nField "data" must be a JSON array:\r\n   */\r\n\r\n\r\n// ShareExternalServer.java\r\n\r\npackage com.example.gcmandroidclient;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\n\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.HashMap;\r\nimport java.util.Iterator;\r\nimport java.util.Map;\r\nimport java.util.Map.Entry;\r\n\r\npublic class ShareExternalServer {\r\n\r\n    public String shareRegIdWithAppServer(final Context context,\r\n                                          final String regId) {\r\n\r\n        String result = "";\r\n        Map<String, String> paramsMap = new HashMap<String, String>();\r\n        paramsMap.put("regId", regId);\r\n        Log.d("DEBUG","shareExternalServer spot A");\r\n        try {\r\n            URL serverUrl = null;\r\n            try {\r\n                serverUrl = new URL(Config.APP_SERVER_URL);\r\n                Log.d("DEBUG serverUrl", String.valueOf(serverUrl));\r\n            } catch (MalformedURLException e) {\r\n                Log.e("AppUtil", "URL Connection Error: "\r\n                        + Config.APP_SERVER_URL, e);\r\n                result = "Invalid URL: " + Config.APP_SERVER_URL;\r\n            }\r\n\r\n            StringBuilder postBody = new StringBuilder();\r\n            Iterator<Entry<String, String>> iterator = paramsMap.entrySet()\r\n                    .iterator();\r\n\r\n            while (iterator.hasNext()) {\r\n                Entry<String, String> param = iterator.next();\r\n                postBody.append(param.getKey()).append(''='')\r\n                        .append(param.getValue());\r\n                if (iterator.hasNext()) {\r\n                    postBody.append(''&'');\r\n                }\r\n            }\r\n            String body = postBody.toString();\r\n            byte[] bytes = body.getBytes();\r\n            HttpURLConnection httpCon = null;\r\n            try {\r\n                httpCon = (HttpURLConnection) serverUrl.openConnection();\r\n                httpCon.setDoOutput(true);\r\n                httpCon.setUseCaches(false);\r\n                httpCon.setFixedLengthStreamingMode(bytes.length);\r\n                httpCon.setRequestMethod("POST");\r\n                httpCon.setRequestProperty("Content-Type",\r\n                        "application/x-www-form-urlencoded;charset=UTF-8");\r\n                OutputStream out = httpCon.getOutputStream();\r\n                out.write(bytes);\r\n                out.close();\r\n\r\n                int status = httpCon.getResponseCode();\r\n                if (status == 200) {\r\n                    result = "RegId shared with Application Server. RegId: "\r\n                            + regId;\r\n\r\n                    Log.d("DEBUG result",result);\r\n                } else {\r\n                    result = "Post Failure." + " Status: " + status;\r\n                    Log.d("DEBUG FAIL result",result);\r\n                }\r\n            } finally {\r\n                if (httpCon != null) {\r\n                    httpCon.disconnect();\r\n                }\r\n            }\r\n\r\n        } catch (IOException e) {\r\n            result = "Post Failure. Error in sharing with App Server.";\r\n            Log.e("AppUtil", "Error in sharing with App Server: " + e);\r\n            Log.d("DEBUG FAIL exception","IOException");\r\n        }\r\n        return result;\r\n    }\r\n}\r\n', '2014-04-08 13:46:29'),
(111, ' php', ' gcm server', ' \r\n\r\n// index.php\r\n (strippped out the  tags)\r\n   Google Cloud Messaging (GCM) Server in PHP \r\n    f o r m    method="post" action="gcm.php/?push=1">                                      \r\n                                     \r\n        textarea rows="2" name="message" cols="23" placeholder="Message to transmit via GCM"       textarea \r\n       \r\n       input type="submit"  value="Send Push Notification via GCM"  \r\n    f o r m\r\n    <?php echo $pushStatus; ?>      \r\n \r\n\r\n// gcm.php\r\n\r\n<?php\r\n\r\n/*\r\n * Project ID: axial-camp-538\r\nProject Number:  382927379955\r\nServer API Key: AIzaSyCD-5JCBrJ8zpO0cw9XCCo5fgdpR_pKGA8\r\nBrowser API Key: AIzaSyDJtNVZ6FrQHfxH9mwAWuqovZ0utp5v6o\r\n */\r\n\r\n\r\n  //generic php function to send GCM push notification\r\n   function sendPushNotificationToGCM($registatoin_ids, $message) {\r\n   	echo("sendPushNotificationToGCM:".$registatoin_ids." : ".$message);\r\n	echo("<pre>");print_r($registatoin_ids); echo(''</pre>''); \r\n	echo("<pre>");print_r($message); echo(''</pre>''); \r\n    //Google cloud messaging GCM-API url\r\n        $url = ''https://android.googleapis.com/gcm/send'';\r\n        $fields = array(\r\n            ''registration_ids'' => $registatoin_ids,\r\n            ''data'' => $message,\r\n        );\r\n    // Google Cloud Messaging GCM API Key\r\n    define("GOOGLE_API_KEY", "AIzaSyCD-5JCBrJ8zpO0cw9XCCo5fgdpR_pKGA8");    \r\n        $headers = array(\r\n            ''Authorization: key='' . GOOGLE_API_KEY,\r\n            ''Content-Type: application/json''\r\n        );\r\n        $ch = curl_init();\r\n        curl_setopt($ch, CURLOPT_URL, $url);\r\n        curl_setopt($ch, CURLOPT_POST, true);\r\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\r\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n    curl_setopt ($ch, CURLOPT_SSL_VERIFYHOST, 0); \r\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($fields));\r\n        $result = curl_exec($ch);   \r\n		echo("<br><br>RESULT:".$result);    \r\n        if ($result === FALSE) {\r\n            die(''Curl failed: '' . curl_error($ch));\r\n        }\r\n        curl_close($ch);\r\n        return $result;\r\n    }\r\n?>\r\n<?php\r\n   echo("</br>".__FILE__);\r\n  //this block is to post message to GCM on-click\r\n  $pushStatus = ""; \r\n  if(!empty($_GET["push"])) {\r\n  	echo("<br>spot 1"); \r\n    $gcmRegID  = file_get_contents("GCMRegId.txt");\r\n    $pushMessage = $_POST["message"]; \r\n    if (isset($gcmRegID) && isset($pushMessage)) {\r\n    	echo("<br>spot 2");     \r\n      $gcmRegIds = array($gcmRegID);\r\n      $message = array("messageKey" => $pushMessage); \r\n      $pushStatus = sendPushNotificationToGCM($gcmRegIds, $message);\r\n    }   \r\n  }\r\n   \r\n  //this block is to receive the GCM regId from external (mobile apps)\r\n  if(!empty($_GET["shareRegId"])) {\r\n  	echo("<br>spot 3"); \r\n    $gcmRegID  = $_POST["regId"]; \r\n    file_put_contents("GCMRegId.txt",$gcmRegID);\r\n    echo "Ok!";\r\n    exit;\r\n  } \r\n  \r\n  /*\r\n   * Checklist – Things that may go wrong:\r\n\r\nCheck if you have created the ‘Server Key’ there are different types of keys available in Google credentials.\r\nCheck if you are using your public-IP address instead of local-ip, in the ‘Edit Allowed IPs’ in Google credentials.\r\nCheck if you are using the local-ip address instead of ‘localhost’ in connecting with the custom web application in the Android App.\r\nCheck if you have given the right Google project id in the Android app.\r\nCheck if you have added permission for Internet in Android manifest file.\r\nCheck if you have added/logged in using your Google account in AVD settings.\r\nGoogle-play-service-Lib project may not be added in the Android app project dependency.\r\nIf the GCM registration_id is wrong, following is the response sent from Google cloud messaging server to our web application. \r\n{"multicast_id":7048577678678825845,"success":0,"failure":1,"canonical_ids":0,"results":[{"error":"InvalidRegistration"}]}\r\nConnection to GCM server is ok and the server has responded. If the Google API key is wrong or the IP address of the server machine is not white listed at Google GCM server. Then we will get, \r\nUnauthorized Error 401\r\nIn this example, passed data must be a JSON array, check if the arguments are being sent in the expected format. We may get error, \r\nField "data" must be a JSON array:\r\n   */\r\n?>\r\n\r\n\r\n\r\n\r\n// GCMRegId.txt   ( A FILE TO STORE REGISTRATION ID IN )\r\n\r\nexample id:  APA91bEJma4fvE3v7jCfzN083-47n6KNii-REZfbQUDJue2l4Gs9birZ3GjnxabJSWZIIwWDReqox1cnCo7LzjRtaMB2BM7ZDXyBIprilRcAV9kZYv9qd6MuNyJdyvd2pYE_OIvXu_o748zEDh7zIM_Kn4Jc521G0PhVLHrJ1PuTEy-MpT0EjbY\r\n', '2014-04-08 13:39:29'),
(113, ' iOS', 'APNS Push Notifications', ' \r\n\r\n\r\n// iOS\r\n\r\n// bundle id:\r\n\r\n\r\n// appdelegate.m\r\n\r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\r\n	// Let the device know we want to receive push notifications\r\n	[[UIApplication sharedApplication] registerForRemoteNotificationTypes:\r\n     (UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeSound | UIRemoteNotificationTypeAlert)];\r\n    \r\n    return YES;\r\n}\r\n\r\n- (void)application:(UIApplication*)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData*)deviceToken\r\n{\r\n	NSLog(@"My token is: %@", deviceToken);\r\n    // My token is: <d39c578b 8d9f9ae8 77897bf0 2baf4691 c705a79c 15b78a7b c9c9dbde 41da73bd>\r\n}\r\n\r\n- (void)application:(UIApplication*)application didFailToRegisterForRemoteNotificationsWithError:(NSError*)error\r\n{\r\n	NSLog(@"Failed to get token, error: %@", error);\r\n}\r\n\r\n\r\n// server PHP\r\nsimplepush.php\r\n<?php\r\n\r\n// Put your device token here (without spaces):\r\n$deviceToken = "d39c578b8d9f9ae877897bf02baf4691c705a79c15b78a7bc9c9dbde41da73bd";\r\n\r\n// Put your private key"s passphrase here:\r\n$passphrase = "pushchat";\r\n\r\n// Put your alert message here:\r\n$message = "My first push notification!";\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\n$ctx = stream_context_create();\r\nstream_context_set_option($ctx, "ssl", "local_cert", "ck.pem");\r\nstream_context_set_option($ctx, "ssl", "passphrase", $passphrase);\r\n\r\n// Open a connection to the APNS server\r\n$fp = stream_socket_client(\r\n	"ssl://gateway.sandbox.push.apple.com:2195", $err,\r\n	$errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);\r\n\r\nif (!$fp)\r\n	exit("Failed to connect: $err $errstr" . PHP_EOL);\r\n\r\necho "Connected to APNS" . PHP_EOL;\r\n\r\n// Create the payload body\r\n$body["aps"] = array(\r\n	"alert" => $message,\r\n	"sound" => "default"\r\n	);\r\n\r\n// Encode the payload as JSON\r\n$payload = json_encode($body);\r\n\r\n// Build the binary notification\r\n$msg = chr(0) . pack("n", 32) . pack("H*", $deviceToken) . pack("n", strlen($payload)) . $payload;\r\n\r\n// Send it to the server\r\n$result = fwrite($fp, $msg, strlen($msg));\r\n\r\nif (!$result)\r\n	echo "Message not delivered" . PHP_EOL;\r\nelse\r\n	echo "Message successfully delivered" . PHP_EOL;\r\n\r\n// Close the connection to the server\r\nfclose($fp);\r\n?>\r\n\r\n\r\n// ALSO HAVE "ck.pem" IN THE SAME DIRECTORY \r\n\r\n\r\n\r\n// THE HARD PART:\r\n// getting the certification all lined up properly and the keys created with their own passwords and such...\r\n\r\nhttp://www.raywenderlich.com/32960/apple-push-notification-services-in-ios-6-tutorial-part-1\r\n\r\n\r\n//CSR create one of these for the app using the keychains "create ceritficate from certificate authority\r\n\r\n<step one>\r\n... If you go to the Keys section of Keychain Access, you will see that a new private key has appeared in your keychain. Right click it and choose Export.\r\nSave the private key as PushChatKey.p12 and enter a passphrase.\r\nFor the convenience of this tutorial, I used the passphrase “pushchat” to protect the p12 file but you should really choose something that is less easy to guess. The private key needs to be a secret, remember? Do choose a passphrase that you can recall, or you won’t be able to use the private key later.\r\n</step one>\r\n\r\n\r\n<step two>\r\ncreate an app id\r\nWITH push notifications checkbox\r\nonce created, open it up again inside apples developer site.\r\nEDIT it so as to create a Development SSL Certificate ( OR production if necessary)\r\n\r\nupload the CSR you created earlier\r\nGENERATE the ssl cert\r\ndownload the SSL CERT\r\naps_development.cer\r\n\r\n</step two>\r\n\r\n\r\n<step 3>\r\nNow you"ve got to use terminal and do some converting .pem and .p12 files.\r\nnavigate to your files...\r\n\r\nConvert the .cer file into a .pem file:\r\n$ openssl x509 -in aps_development.cer -inform der -out PushChatCert.pem\r\nConvert the private key’s .p12 file into a .pem file:\r\n$ openssl pkcs12 -nocerts -out PushChatKey.pem -in PushChatKey.p12\r\nEnter Import Password: \r\nMAC verified OK\r\nEnter PEM pass phrase: \r\nVerifying - Enter PEM pass phrase: \r\nYou first need to enter the passphrase for the .p12 file so that openssl can read it. Then you need to enter a new passphrase that will be used to encrypt the PEM file. Again for this tutorial I used “pushchat” as the PEM passphrase. You should choose something more secure.\r\nNote: if you don’t enter a PEM passphrase, openssl will not give an error message but the generated .pem file will not have the private key in it.\r\nFinally, combine the certificate and key into a single .pem file:\r\n$ cat PushChatCert.pem PushChatKey.pem > ck.pem\r\nAt this point it’s a good idea to test whether the certificate works. Execute the following command:\r\n$ telnet gateway.sandbox.push.apple.com 2195\r\nTrying 17.172.232.226...\r\nConnected to gateway.sandbox.push-apple.com.akadns.net.\r\nEscape character is "^]".\r\nThis tries to make a regular, unencrypted, connection to the APNS server. If you see the above response, then your Mac can reach APNS. Press Ctrl+C to close the connection. If you get an error message, then make sure your firewall allows outgoing connections on port 2195.\r\nLet’s try connecting again, this time using our SSL certificate and private key to set up a secure connection:\r\n$ openssl s_client -connect gateway.sandbox.push.apple.com:2195 \r\n    -cert PushChatCert.pem -key PushChatKey.pem\r\nEnter pass phrase for PushChatKey.pem: \r\nYou should see a whole bunch of output, which is openssl letting you know what is going on under the hood.\r\nIf the connection is successful, you should be able to type a few characters. When you press enter, the server should disconnect. If there was a problem establishing the connection, openssl will give you an error message but you may have to scroll up through the output to find it.\r\n\r\n</step 3>\r\n\r\n\r\n<step 4>\r\ngenerate a provisioning profile for the app.\r\nmake sure you"ve got the bundle id correct  and any of the normal stuff.\r\n</step 4>\r\n\r\n\r\n<step 5>\r\n...And with the obj-c code above, and the altered PHP service code above,\r\nyou should be off to a nice start.\r\n</step 5>\r\n', '2014-04-08 19:56:22'),
(116, 'unix', ' search algorithms', 'code search algoritms:\r\n\r\n>find filename\r\n	$ cd itc\r\n	$ ls\r\n\r\n	>find text in file\r\n		$ grep "textToFind" filename.php \r\n	>find by file extension\r\n		ls *php\r\n\r\n>list directories only\r\n	ls -d */\\\r\n\r\n>find SQL statement\r\n\r\n	$ grep "SELECT" filename.php\r\n\r\n>database\r\n	show databases;\r\n	use databaseName;\r\n\r\n>table\r\n	use databaseName;\r\n	show tables;\r\n	>table structure\r\n		show columns from tableName;\r\n\r\n>host name\r\n	$ hostname', '2014-05-27 19:40:27'),
(117, ' php', ' code report', '<!--\r\ncode_report:\r\npurpose:\r\nlog errors, show variables.\r\nhow to:\r\ninclude at the bottom of every file you are concerned with.\r\ninclude_once(''code_report.php'');\r\n// make sure you''ve got the path to it set right.\r\n-->\r\n\r\n<style>\r\n	.cr_controls {\r\n		color: white;\r\n		font-family: courier;\r\n		 font-weight:bold;\r\n		font-size: 15px;\r\n	}\r\n	.cr_container {\r\n		border: solid black 2px;\r\n		position: fixed;\r\n		bottom: 0;\r\n		background: #222222;\r\n		width: 100%;\r\n	}\r\n	.cr_location{\r\n		margin-right:30px;\r\n		float:right;\r\n	}\r\n	.cr_content {\r\n		width: 98%;\r\n		display:none;\r\n	}\r\n	.cr_div {\r\n		border: solid black 2px;\r\n		padding: 2px;\r\n		font-family: courier;\r\n		font-size: 14px;\r\n		color: blue;\r\n		background-color: #dddddd;\r\n	}\r\n	.cr_textarea {\r\n		margin-left: 10px;\r\n		font-size: 15px;\r\n		background: black;\r\n		color: green;\r\n		width: 99%;\r\n		height: 35px;\r\n	}\r\n</style>\r\n<?php // inside the php script "code"...\r\n	error_reporting(E_ALL | E_STRICT);\r\n	// display errors\r\n	ini_set(''display_errors'', 1);\r\n	//Log errors.\r\n	ini_set(''log_errors'', 1);\r\n	// No error log message max.\r\n	ini_set(''log_errors_max_len'', 0);\r\n	// Specify log file.\r\n	ini_set(''error_log'', ''cr_error_log.txt'');\r\n	//===================================\r\n?>\r\n\r\n<?php //================================================================================\r\necho("<div class=''cr_container''>");\r\necho("<div class=''cr_controls''> Code Report: <label>show<input id=''show_hide'' onclick=''show_hide()'' type=''checkbox'' name=''show_hide''  /></label><div class=''cr_location''>Location: ".$_SERVER["SCRIPT_NAME"]."</div></div> ");\r\n\r\n//===============================================================================\r\necho("<div id = ''cr_content'' class=''cr_content''>");\r\necho("<div class=''cr_div''> php includes:</div>");\r\necho("<textarea class = ''cr_textarea'' style = ''color:orange;'' >");\r\necho("INCLUDED FILES:");\r\nvar_dump(get_included_files());\r\necho("</textarea>");\r\n\r\n//================================================================================\r\necho("<div class=''cr_div''> php app variables:</div>");\r\n// hopefully just developer created values.\r\necho("<textarea class = ''cr_textarea'' style = ''color:white;''>");\r\n\r\n// list of keys to ignore (including the name of this variable)\r\n$ignoreStandard = array(''GLOBALS'', ''_SESSION'', ''_FILES'', ''_COOKIE'', ''_SERVER'', ''_ENV'', ''HTTP_ENV_VARS'', \r\n''SHELL'', ''TMPDIR'', ''USER'', ''COMMAND_MODE'', ''SQLiteManager_currentLangue'', ''HTTP_USER_AGENT'', \r\n''HTTP_SERVER_VARS'', ''HTTP_COOKIE_VARS'', ''_REQUEST'', ''HTTP_POST_VARS'', ''HTTP_GET_VARS'', ''HTTP_POST_FILES'', \r\n''HTTP_SESSION_VARS'' );\r\n\r\n$ignoreCustom = array(''GLOBALS'', ''_SESSION'', ''_FILES'', ''_COOKIE'', ''_SERVER'', ''_ENV'', ''HTTP_ENV_VARS'', \r\n''SHELL'', ''TMPDIR'', ''USER'', ''COMMAND_MODE'', ''SQLiteManager_currentLangue'', ''HTTP_USER_AGENT'', \r\n''HTTP_SERVER_VARS'', ''HTTP_COOKIE_VARS'', ''_REQUEST'', ''HTTP_POST_VARS'', ''HTTP_GET_VARS'', ''HTTP_POST_FILES'', \r\n''HTTP_SESSION_VARS'',  ''connections'',''__combobox_initialization_code'',''statusByIndex'',''statusByName'',\r\n''html'',''server_mode'',''page_includes'',''theUser'');\r\n\r\n$definedVars = get_defined_vars();\r\n$ignoreArray = $ignoreCustom;\r\nfor ($i = 0; $i < count($ignoreArray); $i++) {\r\n	unset($definedVars[$ignoreArray[$i]]);\r\n}\r\n$vars = $definedVars;\r\nprint_r(var_dump($vars));\r\necho("</textarea>");\r\n\r\n//============\r\necho("<div class=''cr_div''> php errors:</div>");\r\necho("<textarea class = ''cr_textarea'' style = ''color:yellow;'' >");\r\n//echo("ERROR:");\r\n//var_dump($error)\r\necho("DEBUG BACKTRACE:");\r\nvar_dump(debug_backtrace());\r\n//echo("LAST ERROR:");\r\n//print_r(error_get_last());\r\necho("</textarea>");\r\n//================================================================================\r\necho("<div class=''cr_div''> php system variables:</div>");\r\necho("<textarea class = ''cr_textarea'' style=''''>");\r\nprint_r(get_defined_vars());\r\necho("</textarea>");\r\n//=================================================================================\r\necho("</div>");\r\n//end content\r\n//=================================================================================\r\necho("</div>");\r\n//end container\r\n?>\r\n\r\n<?php\r\nfunction crQueryTime($sql,$startTime){\r\n	$endTime = microtime();\r\n		$queryTime = $endTime - $startTime;\r\n		echo("</br>Query Time:</br>".$queryTime."</br>SQL:</br>".$sql);\r\n		//use case: place start time before query call ie. $startTime = microtime();\r\n		// then send the $sql and the $startTime parameters to the method.\r\n}\r\n\r\n?>\r\n<script>\r\n	function show_hide() {\r\n		if (document.getElementById("show_hide").checked == true) {\r\n			document.getElementById("cr_content").style.display = "block";\r\n		} else {\r\n			document.getElementById("cr_content").style.display = "none";\r\n		}\r\n	}\r\n</script>', '2014-06-18 20:06:20'),
(118, 'js', 'json_encode', '  <?php \r\n/*\r\n * 1) get mysql data via php\r\n * 2) json_encode php array of data\r\n * 3) echo out js that \r\n * 		a) defines the json as a var\r\n * 		b) create a select with js while looping through json\r\n * 		c) write a js function that can respond to the onChange event of the select\r\n * 4) (?) what would an ajax version of this look like?\r\n * */\r\ninclude_once(''code_to_html.php'');\r\necho("<div><a href=''../util_index.php'' >studys</a></div>");\r\nfunction connect() {\r\n	mysql_connect(''localhost'', ''root'', '''');\r\n}\r\nfunction getData($table_name) {\r\n	connect();\r\n	$sql = "select * from tickets.$table_name";\r\n	$result = mysql_query($sql);\r\n	while ($row = mysql_fetch_assoc($result)) {\r\n		$data[] = $row;\r\n	}\r\n	return $data;\r\n}\r\n$data = getData("command_types");\r\n$json = json_encode($data);\r\necho($json);\r\necho(''\r\n<script>\r\nvar x_json = ''.$json.'' ;\r\nvar select = "<div><select id=\\''selection\\'' onChange=\\''foo()\\''>";\r\nfor (var key in x_json) {\r\n  if (x_json.hasOwnProperty(key)) {\r\n	  select += "<option>"+x_json[key]["name"]+"</option>";\r\n  }\r\n}\r\nselect +="</select><div id=\\''newContent\\''></div></div>";\r\ndocument.write(select);\r\n\r\nfunction foo(){\r\n	/*document.write(document.getElementById(\\''selection\\'').value);*/\r\n	alert(document.getElementById(\\''selection\\'').value);\r\n}\r\n</script>\r\n'');\r\nCodeToHtml::viewCode("json_encode.php");\r\ninclude_once(''../code_report.php'');\r\n?>\r\n', '2014-06-18 20:00:39'),
(119, ' php', 'session object', ' <?php\r\nsession_start();\r\necho("<div><a href=''../util_index.php'' >studys</a></div>");\r\nclass FBF_SESSION{\r\n	public $username;\r\n	public function __construct(){\r\n		$this->username =$_SESSION[''data''][''user''][''name''] = "class monkey";\r\n		$_SESSION[''data''][''object'']= $this;\r\n	}\r\n	public function setUsername($username){\r\n		$this->username = $username;\r\n	}\r\n	public function show(){\r\n		$html = ''<pre>'';\r\n		$html .= print_r($_SESSION);\r\n		$html .= ''</pre>'';\r\n		echo($html);\r\n	}\r\n}\r\n$fbf_session  = new FBF_SESSION();\r\n$fbf_session->show();\r\n$fbf_session->setUsername("bayon forte");\r\n$fbf_session->show();\r\n\r\ninclude_once(''code_to_html.php'');\r\nCodeToHtml::viewCode(''session_object_study.php'');\r\ninclude_once(''../code_report.php'');\r\n?>\r\n', '2014-06-18 20:02:21'),
(120, 'phpJsonJs', ' convert json', '<html>\r\n	<body>\r\n<script>\r\n//js object has to be declared first...\r\n	function User(username, password) {\r\n		this.username = username;\r\n		this.password = password;\r\n	}\r\n	User.prototype.username = '''';\r\n	User.prototype.password = '''';\r\n	//this function should really be in a class of SELECT or something\r\n	User.prototype.makeSelect2 = function(user) {\r\n		var select = "<div><select id=\\''selection\\'' onChange=\\''foo()\\''>";\r\n		select += "<option value=''" + user.password + "'' >" + user.username + "</option>";\r\n		select += "<option value=''555'' >Mack</option>";\r\n		select += "<option value=''999'' >Jim</option>";\r\n		select += "</select><div id=\\''newContent\\''></div></div>";\r\n		document.write(select);\r\n	};\r\n	\r\n	function foo(){\r\n		alert(document.getElementById(''selection'').value);\r\n	}\r\n	\r\n</script>\r\n		<?php\r\n	include_once (''code_to_html.php'');\r\n	echo("<div><a href=''../util_index.php'' >studys</a></div>");\r\n	class User {\r\n		private $username;\r\n		private $password;\r\n		public function __construct() {\r\n		}\r\n		public function setUsername($username) {\r\n			$this -> username = $username;\r\n		}\r\n		public function getUsername() {\r\n			return $this -> username;\r\n		}\r\n		public function setPassword($password) {\r\n			$this -> password = $password;\r\n		}\r\n		public function getPassword() {\r\n			return $this -> password;\r\n		}\r\n	}\r\n\r\n	$user = new User();\r\n	$user -> setUsername("Joe");\r\n	$user -> setPassword("1234");\r\n	echo("<br>User:" . $user -> getUsername() . " | Password:" . $user -> getPassword() . "");\r\n	echo("\r\n	<script>\r\n	user = new User(''" . $user -> getUsername() . "'', ''" . $user -> getPassword() . "'');\r\n	user.makeSelect2(user);\r\n	</script>\r\n");\r\n	CodeToHtml::viewCode("objects_php_to_js.php");\r\n	include_once (''../code_report.php'');\r\n?>\r\n	</body>\r\n</html>\r\n\r\n\r\n', '2014-06-18 20:58:43'),
(121, ' jquery', ' jqGrid', '  \r\n<html>\r\n	<head>\r\n		<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/themes/base/jquery-ui.css">\r\n		<link rel="stylesheet" type="text/css" href="http://trirand.com/blog/jqgrid/themes/ui.jqgrid.css">\r\n		<script src="http://code.jquery.com/jquery-latest.min.js" type="text/javascript"></script>\r\n		<script src="http://trirand.com/blog/jqgrid/js/jquery.jqGrid.min.js" ></script>\r\n		<script src="http://trirand.com/blog/jqgrid/js/i18n/grid.locale-en.js" ></script>\r\n	\r\n	</head>\r\n	<style>\r\n		.myGrid{\r\n			width:100%;\r\n		}\r\n	</style>\r\n	<body>\r\n		<table id="grid"  ></table>\r\n	</body>\r\n</html>\r\n<script>\r\n \r\n	var data = [[48803, "DSK1", "", "02200220", "OPEN"], [48769, "APPR", "", "77733337", "ENTERED"]];\r\n\r\n	$("#grid").jqGrid({\r\n		datatype : "local",\r\n		height : 250,\r\n		colNames : [''Inv No'', ''Thingy'', ''Blank'', ''Number'', ''Status''],\r\n		colModel : [{\r\n			name : ''id'',\r\n			index : ''id'',\r\n			width : 80,\r\n			sorttype : "int"\r\n		}, {\r\n			name : ''thingy'',\r\n			index : ''thingy'',\r\n			width : 100,\r\n			sorttype : "date"\r\n		}, {\r\n			name : ''blank'',\r\n			index : ''blank'',\r\n			width : 50\r\n		}, {\r\n			name : ''number'',\r\n			index : ''number'',\r\n			width : 90,\r\n			sorttype : "float"\r\n		}, {\r\n			name : ''status'',\r\n			index : ''status'',\r\n			width : 90,\r\n			sorttype : "float"\r\n		}],\r\n		caption : "Stack Overflow Example",\r\n		// ondblClickRow: function(rowid,iRow,iCol,e){alert(''double clicked'');}\r\n	});\r\n\r\n	var names = ["id", "thingy", "blank", "number", "status"];\r\n	var mydata = [];\r\n\r\n	for (var i = 0; i < data.length; i++) {\r\n		mydata[i] = {};\r\n		for (var j = 0; j < data[i].length; j++) {\r\n			mydata[i][names[j]] = data[i][j];\r\n		}\r\n	}\r\n\r\n	for (var i = 0; i <= mydata.length; i++) {\r\n		$("#grid").jqGrid(''addRowData'', i + 1, mydata[i]);\r\n	}\r\n\r\n	/*\r\n	 $("#grid").jqGrid(''setGridParam'', {onSelectRow: function(rowid,iRow,iCol,e){alert(''row clicked'');}});\r\n	 */\r\n</script>', '2014-06-18 20:43:31'),
(122, ' js ajax', ' postAjaxForm', ' function postAjaxForm(dataString,controller,receiverId) {\r\n	//alert(dataString + controller + receiverId);\r\n	 /*\r\n	  * This method \r\n	  * 1) passes the dataString to the controller\r\n	  * 2) receives whatever html response the controller generates \r\n	  * 3) returns the html to the element with the id = ''receiverId''.\r\n	  */\r\n	var xmlhttp;\r\n	if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari\r\n		xmlhttp = new XMLHttpRequest();\r\n	} else {// code for IE6, IE5\r\n		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");\r\n	}\r\n	xmlhttp.onreadystatechange = function() {\r\n		//alert(''ready state:''+xmlhttp.readyState+''status:''+xmlhttp.status);\r\n		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n			document.getElementById(receiverId).innerHTML = xmlhttp.responseText;\r\n			//alert(''response:''+xmlhttp.responseText);\r\n		}\r\n	}\r\n	//alert(''controller:''+controller);\r\n	xmlhttp.open("POST", controller, true);\r\n	xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");\r\n	//alert(''data string:''+dataString);\r\n	xmlhttp.send(dataString);\r\n}\r\n\r\n \r\n \r\n\r\n/* for GET add data arguments to the controller filename...?fname=Henry&lname=Ford" */\r\nfunction loadDoc(filename,receiverId) {\r\n	var xmlhttp;\r\n	if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari\r\n		xmlhttp = new XMLHttpRequest();\r\n	} else {// code for IE6, IE5\r\n		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");\r\n	}\r\n	xmlhttp.onreadystatechange = function() {\r\n		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n			document.getElementById(receiverId).innerHTML = xmlhttp.responseText;\r\n		}\r\n	}\r\n	xmlhttp.open("GET", filename, true);\r\n	xmlhttp.send();\r\n}\r\n', '2014-06-19 10:40:08');
INSERT INTO `Task` (`id`, `os`, `title`, `description`, `date`) VALUES
(123, ' php', ' class viewer', ' <!-- ================================================================\r\n		Describe PHP Object:\r\n		See get_class_methods() and get_class_vars(). -->\r\n		\r\n		<?php $classes = get_declared_classes();\r\n		asort($classes);\r\n		?>\r\n			<style>\r\n				.TableX_container {\r\n					width: 100%;\r\n					height: 200px;\r\n					max-height: 200px;\r\n					overflow-y: scroll;\r\n					border: solid 1px #cccccc;\r\n					background-color: #ffffff;\r\n					float: left;\r\n				}\r\n				.TableX {\r\n					font-family: arial;\r\n					text-align: left;\r\n					background-color: #ffffff;\r\n				}\r\n				.TableX tr {\r\n					height: 25px;\r\n				}\r\n				.TableX thead {\r\n					background-color: #0ff000;\r\n				}\r\n				.TableX thead th {\r\n					padding-left: 10px;\r\n				}\r\n				.TableX tbody {\r\n					height: 200px;\r\n					overflow: hidden;\r\n					overflow-y: auto;\r\n					max-height: 200px;\r\n				}\r\n				.TableX  tr:hover {\r\n					background-color: #eeeeee;\r\n				}\r\n				.TableX  td {\r\n					padding-left: 5px;\r\n					border-bottom: solid 1px #cccccc;\r\n				}\r\n				.TableX tfoot {\r\n					background-color: #0ff000;\r\n				}\r\n				.TableX tfoot td {\r\n					text-align: center;\r\n					padding-left: 10px;\r\n				}\r\n				.floater {\r\n				float: left;\r\n				width:45%;\r\n				 \r\n			}\r\n			.floaterR {\r\n				float: right;\r\n				width:45%;\r\n				 \r\n			}\r\n			.scroller {\r\n				width: 100%;\r\n				overflow-y: scroll;\r\n				height: 40px;\r\n			}\r\n			.scrollee {\r\n				float: left;\r\n				width: 100%;\r\n			}\r\n			</style>\r\n			<div>\r\n				<div class="floater">Classes</div>\r\n				<div class="floaterR">Methods</div>\r\n			</div>\r\n			<div class="TableX_container">\r\n				<table class="TableX" border="0" cellpadding="0" cellspacing="0" width="98%"  >\r\n					 <?php\r\n						foreach ($classes as $k => $v) {\r\n							echo("<tr> <td>");\r\n							echo("<div class=''floater''>" . $v . " </div>");\r\n							\r\n							echo("<div class=''floaterR''> <select style=''width:95%''>");\r\n							$methods = get_class_methods($v);\r\n							asort($methods);\r\n							foreach($methods as $key=>$val){\r\n								echo("<option>".$val."</option>");\r\n							}\r\n							echo(" </select> </div> ");\r\n							echo("</td> </tr>");\r\n						}\r\n						?>\r\n				</table>\r\n			</div>\r\n			\r\n			<div style =''height:200px;''>\r\n				--\r\n			</div>\r\n			<!-- =======================================================  -->', '2014-06-24 17:15:21');
